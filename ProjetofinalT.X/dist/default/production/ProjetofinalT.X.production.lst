

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 31 20:49:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.32
    47                           ; Generated 02/02/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4520 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  001B64                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F2672
    87  001B64  62                 	db	98
    88  001B65  70                 	db	112
    89  001B66  6D                 	db	109
    90                           
    91                           	psect	idataBANK0
    92  001A86                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for main@F2676
    96  001A86  33                 	db	51
    97  001A87  2D                 	db	45
    98  001A88  20                 	db	32
    99  001A89  43                 	db	67
   100  001A8A  72                 	db	114
   101  001A8B  6F                 	db	111
   102  001A8C  6E                 	db	110
   103  001A8D  6F                 	db	111
   104  001A8E  6D                 	db	109
   105  001A8F  65                 	db	101
   106  001A90  74                 	db	116
   107  001A91  72                 	db	114
   108  001A92  6F                 	db	111
   109  001A93  20                 	db	32
   110  001A94  00                 	db	0
   111  001A95  00                 	db	0
   112  001A96  00                 	db	0
   113  001A97  00                 	db	0
   114  001A98  00                 	db	0
   115  001A99  00                 	db	0
   116  001A9A  00                 	db	0
   117  001A9B  00                 	db	0
   118  001A9C  00                 	db	0
   119  001A9D  00                 	db	0
   120                           
   121                           ;initializer for main@F2668
   122  001A9E  73                 	db	115
   123  001A9F  65                 	db	101
   124  001AA0  6A                 	db	106
   125  001AA1  61                 	db	97
   126  001AA2  20                 	db	32
   127  001AA3  62                 	db	98
   128  001AA4  65                 	db	101
   129  001AA5  6D                 	db	109
   130  001AA6  20                 	db	32
   131  001AA7  76                 	db	118
   132  001AA8  69                 	db	105
   133  001AA9  6E                 	db	110
   134  001AAA  64                 	db	100
   135  001AAB  6F                 	db	111
   136  001AAC  00                 	db	0
   137                           
   138                           ;initializer for main@F2670
   139  001AAD  31                 	db	49
   140  001AAE  2D                 	db	45
   141  001AAF  20                 	db	32
   142  001AB0  42                 	db	66
   143  001AB1  61                 	db	97
   144  001AB2  74                 	db	116
   145  001AB3  69                 	db	105
   146  001AB4  6D                 	db	109
   147  001AB5  65                 	db	101
   148  001AB6  6E                 	db	110
   149  001AB7  74                 	db	116
   150  001AB8  6F                 	db	111
   151                           
   152                           ;initializer for main@F2678
   153  001AB9  34                 	db	52
   154  001ABA  2D                 	db	45
   155  001ABB  20                 	db	32
   156  001ABC  68                 	db	104
   157  001ABD  6F                 	db	111
   158  001ABE  72                 	db	114
   159  001ABF  61                 	db	97
   160  001AC0  73                 	db	115
   161                           
   162                           ;initializer for main@F2674
   163  001AC1  32                 	db	50
   164  001AC2  2D                 	db	45
   165  001AC3  20                 	db	32
   166  001AC4  50                 	db	80
   167  001AC5  61                 	db	97
   168  001AC6  73                 	db	115
   169  001AC7  73                 	db	115
   170  001AC8  6F                 	db	111
   171                           
   172                           	psect	smallconst
   173  000600                     __psmallconst:
   174                           	callstack 0
   175  000600  00                 	db	0
   176  000601                     _valor:
   177                           	callstack 0
   178  000601  3F                 	db	63
   179  000602  06                 	db	6
   180  000603  5B                 	db	91
   181  000604  4F                 	db	79
   182  000605  66                 	db	102
   183  000606  6D                 	db	109
   184  000607  7D                 	db	125
   185  000608  07                 	db	7
   186  000609  7F                 	db	127
   187  00060A  6F                 	db	111
   188  00060B  77                 	db	119
   189  00060C  7C                 	db	124
   190  00060D  39                 	db	57
   191  00060E  5E                 	db	94
   192  00060F  79                 	db	121
   193  000610  71                 	db	113
   194  000611                     __end_of_valor:
   195                           	callstack 0
   196  0000                     _RCREG	set	4014
   197  0000                     _PIR1bits	set	3998
   198  0000                     _TXREG	set	4013
   199  0000                     _RCSTAbits	set	4011
   200  0000                     _TXSTAbits	set	4012
   201  0000                     _SPBRG	set	4015
   202  0000                     _PORTCbits	set	3970
   203  0000                     _TRISCbits	set	3988
   204  0000                     _TRISE	set	3990
   205  0000                     _TRISC	set	3988
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISA	set	3986
   208  0000                     _PORTE	set	3972
   209  0000                     _PORTC	set	3970
   210  0000                     _PORTB	set	3969
   211  0000                     _PORTA	set	3968
   212  0000                     _PORTD	set	3971
   213  0000                     _TRISD	set	3989
   214  000611  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  001868                     __pcinit:
   220                           	callstack 0
   221  001868                     start_initialization:
   222                           	callstack 0
   223  001868                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK0 (67 bytes)
   227                           ; load TBLPTR registers with __pidataBANK0
   228  001868  0E86               	movlw	low __pidataBANK0
   229  00186A  6EF6               	movwf	tblptrl,c
   230  00186C  0E1A               	movlw	high __pidataBANK0
   231  00186E  6EF7               	movwf	tblptrh,c
   232  001870  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   233  001872  6EF8               	movwf	tblptru,c
   234  001874  EE00  F080         	lfsr	0,__pdataBANK0
   235  001878  EE10 F043          	lfsr	1,67
   236  00187C                     copy_data0:
   237  00187C  0009               	tblrd		*+
   238  00187E  CFF5 FFEE          	movff	tablat,postinc0
   239  001882  50E5               	movf	postdec1,w,c
   240  001884  50E1               	movf	fsr1l,w,c
   241  001886  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to COMRAM (3 bytes)
   244                           ; load TBLPTR registers with __pidataCOMRAM
   245  001888  0E64               	movlw	low __pidataCOMRAM
   246  00188A  6EF6               	movwf	tblptrl,c
   247  00188C  0E1B               	movlw	high __pidataCOMRAM
   248  00188E  6EF7               	movwf	tblptrh,c
   249  001890  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   250  001892  6EF8               	movwf	tblptru,c
   251  001894  0009               	tblrd		*+	;fetch initializer
   252  001896  CFF5 F07B          	movff	tablat,__pdataCOMRAM
   253  00189A  0009               	tblrd		*+	;fetch initializer
   254  00189C  CFF5 F07C          	movff	tablat,__pdataCOMRAM+1
   255  0018A0  0009               	tblrd		*+	;fetch initializer
   256  0018A2  CFF5 F07D          	movff	tablat,__pdataCOMRAM+2
   257                           
   258                           ; Clear objects allocated to BANK0 (20 bytes)
   259  0018A6  EE00  F0C3         	lfsr	0,__pbssBANK0
   260  0018AA  0E14               	movlw	20
   261  0018AC                     clear_0:
   262  0018AC  6AEE               	clrf	postinc0,c
   263  0018AE  06E8               	decf	wreg,f,c
   264  0018B0  E1FD               	bnz	clear_0
   265                           
   266                           ; Clear objects allocated to COMRAM (12 bytes)
   267  0018B2  EE00  F06F         	lfsr	0,__pbssCOMRAM
   268  0018B6  0E0C               	movlw	12
   269  0018B8                     clear_1:
   270  0018B8  6AEE               	clrf	postinc0,c
   271  0018BA  06E8               	decf	wreg,f,c
   272  0018BC  E1FD               	bnz	clear_1
   273  0018BE                     end_of_initialization:
   274                           	callstack 0
   275  0018BE                     __end_of__initialization:
   276                           	callstack 0
   277  0018BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  0018C0  6EF8               	movwf	tblptru,c
   279  0018C2  0100               	movlb	0
   280  0018C4  EF09  F003         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMRAM
   283  00006F                     __pbssCOMRAM:
   284                           	callstack 0
   285  00006F                     kpDebounce@valorAntigo:
   286                           	callstack 0
   287  00006F                     	ds	2
   288  000071                     kpDebounce@valorNovo:
   289                           	callstack 0
   290  000071                     	ds	2
   291  000073                     _valor@keypad$F112:
   292                           	callstack 0
   293  000073                     	ds	2
   294  000075                     kpDebounce@tempo:
   295                           	callstack 0
   296  000075                     	ds	1
   297  000076                     _v3:
   298                           	callstack 0
   299  000076                     	ds	1
   300  000077                     _v2:
   301                           	callstack 0
   302  000077                     	ds	1
   303  000078                     _v1:
   304                           	callstack 0
   305  000078                     	ds	1
   306  000079                     _v0:
   307                           	callstack 0
   308  000079                     	ds	1
   309  00007A                     _display:
   310                           	callstack 0
   311  00007A                     	ds	1
   312                           
   313                           	psect	dataCOMRAM
   314  00007B                     __pdataCOMRAM:
   315                           	callstack 0
   316  00007B                     main@F2672:
   317                           	callstack 0
   318  00007B                     	ds	3
   319                           
   320                           	psect	bssBANK0
   321  0000C3                     __pbssBANK0:
   322                           	callstack 0
   323  0000C3                     _time:
   324                           	callstack 0
   325  0000C3                     	ds	10
   326  0000CD                     _date:
   327                           	callstack 0
   328  0000CD                     	ds	10
   329                           
   330                           	psect	dataBANK0
   331  000080                     __pdataBANK0:
   332                           	callstack 0
   333  000080                     main@F2676:
   334                           	callstack 0
   335  000080                     	ds	24
   336  000098                     main@F2668:
   337                           	callstack 0
   338  000098                     	ds	15
   339  0000A7                     main@F2670:
   340                           	callstack 0
   341  0000A7                     	ds	12
   342  0000B3                     main@F2678:
   343                           	callstack 0
   344  0000B3                     	ds	8
   345  0000BB                     main@F2674:
   346                           	callstack 0
   347  0000BB                     	ds	8
   348                           
   349                           	psect	cstackCOMRAM
   350  000001                     __pcstackCOMRAM:
   351                           	callstack 0
   352  000001                     ??_kpDebounce:
   353  000001                     ?_kpRead:
   354                           	callstack 0
   355  000001                     ?___awdiv:
   356                           	callstack 0
   357  000001                     ssdDigit@pos:
   358                           	callstack 0
   359  000001                     Delay40us@i:
   360                           	callstack 0
   361  000001                     getd@nn:
   362                           	callstack 0
   363  000001                     getu@nn:
   364                           	callstack 0
   365  000001                     digitalWrite@pin:
   366                           	callstack 0
   367  000001                     pinMode@pin:
   368                           	callstack 0
   369  000001                     delay@i:
   370                           	callstack 0
   371  000001                     atraso_ms@valor:
   372                           	callstack 0
   373  000001                     ___awdiv@dividend:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x0
   377  000001                     	ds	1
   378  000002                     ssdDigit@val:
   379                           	callstack 0
   380  000002                     Delay2ms@i:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x1
   384  000002                     	ds	1
   385  000003                     delay@j:
   386                           	callstack 0
   387  000003                     digitalWrite@value:
   388                           	callstack 0
   389  000003                     pinMode@type:
   390                           	callstack 0
   391  000003                     atraso_ms@i:
   392                           	callstack 0
   393  000003                     ___awdiv@divisor:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397  000003                     	ds	1
   398  000004                     delay@k:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x3
   402  000004                     	ds	1
   403  000005                     ??_digitalWrite:
   404  000005                     ??_pinMode:
   405  000005                     ??_i2c_wb:
   406  000005                     ??_i2c_rb:
   407  000005                     atraso_ms@j:
   408                           	callstack 0
   409  000005                     ___awdiv@counter:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x4
   413  000005                     	ds	1
   414  000006                     kpDebounce@old_D:
   415                           	callstack 0
   416  000006                     atraso_ms@k:
   417                           	callstack 0
   418  000006                     ___awdiv@sign:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x5
   422  000006                     	ds	1
   423  000007                     ??_ssdUpdate:
   424  000007                     lcdCommand@old_D:
   425                           	callstack 0
   426  000007                     lcdData@valor:
   427                           	callstack 0
   428  000007                     i2c_wb@val:
   429                           	callstack 0
   430  000007                     i2c_rb@ack:
   431                           	callstack 0
   432  000007                     kpDebounce@k:
   433                           	callstack 0
   434  000007                     ___awdiv@quotient:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x6
   438  000007                     	ds	1
   439  000008                     lcdCommand@cmd:
   440                           	callstack 0
   441  000008                     lcdData@old_D:
   442                           	callstack 0
   443  000008                     i2c_wb@i:
   444                           	callstack 0
   445  000008                     i2c_rb@ret:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x7
   449  000008                     	ds	1
   450  000009                     ?___awmod:
   451                           	callstack 0
   452  000009                     kpDebounce@j:
   453                           	callstack 0
   454  000009                     i2c_rb@i:
   455                           	callstack 0
   456  000009                     ___awmod@dividend:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x8
   460  000009                     	ds	1
   461  00000A                     kpDebounce@i:
   462                           	callstack 0
   463  00000A                     rtc_r@tmp:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x9
   467  00000A                     	ds	1
   468  00000B                     ___awmod@divisor:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xA
   472  00000B                     	ds	2
   473  00000D                     ___awmod@counter:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0xC
   477  00000D                     	ds	1
   478  00000E                     ___awmod@sign:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0xD
   482  00000E                     	ds	1
   483  00000F                     main@msg3:
   484                           	callstack 0
   485                           
   486                           ; 24 bytes @ 0xE
   487  00000F                     	ds	24
   488  000027                     main@msg:
   489                           	callstack 0
   490                           
   491                           ; 15 bytes @ 0x26
   492  000027                     	ds	15
   493  000036                     main@msg1:
   494                           	callstack 0
   495                           
   496                           ; 12 bytes @ 0x35
   497  000036                     	ds	12
   498  000042                     main@msg2:
   499                           	callstack 0
   500                           
   501                           ; 8 bytes @ 0x41
   502  000042                     	ds	8
   503  00004A                     main@msg4:
   504                           	callstack 0
   505                           
   506                           ; 8 bytes @ 0x49
   507  00004A                     	ds	8
   508  000052                     main@o:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x51
   512  000052                     	ds	2
   513  000054                     main@batimento:
   514                           	callstack 0
   515                           
   516                           ; 3 bytes @ 0x53
   517  000054                     	ds	3
   518  000057                     main@contp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x56
   522  000057                     	ds	2
   523  000059                     main@k:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x58
   527  000059                     	ds	2
   528  00005B                     main@conte:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x5A
   532  00005B                     	ds	2
   533  00005D                     main@tempo:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x5C
   537  00005D                     	ds	1
   538  00005E                     main@x:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x5D
   542  00005E                     	ds	2
   543  000060                     main@y:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x5F
   547  000060                     	ds	2
   548  000062                     main@cont:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x61
   552  000062                     	ds	2
   553  000064                     main@con:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x63
   557  000064                     	ds	2
   558  000066                     main@batimentos:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x65
   562  000066                     	ds	1
   563  000067                     main@passo:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x66
   567  000067                     	ds	2
   568  000069                     main@tecla:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x68
   572  000069                     	ds	2
   573  00006B                     main@i:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x6A
   577  00006B                     	ds	2
   578  00006D                     main@j:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x6C
   582  00006D                     	ds	2
   583                           
   584 ;;
   585 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   586 ;;
   587 ;; *************** function _main *****************
   588 ;; Defined at:
   589 ;;		line 20 in file "main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  msg3           24   14[COMRAM] unsigned char [24]
   594 ;;  msg            15   38[COMRAM] unsigned char [15]
   595 ;;  msg1           12   53[COMRAM] unsigned char [12]
   596 ;;  msg4            8   73[COMRAM] unsigned char [8]
   597 ;;  msg2            8   65[COMRAM] unsigned char [8]
   598 ;;  batimento       3   83[COMRAM] unsigned char [3]
   599 ;;  j               2  108[COMRAM] int 
   600 ;;  i               2  106[COMRAM] int 
   601 ;;  tecla           2  104[COMRAM] unsigned int 
   602 ;;  passo           2  102[COMRAM] int 
   603 ;;  con             2   99[COMRAM] int 
   604 ;;  cont            2   97[COMRAM] int 
   605 ;;  y               2   95[COMRAM] int 
   606 ;;  x               2   93[COMRAM] int 
   607 ;;  conte           2   90[COMRAM] int 
   608 ;;  k               2   88[COMRAM] int 
   609 ;;  contp           2   86[COMRAM] int 
   610 ;;  o               2   81[COMRAM] unsigned int 
   611 ;;  g               2    0        unsigned int 
   612 ;;  z               2    0        int 
   613 ;;  batimentos      1  101[COMRAM] unsigned char 
   614 ;;  tempo           1   92[COMRAM] unsigned char 
   615 ;;  p               1    0        unsigned char 
   616 ;;  tmp             1    0        unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   626 ;;      Params:         0       0       0       0       0       0       0
   627 ;;      Locals:        96       0       0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0
   629 ;;      Totals:        96       0       0       0       0       0       0
   630 ;;Total ram usage:       96 bytes
   631 ;; Hardware stack levels required when called: 4
   632 ;; This function calls:
   633 ;;		___awdiv
   634 ;;		___awmod
   635 ;;		_atraso_ms
   636 ;;		_i2c_init
   637 ;;		_kpDebounce
   638 ;;		_kpInit
   639 ;;		_kpRead
   640 ;;		_lcdCommand
   641 ;;		_lcdData
   642 ;;		_lcdInit
   643 ;;		_pinMode
   644 ;;		_pwmInit
   645 ;;		_rtc_r
   646 ;;		_ssdDigit
   647 ;;		_ssdInit
   648 ;;		_ssdUpdate
   649 ;; This function is called by:
   650 ;;		Startup code after reset
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text0
   655  000612                     __ptext0:
   656                           	callstack 0
   657  000612                     _main:
   658                           	callstack 27
   659  000612  0E00               	movlw	0
   660  000614  6E53               	movwf	(main@o+1)^0,c
   661  000616  0E00               	movlw	0
   662  000618  6E52               	movwf	main@o^0,c
   663  00061A                     
   664                           ;main.c: 25:     int conte, cont, con, x, y, j, i, contp, z, k, passo;;main.c: 26:     c
      +                          har p, batimentos;;main.c: 27:     char msg[15] = {"seja bem vindo"};
   665  00061A  EE20  F098         	lfsr	2,main@F2668
   666  00061E  EE10  F027         	lfsr	1,main@msg
   667  000622  0E0E               	movlw	14
   668  000624                     u2181:
   669  000624  CFDB FFE3          	movff	plusw2,plusw1
   670  000628  06E8               	decf	wreg,f,c
   671  00062A  E2FC               	bc	u2181
   672  00062C                     
   673                           ;main.c: 28:     char msg1[12] = {"1- Batimento"};
   674  00062C  EE20  F0A7         	lfsr	2,main@F2670
   675  000630  EE10  F036         	lfsr	1,main@msg1
   676  000634  0E0B               	movlw	11
   677  000636                     u2191:
   678  000636  CFDB FFE3          	movff	plusw2,plusw1
   679  00063A  06E8               	decf	wreg,f,c
   680  00063C  E2FC               	bc	u2191
   681  00063E                     
   682                           ;main.c: 29:     char batimento[3] = {"bpm"};
   683  00063E  C07B  F054         	movff	main@F2672,main@batimento
   684  000642  C07C  F055         	movff	main@F2672+1,main@batimento+1
   685  000646  C07D  F056         	movff	main@F2672+2,main@batimento+2
   686  00064A                     
   687                           ;main.c: 30:     char msg2[8] = {"2- Passos"};
   688  00064A  EE20  F0BB         	lfsr	2,main@F2674
   689  00064E  EE10  F042         	lfsr	1,main@msg2
   690  000652  0E07               	movlw	7
   691  000654                     u2201:
   692  000654  CFDB FFE3          	movff	plusw2,plusw1
   693  000658  06E8               	decf	wreg,f,c
   694  00065A  E2FC               	bc	u2201
   695  00065C                     
   696                           ;main.c: 31:     char msg3[24] = {"3- Cronometro "};
   697  00065C  EE20  F080         	lfsr	2,main@F2676
   698  000660  EE10  F00F         	lfsr	1,main@msg3
   699  000664  0E17               	movlw	23
   700  000666                     u2211:
   701  000666  CFDB FFE3          	movff	plusw2,plusw1
   702  00066A  06E8               	decf	wreg,f,c
   703  00066C  E2FC               	bc	u2211
   704  00066E                     
   705                           ;main.c: 32:     char msg4[8] = {"4- horas"};
   706  00066E  EE20  F0B3         	lfsr	2,main@F2678
   707  000672  EE10  F04A         	lfsr	1,main@msg4
   708  000676  0E07               	movlw	7
   709  000678                     u2221:
   710  000678  CFDB FFE3          	movff	plusw2,plusw1
   711  00067C  06E8               	decf	wreg,f,c
   712  00067E  E2FC               	bc	u2221
   713  000680                     
   714                           ;main.c: 36:     (*(volatile __near unsigned char*)0xF94) = 0x01;
   715  000680  0E01               	movlw	1
   716  000682  6E94               	movwf	148,c	;volatile
   717  000684                     
   718                           ;main.c: 38:     (*(volatile __near unsigned char*)0xF95) = 0x00;
   719  000684  0E00               	movlw	0
   720  000686  6E95               	movwf	149,c	;volatile
   721  000688                     
   722                           ;main.c: 40:     lcdInit();
   723  000688  ECC6  F00B         	call	_lcdInit	;wreg free
   724  00068C                     
   725                           ;main.c: 41:     kpInit();
   726  00068C  ECA9  F00D         	call	_kpInit	;wreg free
   727  000690                     
   728                           ;main.c: 42:     i2c_init();
   729  000690  ECAE  F00D         	call	_i2c_init	;wreg free
   730  000694                     
   731                           ;main.c: 43:     for (j = 0; j < 15; j++) {
   732  000694  0E00               	movlw	0
   733  000696  6E6E               	movwf	(main@j+1)^0,c
   734  000698  0E00               	movlw	0
   735  00069A  6E6D               	movwf	main@j^0,c
   736  00069C                     l2589:
   737                           
   738                           ;main.c: 44:         lcdData(msg[j]);
   739  00069C  0E27               	movlw	low main@msg
   740  00069E  246D               	addwf	main@j^0,w,c
   741  0006A0  6ED9               	movwf	fsr2l,c
   742  0006A2  0E00               	movlw	high main@msg
   743  0006A4  206E               	addwfc	(main@j+1)^0,w,c
   744  0006A6  6EDA               	movwf	fsr2h,c
   745  0006A8  50DF               	movf	indf2,w,c
   746  0006AA  EC19  F00D         	call	_lcdData
   747  0006AE                     
   748                           ;main.c: 45:     }
   749  0006AE  4A6D               	infsnz	main@j^0,f,c
   750  0006B0  2A6E               	incf	(main@j+1)^0,f,c
   751  0006B2  BE6E               	btfsc	(main@j+1)^0,7,c
   752  0006B4  EF65  F003         	goto	u2231
   753  0006B8  506E               	movf	(main@j+1)^0,w,c
   754  0006BA  E109               	bnz	u2230
   755  0006BC  0E0F               	movlw	15
   756  0006BE  5C6D               	subwf	main@j^0,w,c
   757  0006C0  A0D8               	btfss	status,0,c
   758  0006C2  EF65  F003         	goto	u2231
   759  0006C6  EF67  F003         	goto	u2230
   760  0006CA                     u2231:
   761  0006CA  EF4E  F003         	goto	l2589
   762  0006CE                     u2230:
   763  0006CE                     
   764                           ;main.c: 46:     rtc_r();
   765  0006CE  EC10  F00A         	call	_rtc_r	;wreg free
   766  0006D2                     l331:
   767                           
   768                           ;main.c: 55:         lcdCommand(0xC0);
   769  0006D2  0EC0               	movlw	192
   770  0006D4  EC87  F00B         	call	_lcdCommand
   771  0006D8                     
   772                           ;main.c: 57:         (*(volatile __near unsigned char*)0xF80) = 0x00;
   773  0006D8  0E00               	movlw	0
   774  0006DA  6E80               	movwf	128,c	;volatile
   775  0006DC                     
   776                           ;main.c: 58:         (*(volatile __near unsigned char*)0xF83) = 0X00;
   777  0006DC  0E00               	movlw	0
   778  0006DE  6E83               	movwf	131,c	;volatile
   779                           
   780                           ;main.c: 62:         if (((contp / 10000) % 6) == 0) {
   781  0006E0  0E27               	movlw	39
   782  0006E2  6E04               	movwf	(___awdiv@divisor+1)^0,c
   783  0006E4  0E10               	movlw	16
   784  0006E6  6E03               	movwf	___awdiv@divisor^0,c
   785  0006E8  C057  F001         	movff	main@contp,___awdiv@dividend
   786  0006EC  C058  F002         	movff	main@contp+1,___awdiv@dividend+1
   787  0006F0  EC8C  F00A         	call	___awdiv	;wreg free
   788  0006F4  C001  F009         	movff	?___awdiv,___awmod@dividend
   789  0006F8  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   790  0006FC  0E00               	movlw	0
   791  0006FE  6E0C               	movwf	(___awmod@divisor+1)^0,c
   792  000700  0E06               	movlw	6
   793  000702  6E0B               	movwf	___awmod@divisor^0,c
   794  000704  ECEE  F00A         	call	___awmod	;wreg free
   795  000708  5009               	movf	?___awmod^0,w,c
   796  00070A  100A               	iorwf	(?___awmod+1)^0,w,c
   797  00070C  A4D8               	btfss	status,2,c
   798  00070E  EF8B  F003         	goto	u2241
   799  000712  EF8D  F003         	goto	u2240
   800  000716                     u2241:
   801  000716  EF98  F003         	goto	l2607
   802  00071A                     u2240:
   803  00071A                     
   804                           ;main.c: 64:             batimentos++;
   805  00071A  2A66               	incf	main@batimentos^0,f,c
   806  00071C                     
   807                           ;main.c: 66:             if (batimentos > 9) {
   808  00071C  0E09               	movlw	9
   809  00071E  6466               	cpfsgt	main@batimentos^0,c
   810  000720  EF94  F003         	goto	u2251
   811  000724  EF96  F003         	goto	u2250
   812  000728                     u2251:
   813  000728  EF98  F003         	goto	l2607
   814  00072C                     u2250:
   815  00072C                     
   816                           ;main.c: 68:                 batimentos = 0;
   817  00072C  0E00               	movlw	0
   818  00072E  6E66               	movwf	main@batimentos^0,c
   819  000730                     l2607:
   820                           
   821                           ;main.c: 74:         kpDebounce();
   822  000730  ECAB  F008         	call	_kpDebounce	;wreg free
   823  000734                     
   824                           ;main.c: 75:         if (tecla != kpRead()) {
   825  000734  ECA4  F00D         	call	_kpRead	;wreg free
   826  000738  5069               	movf	main@tecla^0,w,c
   827  00073A  1801               	xorwf	?_kpRead^0,w,c
   828  00073C  E109               	bnz	u2260
   829  00073E  506A               	movf	(main@tecla+1)^0,w,c
   830  000740  1802               	xorwf	(?_kpRead+1)^0,w,c
   831  000742  B4D8               	btfsc	status,2,c
   832  000744  EFA6  F003         	goto	u2261
   833  000748  EFA8  F003         	goto	u2260
   834  00074C                     u2261:
   835  00074C  EFBE  F005         	goto	l2757
   836  000750                     u2260:
   837  000750                     
   838                           ;main.c: 76:             tecla = kpRead();
   839  000750  ECA4  F00D         	call	_kpRead	;wreg free
   840  000754  C001  F069         	movff	?_kpRead,main@tecla
   841  000758  C002  F06A         	movff	?_kpRead+1,main@tecla+1
   842  00075C                     
   843                           ;main.c: 78:             lcdCommand(0x80);
   844  00075C  0E80               	movlw	128
   845  00075E  EC87  F00B         	call	_lcdCommand
   846  000762                     
   847                           ;main.c: 80:             if (((tecla) & (1<<(3)))) {
   848  000762  A669               	btfss	main@tecla^0,3,c
   849  000764  EFB6  F003         	goto	u2271
   850  000768  EFB8  F003         	goto	u2270
   851  00076C                     u2271:
   852  00076C  EFFD  F003         	goto	l335
   853  000770                     u2270:
   854  000770                     
   855                           ;main.c: 82:                 lcdCommand(0x01);
   856  000770  0E01               	movlw	1
   857  000772  EC87  F00B         	call	_lcdCommand
   858  000776                     
   859                           ;main.c: 84:                 for (j = 0; j < 8; j++) {
   860  000776  0E00               	movlw	0
   861  000778  6E6E               	movwf	(main@j+1)^0,c
   862  00077A  0E00               	movlw	0
   863  00077C  6E6D               	movwf	main@j^0,c
   864  00077E                     l2625:
   865                           
   866                           ;main.c: 85:                     lcdData(msg4[j]);
   867  00077E  0E4A               	movlw	low main@msg4
   868  000780  246D               	addwf	main@j^0,w,c
   869  000782  6ED9               	movwf	fsr2l,c
   870  000784  0E00               	movlw	high main@msg4
   871  000786  206E               	addwfc	(main@j+1)^0,w,c
   872  000788  6EDA               	movwf	fsr2h,c
   873  00078A  50DF               	movf	indf2,w,c
   874  00078C  EC19  F00D         	call	_lcdData
   875  000790                     
   876                           ;main.c: 86:                 }
   877  000790  4A6D               	infsnz	main@j^0,f,c
   878  000792  2A6E               	incf	(main@j+1)^0,f,c
   879  000794  BE6E               	btfsc	(main@j+1)^0,7,c
   880  000796  EFD6  F003         	goto	u2281
   881  00079A  506E               	movf	(main@j+1)^0,w,c
   882  00079C  E109               	bnz	u2280
   883  00079E  0E08               	movlw	8
   884  0007A0  5C6D               	subwf	main@j^0,w,c
   885  0007A2  A0D8               	btfss	status,0,c
   886  0007A4  EFD6  F003         	goto	u2281
   887  0007A8  EFD8  F003         	goto	u2280
   888  0007AC                     u2281:
   889  0007AC  EFBF  F003         	goto	l2625
   890  0007B0                     u2280:
   891  0007B0                     
   892                           ;main.c: 90:                 lcdCommand(0x80);
   893  0007B0  0E80               	movlw	128
   894  0007B2  EC87  F00B         	call	_lcdCommand
   895                           
   896                           ;main.c: 91:                 lcdCommand(0xC0);
   897  0007B6  0EC0               	movlw	192
   898  0007B8  EC87  F00B         	call	_lcdCommand
   899  0007BC                     
   900                           ;main.c: 92:                 for (i = 0; i < 9; i++) {
   901  0007BC  0E00               	movlw	0
   902  0007BE  6E6C               	movwf	(main@i+1)^0,c
   903  0007C0  0E00               	movlw	0
   904  0007C2  6E6B               	movwf	main@i^0,c
   905  0007C4                     l2639:
   906                           
   907                           ;main.c: 93:                     rtc_r();
   908  0007C4  EC10  F00A         	call	_rtc_r	;wreg free
   909  0007C8                     
   910                           ;main.c: 94:                     lcdData((const char *) time[i]);
   911  0007C8  0EC3               	movlw	low _time
   912  0007CA  246B               	addwf	main@i^0,w,c
   913  0007CC  6ED9               	movwf	fsr2l,c
   914  0007CE  0E00               	movlw	high _time
   915  0007D0  206C               	addwfc	(main@i+1)^0,w,c
   916  0007D2  6EDA               	movwf	fsr2h,c
   917  0007D4  50DF               	movf	indf2,w,c
   918  0007D6  EC19  F00D         	call	_lcdData
   919  0007DA                     
   920                           ;main.c: 95:                 }
   921  0007DA  4A6B               	infsnz	main@i^0,f,c
   922  0007DC  2A6C               	incf	(main@i+1)^0,f,c
   923  0007DE  BE6C               	btfsc	(main@i+1)^0,7,c
   924  0007E0  EFFB  F003         	goto	u2291
   925  0007E4  506C               	movf	(main@i+1)^0,w,c
   926  0007E6  E109               	bnz	u2290
   927  0007E8  0E09               	movlw	9
   928  0007EA  5C6B               	subwf	main@i^0,w,c
   929  0007EC  A0D8               	btfss	status,0,c
   930  0007EE  EFFB  F003         	goto	u2291
   931  0007F2  EFFD  F003         	goto	u2290
   932  0007F6                     u2291:
   933  0007F6  EFE2  F003         	goto	l2639
   934  0007FA                     u2290:
   935  0007FA                     l335:
   936                           
   937                           ;main.c: 101:             if (((tecla) & (1<<(5)))) {
   938  0007FA  AA69               	btfss	main@tecla^0,5,c
   939  0007FC  EF02  F004         	goto	u2301
   940  000800  EF04  F004         	goto	u2300
   941  000804                     u2301:
   942  000804  EF0A  F004         	goto	l2649
   943  000808                     u2300:
   944  000808                     
   945                           ;main.c: 103:                 atraso_ms(20);
   946  000808  0E00               	movlw	0
   947  00080A  6E02               	movwf	(atraso_ms@valor+1)^0,c
   948  00080C  0E14               	movlw	20
   949  00080E  6E01               	movwf	atraso_ms@valor^0,c
   950  000810  EC02  F00C         	call	_atraso_ms	;wreg free
   951  000814                     l2649:
   952                           
   953                           ;main.c: 109:             if (((tecla) & (1<<(6)))) {
   954  000814  AC69               	btfss	main@tecla^0,6,c
   955  000816  EF0F  F004         	goto	u2311
   956  00081A  EF11  F004         	goto	u2310
   957  00081E                     u2311:
   958  00081E  EF55  F004         	goto	l2659
   959  000822                     u2310:
   960  000822                     
   961                           ;main.c: 111:                 pinMode(PIN_A2, 1);
   962  000822  0E00               	movlw	0
   963  000824  6E02               	movwf	(pinMode@pin+1)^0,c
   964  000826  0E02               	movlw	2
   965  000828  6E01               	movwf	pinMode@pin^0,c
   966  00082A  0E00               	movlw	0
   967  00082C  6E04               	movwf	(pinMode@type+1)^0,c
   968  00082E  0E01               	movlw	1
   969  000830  6E03               	movwf	pinMode@type^0,c
   970  000832  EC5D  F006         	call	_pinMode	;wreg free
   971                           
   972                           ;main.c: 112:                 pinMode(PIN_A3, 1);
   973  000836  0E00               	movlw	0
   974  000838  6E02               	movwf	(pinMode@pin+1)^0,c
   975  00083A  0E03               	movlw	3
   976  00083C  6E01               	movwf	pinMode@pin^0,c
   977  00083E  0E00               	movlw	0
   978  000840  6E04               	movwf	(pinMode@type+1)^0,c
   979  000842  0E01               	movlw	1
   980  000844  6E03               	movwf	pinMode@type^0,c
   981  000846  EC5D  F006         	call	_pinMode	;wreg free
   982                           
   983                           ;main.c: 113:                 pinMode(PIN_A4, 1);
   984  00084A  0E00               	movlw	0
   985  00084C  6E02               	movwf	(pinMode@pin+1)^0,c
   986  00084E  0E04               	movlw	4
   987  000850  6E01               	movwf	pinMode@pin^0,c
   988  000852  0E00               	movlw	0
   989  000854  6E04               	movwf	(pinMode@type+1)^0,c
   990  000856  0E01               	movlw	1
   991  000858  6E03               	movwf	pinMode@type^0,c
   992  00085A  EC5D  F006         	call	_pinMode	;wreg free
   993                           
   994                           ;main.c: 114:                 pinMode(PIN_A5, 1);
   995  00085E  0E00               	movlw	0
   996  000860  6E02               	movwf	(pinMode@pin+1)^0,c
   997  000862  0E05               	movlw	5
   998  000864  6E01               	movwf	pinMode@pin^0,c
   999  000866  0E00               	movlw	0
  1000  000868  6E04               	movwf	(pinMode@type+1)^0,c
  1001  00086A  0E01               	movlw	1
  1002  00086C  6E03               	movwf	pinMode@type^0,c
  1003  00086E  EC5D  F006         	call	_pinMode	;wreg free
  1004                           
  1005                           ;main.c: 115:                 lcdCommand(0x01);
  1006  000872  0E01               	movlw	1
  1007  000874  EC87  F00B         	call	_lcdCommand
  1008                           
  1009                           ;main.c: 116:                 lcdData(con + 48);
  1010  000878  5064               	movf	main@con^0,w,c
  1011  00087A  0F30               	addlw	48
  1012  00087C  EC19  F00D         	call	_lcdData
  1013                           
  1014                           ;main.c: 117:                 lcdData(cont + 48);
  1015  000880  5062               	movf	main@cont^0,w,c
  1016  000882  0F30               	addlw	48
  1017  000884  EC19  F00D         	call	_lcdData
  1018                           
  1019                           ;main.c: 118:                 lcdData(':');
  1020  000888  0E3A               	movlw	58
  1021  00088A  EC19  F00D         	call	_lcdData
  1022                           
  1023                           ;main.c: 119:                 lcdData(y + 48);
  1024  00088E  5060               	movf	main@y^0,w,c
  1025  000890  0F30               	addlw	48
  1026  000892  EC19  F00D         	call	_lcdData
  1027                           
  1028                           ;main.c: 120:                 lcdData(x + 48);
  1029  000896  505E               	movf	main@x^0,w,c
  1030  000898  0F30               	addlw	48
  1031  00089A  EC19  F00D         	call	_lcdData
  1032  00089E                     
  1033                           ;main.c: 121:                 (*(volatile __near unsigned char*)0xF81) = 0X00;
  1034  00089E  0E00               	movlw	0
  1035  0008A0  6E81               	movwf	129,c	;volatile
  1036  0008A2                     
  1037                           ;main.c: 122:                 (*(volatile __near unsigned char*)0xF80) = 0X00;
  1038  0008A2  0E00               	movlw	0
  1039  0008A4  6E80               	movwf	128,c	;volatile
  1040  0008A6                     
  1041                           ;main.c: 123:                 (*(volatile __near unsigned char*)0xF83) = 0X00;
  1042  0008A6  0E00               	movlw	0
  1043  0008A8  6E83               	movwf	131,c	;volatile
  1044  0008AA                     l2659:
  1045                           
  1046                           ;main.c: 126:             if (((tecla) & (1<<(7)))) {
  1047  0008AA  AE69               	btfss	main@tecla^0,7,c
  1048  0008AC  EF5A  F004         	goto	u2321
  1049  0008B0  EF5C  F004         	goto	u2320
  1050  0008B4                     u2321:
  1051  0008B4  EFCB  F004         	goto	l342
  1052  0008B8                     u2320:
  1053  0008B8                     
  1054                           ;main.c: 128:                 lcdCommand(0x01);
  1055  0008B8  0E01               	movlw	1
  1056  0008BA  EC87  F00B         	call	_lcdCommand
  1057  0008BE                     
  1058                           ;main.c: 129:                 conte = 0;
  1059  0008BE  0E00               	movlw	0
  1060  0008C0  6E5C               	movwf	(main@conte+1)^0,c
  1061  0008C2  0E00               	movlw	0
  1062  0008C4  6E5B               	movwf	main@conte^0,c
  1063  0008C6                     
  1064                           ;main.c: 130:                 con = 0;
  1065  0008C6  0E00               	movlw	0
  1066  0008C8  6E65               	movwf	(main@con+1)^0,c
  1067  0008CA  0E00               	movlw	0
  1068  0008CC  6E64               	movwf	main@con^0,c
  1069  0008CE                     
  1070                           ;main.c: 131:                 cont = 0;
  1071  0008CE  0E00               	movlw	0
  1072  0008D0  6E63               	movwf	(main@cont+1)^0,c
  1073  0008D2  0E00               	movlw	0
  1074  0008D4  6E62               	movwf	main@cont^0,c
  1075  0008D6                     
  1076                           ;main.c: 133:                 (*(volatile __near unsigned char*)0xF81) = 0xFF;
  1077  0008D6  6881               	setf	129,c	;volatile
  1078  0008D8                     
  1079                           ;main.c: 134:                 atraso_ms(1000);
  1080  0008D8  0E03               	movlw	3
  1081  0008DA  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1082  0008DC  0EE8               	movlw	232
  1083  0008DE  6E01               	movwf	atraso_ms@valor^0,c
  1084  0008E0  EC02  F00C         	call	_atraso_ms	;wreg free
  1085                           
  1086                           ;main.c: 135:                 for (j = 0; j < 24; j++) {
  1087  0008E4  0E00               	movlw	0
  1088  0008E6  6E6E               	movwf	(main@j+1)^0,c
  1089  0008E8  0E00               	movlw	0
  1090  0008EA  6E6D               	movwf	main@j^0,c
  1091  0008EC                     l2677:
  1092                           
  1093                           ;main.c: 136:                     lcdData(msg3[j]);
  1094  0008EC  0E0F               	movlw	low main@msg3
  1095  0008EE  246D               	addwf	main@j^0,w,c
  1096  0008F0  6ED9               	movwf	fsr2l,c
  1097  0008F2  0E00               	movlw	high main@msg3
  1098  0008F4  206E               	addwfc	(main@j+1)^0,w,c
  1099  0008F6  6EDA               	movwf	fsr2h,c
  1100  0008F8  50DF               	movf	indf2,w,c
  1101  0008FA  EC19  F00D         	call	_lcdData
  1102  0008FE                     
  1103                           ;main.c: 137:                 }
  1104  0008FE  4A6D               	infsnz	main@j^0,f,c
  1105  000900  2A6E               	incf	(main@j+1)^0,f,c
  1106  000902  BE6E               	btfsc	(main@j+1)^0,7,c
  1107  000904  EF8D  F004         	goto	u2331
  1108  000908  506E               	movf	(main@j+1)^0,w,c
  1109  00090A  E109               	bnz	u2330
  1110  00090C  0E18               	movlw	24
  1111  00090E  5C6D               	subwf	main@j^0,w,c
  1112  000910  A0D8               	btfss	status,0,c
  1113  000912  EF8D  F004         	goto	u2331
  1114  000916  EF8F  F004         	goto	u2330
  1115  00091A                     u2331:
  1116  00091A  EF76  F004         	goto	l2677
  1117  00091E                     u2330:
  1118  00091E                     
  1119                           ;main.c: 138:                 ssdInit();
  1120  00091E  ECEE  F00C         	call	_ssdInit	;wreg free
  1121                           
  1122                           ;main.c: 139:                 pwmInit();
  1123  000922  EC7F  F00D         	call	_pwmInit	;wreg free
  1124  000926                     
  1125                           ;main.c: 140:                 for (k = 0; k < 3; k++) {
  1126  000926  0E00               	movlw	0
  1127  000928  6E5A               	movwf	(main@k+1)^0,c
  1128  00092A  0E00               	movlw	0
  1129  00092C  6E59               	movwf	main@k^0,c
  1130  00092E                     l2687:
  1131  00092E  BE5A               	btfsc	(main@k+1)^0,7,c
  1132  000930  EFA3  F004         	goto	u2341
  1133  000934  505A               	movf	(main@k+1)^0,w,c
  1134  000936  E109               	bnz	u2340
  1135  000938  0E03               	movlw	3
  1136  00093A  5C59               	subwf	main@k^0,w,c
  1137  00093C  A0D8               	btfss	status,0,c
  1138  00093E  EFA3  F004         	goto	u2341
  1139  000942  EFA5  F004         	goto	u2340
  1140  000946                     u2341:
  1141  000946  EFA7  F004         	goto	l2691
  1142  00094A                     u2340:
  1143  00094A  EFCB  F004         	goto	l342
  1144  00094E                     l2691:
  1145                           
  1146                           ;main.c: 141:                     for (i = 1; i > 0; i = i * 2) {
  1147  00094E  0E00               	movlw	0
  1148  000950  6E6C               	movwf	(main@i+1)^0,c
  1149  000952  0E01               	movlw	1
  1150  000954  6E6B               	movwf	main@i^0,c
  1151  000956                     l2697:
  1152                           
  1153                           ;main.c: 142:                         (((*(volatile __near unsigned char*)0xF94)) |= (1<
      +                          <(1)));
  1154  000956  8294               	bsf	148,1,c	;volatile
  1155  000958                     
  1156                           ;main.c: 143:                         (*(volatile __near unsigned char*)0xF83) = i;
  1157  000958  C06B  FF83         	movff	main@i,3971	;volatile
  1158  00095C                     
  1159                           ;main.c: 144:                         atraso_ms(100);
  1160  00095C  0E00               	movlw	0
  1161  00095E  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1162  000960  0E64               	movlw	100
  1163  000962  6E01               	movwf	atraso_ms@valor^0,c
  1164  000964  EC02  F00C         	call	_atraso_ms	;wreg free
  1165  000968                     
  1166                           ;main.c: 145:                     }
  1167  000968  90D8               	bcf	status,0,c
  1168  00096A  346B               	rlcf	main@i^0,w,c
  1169  00096C  6E6B               	movwf	main@i^0,c
  1170  00096E  346C               	rlcf	(main@i+1)^0,w,c
  1171  000970  6E6C               	movwf	(main@i+1)^0,c
  1172  000972  BE6C               	btfsc	(main@i+1)^0,7,c
  1173  000974  EFC6  F004         	goto	u2350
  1174  000978  506C               	movf	(main@i+1)^0,w,c
  1175  00097A  E106               	bnz	u2351
  1176  00097C  046B               	decf	main@i^0,w,c
  1177  00097E  B0D8               	btfsc	status,0,c
  1178  000980  EFC4  F004         	goto	u2351
  1179  000984  EFC6  F004         	goto	u2350
  1180  000988                     u2351:
  1181  000988  EFAB  F004         	goto	l2697
  1182  00098C                     u2350:
  1183  00098C                     
  1184                           ;main.c: 146:                     (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<(1
      +                          )));
  1185  00098C  9294               	bcf	148,1,c	;volatile
  1186                           
  1187                           ;main.c: 147:                 }
  1188  00098E  4A59               	infsnz	main@k^0,f,c
  1189  000990  2A5A               	incf	(main@k+1)^0,f,c
  1190  000992  EF97  F004         	goto	l2687
  1191  000996                     l342:
  1192                           
  1193                           ;main.c: 152:             if (((tecla) & (1<<(2)))) {
  1194  000996  A469               	btfss	main@tecla^0,2,c
  1195  000998  EFD0  F004         	goto	u2361
  1196  00099C  EFD2  F004         	goto	u2360
  1197  0009A0                     u2361:
  1198  0009A0  EF3C  F005         	goto	l349
  1199  0009A4                     u2360:
  1200  0009A4                     
  1201                           ;main.c: 155:                 lcdCommand(0x01);
  1202  0009A4  0E01               	movlw	1
  1203  0009A6  EC87  F00B         	call	_lcdCommand
  1204  0009AA                     
  1205                           ;main.c: 157:                 for (j = 0; j < 12; j++) {
  1206  0009AA  0E00               	movlw	0
  1207  0009AC  6E6E               	movwf	(main@j+1)^0,c
  1208  0009AE  0E00               	movlw	0
  1209  0009B0  6E6D               	movwf	main@j^0,c
  1210  0009B2                     l2719:
  1211                           
  1212                           ;main.c: 158:                     lcdData(msg1[j]);
  1213  0009B2  0E36               	movlw	low main@msg1
  1214  0009B4  246D               	addwf	main@j^0,w,c
  1215  0009B6  6ED9               	movwf	fsr2l,c
  1216  0009B8  0E00               	movlw	high main@msg1
  1217  0009BA  206E               	addwfc	(main@j+1)^0,w,c
  1218  0009BC  6EDA               	movwf	fsr2h,c
  1219  0009BE  50DF               	movf	indf2,w,c
  1220  0009C0  EC19  F00D         	call	_lcdData
  1221  0009C4                     
  1222                           ;main.c: 159:                 }
  1223  0009C4  4A6D               	infsnz	main@j^0,f,c
  1224  0009C6  2A6E               	incf	(main@j+1)^0,f,c
  1225  0009C8  BE6E               	btfsc	(main@j+1)^0,7,c
  1226  0009CA  EFF0  F004         	goto	u2371
  1227  0009CE  506E               	movf	(main@j+1)^0,w,c
  1228  0009D0  E109               	bnz	u2370
  1229  0009D2  0E0C               	movlw	12
  1230  0009D4  5C6D               	subwf	main@j^0,w,c
  1231  0009D6  A0D8               	btfss	status,0,c
  1232  0009D8  EFF0  F004         	goto	u2371
  1233  0009DC  EFF2  F004         	goto	u2370
  1234  0009E0                     u2371:
  1235  0009E0  EFD9  F004         	goto	l2719
  1236  0009E4                     u2370:
  1237  0009E4                     
  1238                           ;main.c: 160:                 lcdCommand(0xC0);
  1239  0009E4  0EC0               	movlw	192
  1240  0009E6  EC87  F00B         	call	_lcdCommand
  1241                           
  1242                           ;main.c: 161:                 lcdData('1');
  1243  0009EA  0E31               	movlw	49
  1244  0009EC  EC19  F00D         	call	_lcdData
  1245                           
  1246                           ;main.c: 162:                 lcdData((batimentos / 3) % 10 + 48);
  1247  0009F0  0E00               	movlw	0
  1248  0009F2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1249  0009F4  0E03               	movlw	3
  1250  0009F6  6E03               	movwf	___awdiv@divisor^0,c
  1251  0009F8  C066  F001         	movff	main@batimentos,___awdiv@dividend
  1252  0009FC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1253  0009FE  EC8C  F00A         	call	___awdiv	;wreg free
  1254  000A02  C001  F009         	movff	?___awdiv,___awmod@dividend
  1255  000A06  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1256  000A0A  0E00               	movlw	0
  1257  000A0C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1258  000A0E  0E0A               	movlw	10
  1259  000A10  6E0B               	movwf	___awmod@divisor^0,c
  1260  000A12  ECEE  F00A         	call	___awmod	;wreg free
  1261  000A16  5009               	movf	?___awmod^0,w,c
  1262  000A18  0F30               	addlw	48
  1263  000A1A  EC19  F00D         	call	_lcdData
  1264                           
  1265                           ;main.c: 163:                 lcdData((batimentos + 15) % 10 + 48);
  1266  000A1E  0E0F               	movlw	15
  1267  000A20  2466               	addwf	main@batimentos^0,w,c
  1268  000A22  6E09               	movwf	___awmod@dividend^0,c
  1269  000A24  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1270  000A26  0E00               	movlw	0
  1271  000A28  220A               	addwfc	(___awmod@dividend+1)^0,f,c
  1272  000A2A  0E00               	movlw	0
  1273  000A2C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1274  000A2E  0E0A               	movlw	10
  1275  000A30  6E0B               	movwf	___awmod@divisor^0,c
  1276  000A32  ECEE  F00A         	call	___awmod	;wreg free
  1277  000A36  5009               	movf	?___awmod^0,w,c
  1278  000A38  0F30               	addlw	48
  1279  000A3A  EC19  F00D         	call	_lcdData
  1280  000A3E                     
  1281                           ;main.c: 164:                 for (i = 0; i < 3; i++) {
  1282  000A3E  0E00               	movlw	0
  1283  000A40  6E6C               	movwf	(main@i+1)^0,c
  1284  000A42  0E00               	movlw	0
  1285  000A44  6E6B               	movwf	main@i^0,c
  1286  000A46                     l2733:
  1287                           
  1288                           ;main.c: 165:                     lcdData(batimento[i]);
  1289  000A46  0E54               	movlw	low main@batimento
  1290  000A48  246B               	addwf	main@i^0,w,c
  1291  000A4A  6ED9               	movwf	fsr2l,c
  1292  000A4C  0E00               	movlw	high main@batimento
  1293  000A4E  206C               	addwfc	(main@i+1)^0,w,c
  1294  000A50  6EDA               	movwf	fsr2h,c
  1295  000A52  50DF               	movf	indf2,w,c
  1296  000A54  EC19  F00D         	call	_lcdData
  1297  000A58                     
  1298                           ;main.c: 166:                 }
  1299  000A58  4A6B               	infsnz	main@i^0,f,c
  1300  000A5A  2A6C               	incf	(main@i+1)^0,f,c
  1301  000A5C  BE6C               	btfsc	(main@i+1)^0,7,c
  1302  000A5E  EF3A  F005         	goto	u2381
  1303  000A62  506C               	movf	(main@i+1)^0,w,c
  1304  000A64  E109               	bnz	u2380
  1305  000A66  0E03               	movlw	3
  1306  000A68  5C6B               	subwf	main@i^0,w,c
  1307  000A6A  A0D8               	btfss	status,0,c
  1308  000A6C  EF3A  F005         	goto	u2381
  1309  000A70  EF3C  F005         	goto	u2380
  1310  000A74                     u2381:
  1311  000A74  EF23  F005         	goto	l2733
  1312  000A78                     u2380:
  1313  000A78                     l349:
  1314                           
  1315                           ;main.c: 168:             if (((tecla) & (1<<(11)))) {
  1316  000A78  A66A               	btfss	(main@tecla+1)^0,3,c
  1317  000A7A  EF41  F005         	goto	u2391
  1318  000A7E  EF43  F005         	goto	u2390
  1319  000A82                     u2391:
  1320  000A82  EFBE  F005         	goto	l2757
  1321  000A86                     u2390:
  1322  000A86                     
  1323                           ;main.c: 169:                 lcdCommand(0x01);
  1324  000A86  0E01               	movlw	1
  1325  000A88  EC87  F00B         	call	_lcdCommand
  1326  000A8C                     
  1327                           ;main.c: 171:                 for (j = 0; j < 8; j++) {
  1328  000A8C  0E00               	movlw	0
  1329  000A8E  6E6E               	movwf	(main@j+1)^0,c
  1330  000A90  0E00               	movlw	0
  1331  000A92  6E6D               	movwf	main@j^0,c
  1332  000A94                     l2747:
  1333                           
  1334                           ;main.c: 172:                     lcdData(msg2[j]);
  1335  000A94  0E42               	movlw	low main@msg2
  1336  000A96  246D               	addwf	main@j^0,w,c
  1337  000A98  6ED9               	movwf	fsr2l,c
  1338  000A9A  0E00               	movlw	high main@msg2
  1339  000A9C  206E               	addwfc	(main@j+1)^0,w,c
  1340  000A9E  6EDA               	movwf	fsr2h,c
  1341  000AA0  50DF               	movf	indf2,w,c
  1342  000AA2  EC19  F00D         	call	_lcdData
  1343  000AA6                     
  1344                           ;main.c: 173:                 }
  1345  000AA6  4A6D               	infsnz	main@j^0,f,c
  1346  000AA8  2A6E               	incf	(main@j+1)^0,f,c
  1347  000AAA  BE6E               	btfsc	(main@j+1)^0,7,c
  1348  000AAC  EF61  F005         	goto	u2401
  1349  000AB0  506E               	movf	(main@j+1)^0,w,c
  1350  000AB2  E109               	bnz	u2400
  1351  000AB4  0E08               	movlw	8
  1352  000AB6  5C6D               	subwf	main@j^0,w,c
  1353  000AB8  A0D8               	btfss	status,0,c
  1354  000ABA  EF61  F005         	goto	u2401
  1355  000ABE  EF63  F005         	goto	u2400
  1356  000AC2                     u2401:
  1357  000AC2  EF4A  F005         	goto	l2747
  1358  000AC6                     u2400:
  1359  000AC6                     
  1360                           ;main.c: 174:                 lcdCommand(0xC0);
  1361  000AC6  0EC0               	movlw	192
  1362  000AC8  EC87  F00B         	call	_lcdCommand
  1363                           
  1364                           ;main.c: 175:                 lcdData((passo / 1000 % 10) + 48);
  1365  000ACC  0E03               	movlw	3
  1366  000ACE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1367  000AD0  0EE8               	movlw	232
  1368  000AD2  6E03               	movwf	___awdiv@divisor^0,c
  1369  000AD4  C067  F001         	movff	main@passo,___awdiv@dividend
  1370  000AD8  C068  F002         	movff	main@passo+1,___awdiv@dividend+1
  1371  000ADC  EC8C  F00A         	call	___awdiv	;wreg free
  1372  000AE0  C001  F009         	movff	?___awdiv,___awmod@dividend
  1373  000AE4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1374  000AE8  0E00               	movlw	0
  1375  000AEA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1376  000AEC  0E0A               	movlw	10
  1377  000AEE  6E0B               	movwf	___awmod@divisor^0,c
  1378  000AF0  ECEE  F00A         	call	___awmod	;wreg free
  1379  000AF4  5009               	movf	?___awmod^0,w,c
  1380  000AF6  0F30               	addlw	48
  1381  000AF8  EC19  F00D         	call	_lcdData
  1382                           
  1383                           ;main.c: 176:                 lcdData((passo / 100 % 10) + 48);
  1384  000AFC  0E00               	movlw	0
  1385  000AFE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1386  000B00  0E64               	movlw	100
  1387  000B02  6E03               	movwf	___awdiv@divisor^0,c
  1388  000B04  C067  F001         	movff	main@passo,___awdiv@dividend
  1389  000B08  C068  F002         	movff	main@passo+1,___awdiv@dividend+1
  1390  000B0C  EC8C  F00A         	call	___awdiv	;wreg free
  1391  000B10  C001  F009         	movff	?___awdiv,___awmod@dividend
  1392  000B14  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1393  000B18  0E00               	movlw	0
  1394  000B1A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1395  000B1C  0E0A               	movlw	10
  1396  000B1E  6E0B               	movwf	___awmod@divisor^0,c
  1397  000B20  ECEE  F00A         	call	___awmod	;wreg free
  1398  000B24  5009               	movf	?___awmod^0,w,c
  1399  000B26  0F30               	addlw	48
  1400  000B28  EC19  F00D         	call	_lcdData
  1401                           
  1402                           ;main.c: 177:                 lcdData((passo / 10 % 10) + 48);
  1403  000B2C  0E00               	movlw	0
  1404  000B2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1405  000B30  0E0A               	movlw	10
  1406  000B32  6E03               	movwf	___awdiv@divisor^0,c
  1407  000B34  C067  F001         	movff	main@passo,___awdiv@dividend
  1408  000B38  C068  F002         	movff	main@passo+1,___awdiv@dividend+1
  1409  000B3C  EC8C  F00A         	call	___awdiv	;wreg free
  1410  000B40  C001  F009         	movff	?___awdiv,___awmod@dividend
  1411  000B44  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1412  000B48  0E00               	movlw	0
  1413  000B4A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1414  000B4C  0E0A               	movlw	10
  1415  000B4E  6E0B               	movwf	___awmod@divisor^0,c
  1416  000B50  ECEE  F00A         	call	___awmod	;wreg free
  1417  000B54  5009               	movf	?___awmod^0,w,c
  1418  000B56  0F30               	addlw	48
  1419  000B58  EC19  F00D         	call	_lcdData
  1420                           
  1421                           ;main.c: 178:                 lcdData(passo % 10 + 48);
  1422  000B5C  C067  F009         	movff	main@passo,___awmod@dividend
  1423  000B60  C068  F00A         	movff	main@passo+1,___awmod@dividend+1
  1424  000B64  0E00               	movlw	0
  1425  000B66  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1426  000B68  0E0A               	movlw	10
  1427  000B6A  6E0B               	movwf	___awmod@divisor^0,c
  1428  000B6C  ECEE  F00A         	call	___awmod	;wreg free
  1429  000B70  5009               	movf	?___awmod^0,w,c
  1430  000B72  0F30               	addlw	48
  1431  000B74  EC19  F00D         	call	_lcdData
  1432  000B78                     
  1433                           ;main.c: 179:                 passo++;
  1434  000B78  4A67               	infsnz	main@passo^0,f,c
  1435  000B7A  2A68               	incf	(main@passo+1)^0,f,c
  1436  000B7C                     l2757:
  1437                           
  1438                           ;main.c: 185:         if (x == 9 && y == 5) {
  1439  000B7C  0E09               	movlw	9
  1440  000B7E  185E               	xorwf	main@x^0,w,c
  1441  000B80  105F               	iorwf	(main@x+1)^0,w,c
  1442  000B82  A4D8               	btfss	status,2,c
  1443  000B84  EFC6  F005         	goto	u2411
  1444  000B88  EFC8  F005         	goto	u2410
  1445  000B8C                     u2411:
  1446  000B8C  EF04  F006         	goto	l2777
  1447  000B90                     u2410:
  1448  000B90  0E05               	movlw	5
  1449  000B92  1860               	xorwf	main@y^0,w,c
  1450  000B94  1061               	iorwf	(main@y+1)^0,w,c
  1451  000B96  A4D8               	btfss	status,2,c
  1452  000B98  EFD0  F005         	goto	u2421
  1453  000B9C  EFD2  F005         	goto	u2420
  1454  000BA0                     u2421:
  1455  000BA0  EF04  F006         	goto	l2777
  1456  000BA4                     u2420:
  1457  000BA4                     
  1458                           ;main.c: 189:             cont++;
  1459  000BA4  4A62               	infsnz	main@cont^0,f,c
  1460  000BA6  2A63               	incf	(main@cont+1)^0,f,c
  1461  000BA8                     
  1462                           ;main.c: 190:             passo = passo + 92;
  1463  000BA8  0E5C               	movlw	92
  1464  000BAA  2467               	addwf	main@passo^0,w,c
  1465  000BAC  6E67               	movwf	main@passo^0,c
  1466  000BAE  0E00               	movlw	0
  1467  000BB0  2068               	addwfc	(main@passo+1)^0,w,c
  1468  000BB2  6E68               	movwf	(main@passo+1)^0,c
  1469  000BB4                     
  1470                           ;main.c: 191:             conte = 0;
  1471  000BB4  0E00               	movlw	0
  1472  000BB6  6E5C               	movwf	(main@conte+1)^0,c
  1473  000BB8  0E00               	movlw	0
  1474  000BBA  6E5B               	movwf	main@conte^0,c
  1475  000BBC                     
  1476                           ;main.c: 193:             if (cont > 9) {
  1477  000BBC  BE63               	btfsc	(main@cont+1)^0,7,c
  1478  000BBE  EFEA  F005         	goto	u2431
  1479  000BC2  5063               	movf	(main@cont+1)^0,w,c
  1480  000BC4  E109               	bnz	u2430
  1481  000BC6  0E0A               	movlw	10
  1482  000BC8  5C62               	subwf	main@cont^0,w,c
  1483  000BCA  A0D8               	btfss	status,0,c
  1484  000BCC  EFEA  F005         	goto	u2431
  1485  000BD0  EFEC  F005         	goto	u2430
  1486  000BD4                     u2431:
  1487  000BD4  EFF2  F005         	goto	l2773
  1488  000BD8                     u2430:
  1489  000BD8                     
  1490                           ;main.c: 194:                 cont = 0;
  1491  000BD8  0E00               	movlw	0
  1492  000BDA  6E63               	movwf	(main@cont+1)^0,c
  1493  000BDC  0E00               	movlw	0
  1494  000BDE  6E62               	movwf	main@cont^0,c
  1495  000BE0                     
  1496                           ;main.c: 196:                 con++;
  1497  000BE0  4A64               	infsnz	main@con^0,f,c
  1498  000BE2  2A65               	incf	(main@con+1)^0,f,c
  1499  000BE4                     l2773:
  1500                           
  1501                           ;main.c: 199:             if (con > 9) {
  1502  000BE4  BE65               	btfsc	(main@con+1)^0,7,c
  1503  000BE6  EFFE  F005         	goto	u2441
  1504  000BEA  5065               	movf	(main@con+1)^0,w,c
  1505  000BEC  E109               	bnz	u2440
  1506  000BEE  0E0A               	movlw	10
  1507  000BF0  5C64               	subwf	main@con^0,w,c
  1508  000BF2  A0D8               	btfss	status,0,c
  1509  000BF4  EFFE  F005         	goto	u2441
  1510  000BF8  EF00  F006         	goto	u2440
  1511  000BFC                     u2441:
  1512  000BFC  EF04  F006         	goto	l2777
  1513  000C00                     u2440:
  1514  000C00                     
  1515                           ;main.c: 200:                 con = 0;
  1516  000C00  0E00               	movlw	0
  1517  000C02  6E65               	movwf	(main@con+1)^0,c
  1518  000C04  0E00               	movlw	0
  1519  000C06  6E64               	movwf	main@con^0,c
  1520  000C08                     l2777:
  1521                           
  1522                           ;main.c: 204:         conte++;
  1523  000C08  4A5B               	infsnz	main@conte^0,f,c
  1524  000C0A  2A5C               	incf	(main@conte+1)^0,f,c
  1525  000C0C                     
  1526                           ;main.c: 205:         x = ((conte / 100) % 10);
  1527  000C0C  0E00               	movlw	0
  1528  000C0E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1529  000C10  0E64               	movlw	100
  1530  000C12  6E03               	movwf	___awdiv@divisor^0,c
  1531  000C14  C05B  F001         	movff	main@conte,___awdiv@dividend
  1532  000C18  C05C  F002         	movff	main@conte+1,___awdiv@dividend+1
  1533  000C1C  EC8C  F00A         	call	___awdiv	;wreg free
  1534  000C20  C001  F009         	movff	?___awdiv,___awmod@dividend
  1535  000C24  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1536  000C28  0E00               	movlw	0
  1537  000C2A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1538  000C2C  0E0A               	movlw	10
  1539  000C2E  6E0B               	movwf	___awmod@divisor^0,c
  1540  000C30  ECEE  F00A         	call	___awmod	;wreg free
  1541  000C34  C009  F05E         	movff	?___awmod,main@x
  1542  000C38  C00A  F05F         	movff	?___awmod+1,main@x+1
  1543  000C3C                     
  1544                           ;main.c: 206:         y = ((conte / 1000) % 10);
  1545  000C3C  0E03               	movlw	3
  1546  000C3E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1547  000C40  0EE8               	movlw	232
  1548  000C42  6E03               	movwf	___awdiv@divisor^0,c
  1549  000C44  C05B  F001         	movff	main@conte,___awdiv@dividend
  1550  000C48  C05C  F002         	movff	main@conte+1,___awdiv@dividend+1
  1551  000C4C  EC8C  F00A         	call	___awdiv	;wreg free
  1552  000C50  C001  F009         	movff	?___awdiv,___awmod@dividend
  1553  000C54  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1554  000C58  0E00               	movlw	0
  1555  000C5A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1556  000C5C  0E0A               	movlw	10
  1557  000C5E  6E0B               	movwf	___awmod@divisor^0,c
  1558  000C60  ECEE  F00A         	call	___awmod	;wreg free
  1559  000C64  C009  F060         	movff	?___awmod,main@y
  1560  000C68  C00A  F061         	movff	?___awmod+1,main@y+1
  1561  000C6C                     
  1562                           ;main.c: 207:         ssdDigit(x, 3);
  1563  000C6C  0E03               	movlw	3
  1564  000C6E  6E01               	movwf	ssdDigit@pos^0,c
  1565  000C70  505E               	movf	main@x^0,w,c
  1566  000C72  ECC2  F00C         	call	_ssdDigit
  1567  000C76                     
  1568                           ;main.c: 208:         ssdDigit(y, 2);
  1569  000C76  0E02               	movlw	2
  1570  000C78  6E01               	movwf	ssdDigit@pos^0,c
  1571  000C7A  5060               	movf	main@y^0,w,c
  1572  000C7C  ECC2  F00C         	call	_ssdDigit
  1573  000C80                     
  1574                           ;main.c: 209:         ssdDigit(cont, 1);
  1575  000C80  0E01               	movlw	1
  1576  000C82  6E01               	movwf	ssdDigit@pos^0,c
  1577  000C84  5062               	movf	main@cont^0,w,c
  1578  000C86  ECC2  F00C         	call	_ssdDigit
  1579  000C8A                     
  1580                           ;main.c: 210:         ssdDigit(con, 0);
  1581  000C8A  0E00               	movlw	0
  1582  000C8C  6E01               	movwf	ssdDigit@pos^0,c
  1583  000C8E  5064               	movf	main@con^0,w,c
  1584  000C90  ECC2  F00C         	call	_ssdDigit
  1585  000C94                     
  1586                           ;main.c: 212:         ssdUpdate();
  1587  000C94  EC68  F009         	call	_ssdUpdate	;wreg free
  1588  000C98                     
  1589                           ;main.c: 213:         for (tempo = 0; tempo < 255; tempo++);
  1590  000C98  0E00               	movlw	0
  1591  000C9A  6E5D               	movwf	main@tempo^0,c
  1592  000C9C                     l2795:
  1593  000C9C  285D               	incf	main@tempo^0,w,c
  1594  000C9E  A4D8               	btfss	status,2,c
  1595  000CA0  EF54  F006         	goto	u2451
  1596  000CA4  EF56  F006         	goto	u2450
  1597  000CA8                     u2451:
  1598  000CA8  EF58  F006         	goto	l2799
  1599  000CAC                     u2450:
  1600  000CAC  EF69  F003         	goto	l331
  1601  000CB0                     l2799:
  1602  000CB0  2A5D               	incf	main@tempo^0,f,c
  1603  000CB2  EF4E  F006         	goto	l2795
  1604  000CB6  EF00  F000         	goto	start
  1605  000CBA                     __end_of_main:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _ssdUpdate *****************
  1609 ;; Defined at:
  1610 ;;		line 54 in file "ssd.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1624 ;;      Params:         0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0
  1626 ;;      Temps:          2       0       0       0       0       0       0
  1627 ;;      Totals:         2       0       0       0       0       0       0
  1628 ;;Total ram usage:        2 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 1
  1631 ;; This function calls:
  1632 ;;		_digitalWrite
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text1
  1639  0012D0                     __ptext1:
  1640                           	callstack 0
  1641  0012D0                     _ssdUpdate:
  1642                           	callstack 29
  1643  0012D0                     
  1644                           ;ssd.c: 58:     TRISD= 0x00;
  1645  0012D0  0E00               	movlw	0
  1646  0012D2  6E95               	movwf	149,c	;volatile
  1647  0012D4                     
  1648                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  1649  0012D4  0E00               	movlw	0
  1650  0012D6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1651  0012D8  0E02               	movlw	2
  1652  0012DA  6E01               	movwf	digitalWrite@pin^0,c
  1653  0012DC  0E00               	movlw	0
  1654  0012DE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1655  0012E0  0E00               	movlw	0
  1656  0012E2  6E03               	movwf	digitalWrite@value^0,c
  1657  0012E4  EC84  F007         	call	_digitalWrite	;wreg free
  1658  0012E8                     
  1659                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  1660  0012E8  0E00               	movlw	0
  1661  0012EA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1662  0012EC  0E03               	movlw	3
  1663  0012EE  6E01               	movwf	digitalWrite@pin^0,c
  1664  0012F0  0E00               	movlw	0
  1665  0012F2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1666  0012F4  0E00               	movlw	0
  1667  0012F6  6E03               	movwf	digitalWrite@value^0,c
  1668  0012F8  EC84  F007         	call	_digitalWrite	;wreg free
  1669  0012FC                     
  1670                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  1671  0012FC  0E00               	movlw	0
  1672  0012FE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1673  001300  0E04               	movlw	4
  1674  001302  6E01               	movwf	digitalWrite@pin^0,c
  1675  001304  0E00               	movlw	0
  1676  001306  6E04               	movwf	(digitalWrite@value+1)^0,c
  1677  001308  0E00               	movlw	0
  1678  00130A  6E03               	movwf	digitalWrite@value^0,c
  1679  00130C  EC84  F007         	call	_digitalWrite	;wreg free
  1680  001310                     
  1681                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  1682  001310  0E00               	movlw	0
  1683  001312  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1684  001314  0E05               	movlw	5
  1685  001316  6E01               	movwf	digitalWrite@pin^0,c
  1686  001318  0E00               	movlw	0
  1687  00131A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1688  00131C  0E00               	movlw	0
  1689  00131E  6E03               	movwf	digitalWrite@value^0,c
  1690  001320  EC84  F007         	call	_digitalWrite	;wreg free
  1691                           
  1692                           ;ssd.c: 66:     PORTD = 0x00;
  1693  001324  0E00               	movlw	0
  1694  001326  6E83               	movwf	131,c	;volatile
  1695                           
  1696                           ;ssd.c: 69:     switch (display)
  1697  001328  EFF2  F009         	goto	l2265
  1698  00132C                     l2237:
  1699                           
  1700                           ;ssd.c: 72:             PORTD = valor[v0];
  1701  00132C  0E01               	movlw	low _valor
  1702  00132E  2479               	addwf	_v0^0,w,c
  1703  001330  6EF6               	movwf	tblptrl,c
  1704  001332  6AF7               	clrf	tblptrh,c
  1705  001334  0E06               	movlw	high _valor
  1706  001336  22F7               	addwfc	tblptrh,f,c
  1707  001338                     	if	0	;There are less than 3 active tblptr bytes
  1708  001338                     	endif
  1709  001338  0008               	tblrd		*
  1710  00133A  CFF5 FF83          	movff	tablat,3971	;volatile
  1711  00133E                     
  1712                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  1713  00133E  0E00               	movlw	0
  1714  001340  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1715  001342  0E02               	movlw	2
  1716  001344  6E01               	movwf	digitalWrite@pin^0,c
  1717  001346  0E00               	movlw	0
  1718  001348  6E04               	movwf	(digitalWrite@value+1)^0,c
  1719  00134A  0E01               	movlw	1
  1720  00134C  6E03               	movwf	digitalWrite@value^0,c
  1721  00134E  EC84  F007         	call	_digitalWrite	;wreg free
  1722  001352                     
  1723                           ;ssd.c: 74:             display = 1;
  1724  001352  0E01               	movlw	1
  1725  001354  6E7A               	movwf	_display^0,c
  1726                           
  1727                           ;ssd.c: 75:             break;
  1728  001356  EF0F  F00A         	goto	l37
  1729  00135A                     l2243:
  1730                           
  1731                           ;ssd.c: 78:             PORTD = valor[v1];
  1732  00135A  0E01               	movlw	low _valor
  1733  00135C  2478               	addwf	_v1^0,w,c
  1734  00135E  6EF6               	movwf	tblptrl,c
  1735  001360  6AF7               	clrf	tblptrh,c
  1736  001362  0E06               	movlw	high _valor
  1737  001364  22F7               	addwfc	tblptrh,f,c
  1738  001366                     	if	0	;There are less than 3 active tblptr bytes
  1739  001366                     	endif
  1740  001366  0008               	tblrd		*
  1741  001368  CFF5 FF83          	movff	tablat,3971	;volatile
  1742  00136C                     
  1743                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  1744  00136C  0E00               	movlw	0
  1745  00136E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1746  001370  0E03               	movlw	3
  1747  001372  6E01               	movwf	digitalWrite@pin^0,c
  1748  001374  0E00               	movlw	0
  1749  001376  6E04               	movwf	(digitalWrite@value+1)^0,c
  1750  001378  0E01               	movlw	1
  1751  00137A  6E03               	movwf	digitalWrite@value^0,c
  1752  00137C  EC84  F007         	call	_digitalWrite	;wreg free
  1753  001380                     
  1754                           ;ssd.c: 80:             display = 2;
  1755  001380  0E02               	movlw	2
  1756  001382  6E7A               	movwf	_display^0,c
  1757                           
  1758                           ;ssd.c: 81:             break;
  1759  001384  EF0F  F00A         	goto	l37
  1760  001388                     l2249:
  1761                           
  1762                           ;ssd.c: 84:             PORTD = valor[v2];
  1763  001388  0E01               	movlw	low _valor
  1764  00138A  2477               	addwf	_v2^0,w,c
  1765  00138C  6EF6               	movwf	tblptrl,c
  1766  00138E  6AF7               	clrf	tblptrh,c
  1767  001390  0E06               	movlw	high _valor
  1768  001392  22F7               	addwfc	tblptrh,f,c
  1769  001394                     	if	0	;There are less than 3 active tblptr bytes
  1770  001394                     	endif
  1771  001394  0008               	tblrd		*
  1772  001396  CFF5 FF83          	movff	tablat,3971	;volatile
  1773  00139A                     
  1774                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  1775  00139A  0E00               	movlw	0
  1776  00139C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1777  00139E  0E04               	movlw	4
  1778  0013A0  6E01               	movwf	digitalWrite@pin^0,c
  1779  0013A2  0E00               	movlw	0
  1780  0013A4  6E04               	movwf	(digitalWrite@value+1)^0,c
  1781  0013A6  0E01               	movlw	1
  1782  0013A8  6E03               	movwf	digitalWrite@value^0,c
  1783  0013AA  EC84  F007         	call	_digitalWrite	;wreg free
  1784  0013AE                     
  1785                           ;ssd.c: 86:             display = 3;
  1786  0013AE  0E03               	movlw	3
  1787  0013B0  6E7A               	movwf	_display^0,c
  1788                           
  1789                           ;ssd.c: 87:             break;
  1790  0013B2  EF0F  F00A         	goto	l37
  1791  0013B6                     l2255:
  1792                           
  1793                           ;ssd.c: 90:             PORTD = valor[v3];
  1794  0013B6  0E01               	movlw	low _valor
  1795  0013B8  2476               	addwf	_v3^0,w,c
  1796  0013BA  6EF6               	movwf	tblptrl,c
  1797  0013BC  6AF7               	clrf	tblptrh,c
  1798  0013BE  0E06               	movlw	high _valor
  1799  0013C0  22F7               	addwfc	tblptrh,f,c
  1800  0013C2                     	if	0	;There are less than 3 active tblptr bytes
  1801  0013C2                     	endif
  1802  0013C2  0008               	tblrd		*
  1803  0013C4  CFF5 FF83          	movff	tablat,3971	;volatile
  1804  0013C8                     
  1805                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  1806  0013C8  0E00               	movlw	0
  1807  0013CA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1808  0013CC  0E05               	movlw	5
  1809  0013CE  6E01               	movwf	digitalWrite@pin^0,c
  1810  0013D0  0E00               	movlw	0
  1811  0013D2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1812  0013D4  0E01               	movlw	1
  1813  0013D6  6E03               	movwf	digitalWrite@value^0,c
  1814  0013D8  EC84  F007         	call	_digitalWrite	;wreg free
  1815  0013DC                     l2259:
  1816                           
  1817                           ;ssd.c: 92:             display = 0;
  1818  0013DC  0E00               	movlw	0
  1819  0013DE  6E7A               	movwf	_display^0,c
  1820                           
  1821                           ;ssd.c: 93:             break;
  1822  0013E0  EF0F  F00A         	goto	l37
  1823  0013E4                     l2265:
  1824  0013E4  507A               	movf	_display^0,w,c
  1825  0013E6  6E07               	movwf	??_ssdUpdate^0,c
  1826  0013E8  6A08               	clrf	(??_ssdUpdate+1)^0,c
  1827                           
  1828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 1, Range of values is 0 to 0
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte            4     3 (average)
  1834                           ;	Chosen strategy is simple_byte
  1835  0013EA  5008               	movf	(??_ssdUpdate+1)^0,w,c
  1836  0013EC  0A00               	xorlw	0	; case 0
  1837  0013EE  B4D8               	btfsc	status,2,c
  1838  0013F0  EFFC  F009         	goto	l2823
  1839  0013F4  EFEE  F009         	goto	l2259
  1840  0013F8                     l2823:
  1841                           
  1842                           ; Switch size 1, requested type "simple"
  1843                           ; Number of cases is 4, Range of values is 0 to 3
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte           13     7 (average)
  1847                           ;	Chosen strategy is simple_byte
  1848  0013F8  5007               	movf	??_ssdUpdate^0,w,c
  1849  0013FA  0A00               	xorlw	0	; case 0
  1850  0013FC  B4D8               	btfsc	status,2,c
  1851  0013FE  EF96  F009         	goto	l2237
  1852  001402  0A01               	xorlw	1	; case 1
  1853  001404  B4D8               	btfsc	status,2,c
  1854  001406  EFAD  F009         	goto	l2243
  1855  00140A  0A03               	xorlw	3	; case 2
  1856  00140C  B4D8               	btfsc	status,2,c
  1857  00140E  EFC4  F009         	goto	l2249
  1858  001412  0A01               	xorlw	1	; case 3
  1859  001414  B4D8               	btfsc	status,2,c
  1860  001416  EFDB  F009         	goto	l2255
  1861  00141A  EFEE  F009         	goto	l2259
  1862  00141E                     l37:
  1863  00141E  0012               	return		;funcret
  1864  001420                     __end_of_ssdUpdate:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _ssdInit *****************
  1868 ;; Defined at:
  1869 ;;		line 101 in file "ssd.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1883 ;;      Params:         0       0       0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 1
  1890 ;; This function calls:
  1891 ;;		_pinMode
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text2
  1898  0019DC                     __ptext2:
  1899                           	callstack 0
  1900  0019DC                     _ssdInit:
  1901                           	callstack 29
  1902  0019DC                     
  1903                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  1904  0019DC  0E00               	movlw	0
  1905  0019DE  6E02               	movwf	(pinMode@pin+1)^0,c
  1906  0019E0  0E02               	movlw	2
  1907  0019E2  6E01               	movwf	pinMode@pin^0,c
  1908  0019E4  0E00               	movlw	0
  1909  0019E6  6E04               	movwf	(pinMode@type+1)^0,c
  1910  0019E8  0E00               	movlw	0
  1911  0019EA  6E03               	movwf	pinMode@type^0,c
  1912  0019EC  EC5D  F006         	call	_pinMode	;wreg free
  1913                           
  1914                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  1915  0019F0  0E00               	movlw	0
  1916  0019F2  6E02               	movwf	(pinMode@pin+1)^0,c
  1917  0019F4  0E03               	movlw	3
  1918  0019F6  6E01               	movwf	pinMode@pin^0,c
  1919  0019F8  0E00               	movlw	0
  1920  0019FA  6E04               	movwf	(pinMode@type+1)^0,c
  1921  0019FC  0E00               	movlw	0
  1922  0019FE  6E03               	movwf	pinMode@type^0,c
  1923  001A00  EC5D  F006         	call	_pinMode	;wreg free
  1924                           
  1925                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  1926  001A04  0E00               	movlw	0
  1927  001A06  6E02               	movwf	(pinMode@pin+1)^0,c
  1928  001A08  0E04               	movlw	4
  1929  001A0A  6E01               	movwf	pinMode@pin^0,c
  1930  001A0C  0E00               	movlw	0
  1931  001A0E  6E04               	movwf	(pinMode@type+1)^0,c
  1932  001A10  0E00               	movlw	0
  1933  001A12  6E03               	movwf	pinMode@type^0,c
  1934  001A14  EC5D  F006         	call	_pinMode	;wreg free
  1935                           
  1936                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  1937  001A18  0E00               	movlw	0
  1938  001A1A  6E02               	movwf	(pinMode@pin+1)^0,c
  1939  001A1C  0E05               	movlw	5
  1940  001A1E  6E01               	movwf	pinMode@pin^0,c
  1941  001A20  0E00               	movlw	0
  1942  001A22  6E04               	movwf	(pinMode@type+1)^0,c
  1943  001A24  0E00               	movlw	0
  1944  001A26  6E03               	movwf	pinMode@type^0,c
  1945  001A28  EC5D  F006         	call	_pinMode	;wreg free
  1946  001A2C                     
  1947                           ;ssd.c: 109:     TRISD = 0x00;
  1948  001A2C  0E00               	movlw	0
  1949  001A2E  6E95               	movwf	149,c	;volatile
  1950  001A30  0012               	return		;funcret
  1951  001A32                     __end_of_ssdInit:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _ssdDigit *****************
  1955 ;; Defined at:
  1956 ;;		line 38 in file "ssd.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  val             1    wreg     unsigned char 
  1959 ;;  pos             1    0[COMRAM] unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  val             1    1[COMRAM] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1971 ;;      Params:         1       0       0       0       0       0       0
  1972 ;;      Locals:         1       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0
  1974 ;;      Totals:         2       0       0       0       0       0       0
  1975 ;;Total ram usage:        2 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text3
  1985  001984                     __ptext3:
  1986                           	callstack 0
  1987  001984                     _ssdDigit:
  1988                           	callstack 30
  1989                           
  1990                           ;incstack = 0
  1991                           ;ssdDigit@val stored from wreg
  1992  001984  6E02               	movwf	ssdDigit@val^0,c
  1993  001986                     
  1994                           ;ssd.c: 39:     if (pos == 0) {
  1995  001986  5001               	movf	ssdDigit@pos^0,w,c
  1996  001988  A4D8               	btfss	status,2,c
  1997  00198A  EFC9  F00C         	goto	u1821
  1998  00198E  EFCB  F00C         	goto	u1820
  1999  001992                     u1821:
  2000  001992  EFCD  F00C         	goto	l2215
  2001  001996                     u1820:
  2002  001996                     
  2003                           ;ssd.c: 40:         v0 = val;
  2004  001996  C002  F079         	movff	ssdDigit@val,_v0
  2005  00199A                     l2215:
  2006                           
  2007                           ;ssd.c: 42:     if (pos == 1) {
  2008  00199A  0401               	decf	ssdDigit@pos^0,w,c
  2009  00199C  A4D8               	btfss	status,2,c
  2010  00199E  EFD3  F00C         	goto	u1831
  2011  0019A2  EFD5  F00C         	goto	u1830
  2012  0019A6                     u1831:
  2013  0019A6  EFD7  F00C         	goto	l2219
  2014  0019AA                     u1830:
  2015  0019AA                     
  2016                           ;ssd.c: 43:         v1 = val;
  2017  0019AA  C002  F078         	movff	ssdDigit@val,_v1
  2018  0019AE                     l2219:
  2019                           
  2020                           ;ssd.c: 45:     if (pos == 2) {
  2021  0019AE  0E02               	movlw	2
  2022  0019B0  1801               	xorwf	ssdDigit@pos^0,w,c
  2023  0019B2  A4D8               	btfss	status,2,c
  2024  0019B4  EFDE  F00C         	goto	u1841
  2025  0019B8  EFE0  F00C         	goto	u1840
  2026  0019BC                     u1841:
  2027  0019BC  EFE2  F00C         	goto	l2223
  2028  0019C0                     u1840:
  2029  0019C0                     
  2030                           ;ssd.c: 46:         v2 = val;
  2031  0019C0  C002  F077         	movff	ssdDigit@val,_v2
  2032  0019C4                     l2223:
  2033                           
  2034                           ;ssd.c: 48:     if (pos == 3) {
  2035  0019C4  0E03               	movlw	3
  2036  0019C6  1801               	xorwf	ssdDigit@pos^0,w,c
  2037  0019C8  A4D8               	btfss	status,2,c
  2038  0019CA  EFE9  F00C         	goto	u1851
  2039  0019CE  EFEB  F00C         	goto	u1850
  2040  0019D2                     u1851:
  2041  0019D2  EFED  F00C         	goto	l27
  2042  0019D6                     u1850:
  2043  0019D6                     
  2044                           ;ssd.c: 49:         v3 = val;
  2045  0019D6  C002  F076         	movff	ssdDigit@val,_v3
  2046  0019DA                     l27:
  2047  0019DA  0012               	return		;funcret
  2048  0019DC                     __end_of_ssdDigit:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _rtc_r *****************
  2052 ;; Defined at:
  2053 ;;		line 44 in file "rtc_r.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  tmp             1    9[COMRAM] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2067 ;;      Params:         0       0       0       0       0       0       0
  2068 ;;      Locals:         1       0       0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0
  2070 ;;      Totals:         1       0       0       0       0       0       0
  2071 ;;Total ram usage:        1 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 2
  2074 ;; This function calls:
  2075 ;;		_getd
  2076 ;;		_getu
  2077 ;;		_i2c_rb
  2078 ;;		_i2c_start
  2079 ;;		_i2c_stop
  2080 ;;		_i2c_wb
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text4
  2087  001420                     __ptext4:
  2088                           	callstack 0
  2089  001420                     _rtc_r:
  2090                           	callstack 28
  2091  001420                     
  2092                           ;rtc_r.c: 46:   unsigned char tmp;;rtc_r.c: 48:   i2c_start();
  2093  001420  EC91  F00D         	call	_i2c_start	;wreg free
  2094                           
  2095                           ;rtc_r.c: 49:   i2c_wb(0xD0);
  2096  001424  0ED0               	movlw	208
  2097  001426  EC94  F00C         	call	_i2c_wb
  2098                           
  2099                           ;rtc_r.c: 50:   i2c_wb(0);
  2100  00142A  0E00               	movlw	0
  2101  00142C  EC94  F00C         	call	_i2c_wb
  2102                           
  2103                           ;rtc_r.c: 52:   i2c_start();
  2104  001430  EC91  F00D         	call	_i2c_start	;wreg free
  2105                           
  2106                           ;rtc_r.c: 53:   i2c_wb(0xD1);
  2107  001434  0ED1               	movlw	209
  2108  001436  EC94  F00C         	call	_i2c_wb
  2109                           
  2110                           ;rtc_r.c: 54:   tmp= 0x7F & i2c_rb(1);
  2111  00143A  0E01               	movlw	1
  2112  00143C  EC46  F00B         	call	_i2c_rb
  2113  001440  0B7F               	andlw	127
  2114  001442  6E0A               	movwf	rtc_r@tmp^0,c
  2115  001444                     
  2116                           ;rtc_r.c: 55:   time[5]=':';
  2117  001444  0E3A               	movlw	58
  2118  001446  0100               	movlb	0	; () banked
  2119  001448  6FC8               	movwf	(_time+5)& (0+255),b	;volatile
  2120  00144A                     
  2121                           ; BSR set to: 0
  2122                           ;rtc_r.c: 56:   time[6]=getd(tmp);
  2123  00144A  500A               	movf	rtc_r@tmp^0,w,c
  2124  00144C  EC99  F00D         	call	_getd
  2125  001450  0100               	movlb	0	; () banked
  2126  001452  6FC9               	movwf	(_time+6)& (0+255),b	;volatile
  2127  001454                     
  2128                           ; BSR set to: 0
  2129                           ;rtc_r.c: 57:   time[7]=getu(tmp);
  2130  001454  500A               	movf	rtc_r@tmp^0,w,c
  2131  001456  EC9F  F00D         	call	_getu
  2132  00145A  0100               	movlb	0	; () banked
  2133  00145C  6FCA               	movwf	(_time+7)& (0+255),b	;volatile
  2134  00145E                     
  2135                           ; BSR set to: 0
  2136                           ;rtc_r.c: 58:   time[8]=0;
  2137  00145E  0E00               	movlw	0
  2138  001460  6FCB               	movwf	(_time+8)& (0+255),b	;volatile
  2139                           
  2140                           ;rtc_r.c: 60:   tmp= 0x7F & i2c_rb(1);
  2141  001462  0E01               	movlw	1
  2142  001464  EC46  F00B         	call	_i2c_rb
  2143  001468  0B7F               	andlw	127
  2144  00146A  6E0A               	movwf	rtc_r@tmp^0,c
  2145  00146C                     
  2146                           ;rtc_r.c: 61:   time[2]=':';
  2147  00146C  0E3A               	movlw	58
  2148  00146E  0100               	movlb	0	; () banked
  2149  001470  6FC5               	movwf	(_time+2)& (0+255),b	;volatile
  2150  001472                     
  2151                           ; BSR set to: 0
  2152                           ;rtc_r.c: 62:   time[3]=getd(tmp);
  2153  001472  500A               	movf	rtc_r@tmp^0,w,c
  2154  001474  EC99  F00D         	call	_getd
  2155  001478  0100               	movlb	0	; () banked
  2156  00147A  6FC6               	movwf	(_time+3)& (0+255),b	;volatile
  2157  00147C                     
  2158                           ; BSR set to: 0
  2159                           ;rtc_r.c: 63:   time[4]=getu(tmp);
  2160  00147C  500A               	movf	rtc_r@tmp^0,w,c
  2161  00147E  EC9F  F00D         	call	_getu
  2162  001482  0100               	movlb	0	; () banked
  2163  001484  6FC7               	movwf	(_time+4)& (0+255),b	;volatile
  2164  001486                     
  2165                           ; BSR set to: 0
  2166                           ;rtc_r.c: 65:   tmp= 0x3F & i2c_rb(1);
  2167  001486  0E01               	movlw	1
  2168  001488  EC46  F00B         	call	_i2c_rb
  2169  00148C  0B3F               	andlw	63
  2170  00148E  6E0A               	movwf	rtc_r@tmp^0,c
  2171  001490                     
  2172                           ;rtc_r.c: 66:   time[0]=getd(tmp);
  2173  001490  500A               	movf	rtc_r@tmp^0,w,c
  2174  001492  EC99  F00D         	call	_getd
  2175  001496  0100               	movlb	0	; () banked
  2176  001498  6FC3               	movwf	_time& (0+255),b	;volatile
  2177  00149A                     
  2178                           ; BSR set to: 0
  2179                           ;rtc_r.c: 67:   time[1]=getu(tmp);
  2180  00149A  500A               	movf	rtc_r@tmp^0,w,c
  2181  00149C  EC9F  F00D         	call	_getu
  2182  0014A0  0100               	movlb	0	; () banked
  2183  0014A2  6FC4               	movwf	(_time+1)& (0+255),b	;volatile
  2184  0014A4                     
  2185                           ; BSR set to: 0
  2186                           ;rtc_r.c: 69:   i2c_rb(1);
  2187  0014A4  0E01               	movlw	1
  2188  0014A6  EC46  F00B         	call	_i2c_rb
  2189  0014AA                     
  2190                           ;rtc_r.c: 71:   tmp= 0x3F & i2c_rb(1);
  2191  0014AA  0E01               	movlw	1
  2192  0014AC  EC46  F00B         	call	_i2c_rb
  2193  0014B0  0B3F               	andlw	63
  2194  0014B2  6E0A               	movwf	rtc_r@tmp^0,c
  2195  0014B4                     
  2196                           ;rtc_r.c: 72:   date[0]=getd(tmp);
  2197  0014B4  500A               	movf	rtc_r@tmp^0,w,c
  2198  0014B6  EC99  F00D         	call	_getd
  2199  0014BA  0100               	movlb	0	; () banked
  2200  0014BC  6FCD               	movwf	_date& (0+255),b	;volatile
  2201  0014BE                     
  2202                           ; BSR set to: 0
  2203                           ;rtc_r.c: 73:   date[1]=getu(tmp);
  2204  0014BE  500A               	movf	rtc_r@tmp^0,w,c
  2205  0014C0  EC9F  F00D         	call	_getu
  2206  0014C4  0100               	movlb	0	; () banked
  2207  0014C6  6FCE               	movwf	(_date+1)& (0+255),b	;volatile
  2208  0014C8                     
  2209                           ; BSR set to: 0
  2210                           ;rtc_r.c: 76:   tmp= 0x1F & i2c_rb(1);
  2211  0014C8  0E01               	movlw	1
  2212  0014CA  EC46  F00B         	call	_i2c_rb
  2213  0014CE  0B1F               	andlw	31
  2214  0014D0  6E0A               	movwf	rtc_r@tmp^0,c
  2215  0014D2                     
  2216                           ;rtc_r.c: 77:   date[2]='/';
  2217  0014D2  0E2F               	movlw	47
  2218  0014D4  0100               	movlb	0	; () banked
  2219  0014D6  6FCF               	movwf	(_date+2)& (0+255),b	;volatile
  2220                           
  2221                           ;rtc_r.c: 78:   date[3]=getd(tmp);
  2222  0014D8  500A               	movf	rtc_r@tmp^0,w,c
  2223  0014DA  EC99  F00D         	call	_getd
  2224  0014DE  0100               	movlb	0	; () banked
  2225  0014E0  6FD0               	movwf	(_date+3)& (0+255),b	;volatile
  2226                           
  2227                           ;rtc_r.c: 79:   date[4]=getu(tmp);
  2228  0014E2  500A               	movf	rtc_r@tmp^0,w,c
  2229  0014E4  EC9F  F00D         	call	_getu
  2230  0014E8  0100               	movlb	0	; () banked
  2231  0014EA  6FD1               	movwf	(_date+4)& (0+255),b	;volatile
  2232                           
  2233                           ;rtc_r.c: 81:   tmp= i2c_rb(0);
  2234  0014EC  0E00               	movlw	0
  2235  0014EE  EC46  F00B         	call	_i2c_rb
  2236  0014F2  6E0A               	movwf	rtc_r@tmp^0,c
  2237  0014F4                     
  2238                           ;rtc_r.c: 82:   date[5]='/';
  2239  0014F4  0E2F               	movlw	47
  2240  0014F6  0100               	movlb	0	; () banked
  2241  0014F8  6FD2               	movwf	(_date+5)& (0+255),b	;volatile
  2242  0014FA                     
  2243                           ; BSR set to: 0
  2244                           ;rtc_r.c: 83:   date[6]=getd(tmp);
  2245  0014FA  500A               	movf	rtc_r@tmp^0,w,c
  2246  0014FC  EC99  F00D         	call	_getd
  2247  001500  0100               	movlb	0	; () banked
  2248  001502  6FD3               	movwf	(_date+6)& (0+255),b	;volatile
  2249  001504                     
  2250                           ; BSR set to: 0
  2251                           ;rtc_r.c: 84:   date[7]=getu(tmp);
  2252  001504  500A               	movf	rtc_r@tmp^0,w,c
  2253  001506  EC9F  F00D         	call	_getu
  2254  00150A  0100               	movlb	0	; () banked
  2255  00150C  6FD4               	movwf	(_date+7)& (0+255),b	;volatile
  2256  00150E                     
  2257                           ; BSR set to: 0
  2258                           ;rtc_r.c: 85:   date[8]=0;
  2259  00150E  0E00               	movlw	0
  2260  001510  6FD5               	movwf	(_date+8)& (0+255),b	;volatile
  2261                           
  2262                           ;rtc_r.c: 87:   i2c_stop();
  2263  001512  EC89  F00D         	call	_i2c_stop	;wreg free
  2264  001516  0012               	return		;funcret
  2265  001518                     __end_of_rtc_r:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _i2c_wb *****************
  2269 ;; Defined at:
  2270 ;;		line 62 in file "i2c.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  val             1    wreg     unsigned char 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  val             1    6[COMRAM] unsigned char 
  2275 ;;  i               1    7[COMRAM] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2285 ;;      Params:         0       0       0       0       0       0       0
  2286 ;;      Locals:         2       0       0       0       0       0       0
  2287 ;;      Temps:          2       0       0       0       0       0       0
  2288 ;;      Totals:         4       0       0       0       0       0       0
  2289 ;;Total ram usage:        4 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 1
  2292 ;; This function calls:
  2293 ;;		_delay
  2294 ;; This function is called by:
  2295 ;;		_rtc_r
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text5
  2300  001928                     __ptext5:
  2301                           	callstack 0
  2302  001928                     _i2c_wb:
  2303                           	callstack 28
  2304                           
  2305                           ;incstack = 0
  2306                           ;i2c_wb@val stored from wreg
  2307  001928  6E07               	movwf	i2c_wb@val^0,c
  2308  00192A                     
  2309                           ;i2c.c: 63:     unsigned char i;;i2c.c: 64:     PORTCbits.RC3 = 0;
  2310  00192A  9682               	bcf	130,3,c	;volatile
  2311  00192C                     
  2312                           ;i2c.c: 65:     for (i = 0; i < 8; i++) {
  2313  00192C  0E00               	movlw	0
  2314  00192E  6E08               	movwf	i2c_wb@i^0,c
  2315  001930                     l2149:
  2316                           
  2317                           ;i2c.c: 66:         PORTCbits.RC4 = ((val >> (7 - i))& 0x01);
  2318  001930  5008               	movf	i2c_wb@i^0,w,c
  2319  001932  0807               	sublw	7
  2320  001934  6E05               	movwf	??_i2c_wb^0,c
  2321  001936  C007  F006         	movff	i2c_wb@val,??_i2c_wb+1
  2322  00193A  2A05               	incf	??_i2c_wb^0,f,c
  2323  00193C  EFA2  F00C         	goto	u1764
  2324  001940                     u1765:
  2325  001940  90D8               	bcf	status,0,c
  2326  001942  3206               	rrcf	(??_i2c_wb+1)^0,f,c
  2327  001944                     u1764:
  2328  001944  2E05               	decfsz	??_i2c_wb^0,f,c
  2329  001946  EFA0  F00C         	goto	u1765
  2330  00194A  0E01               	movlw	1
  2331  00194C  1606               	andwf	(??_i2c_wb+1)^0,f,c
  2332  00194E  3A06               	swapf	(??_i2c_wb+1)^0,f,c
  2333  001950  5082               	movf	130,w,c	;volatile
  2334  001952  1806               	xorwf	(??_i2c_wb+1)^0,w,c
  2335  001954  0BEF               	andlw	-17
  2336  001956  1806               	xorwf	(??_i2c_wb+1)^0,w,c
  2337  001958  6E82               	movwf	130,c	;volatile
  2338  00195A                     
  2339                           ;i2c.c: 67:         PORTCbits.RC3 = 1;
  2340  00195A  8682               	bsf	130,3,c	;volatile
  2341  00195C                     
  2342                           ;i2c.c: 68:         delay();
  2343  00195C  EC64  F00C         	call	_delay	;wreg free
  2344  001960                     
  2345                           ;i2c.c: 69:         PORTCbits.RC3 = 0;
  2346  001960  9682               	bcf	130,3,c	;volatile
  2347  001962                     
  2348                           ;i2c.c: 70:     }
  2349  001962  2A08               	incf	i2c_wb@i^0,f,c
  2350  001964  0E07               	movlw	7
  2351  001966  6408               	cpfsgt	i2c_wb@i^0,c
  2352  001968  EFB8  F00C         	goto	u1771
  2353  00196C  EFBA  F00C         	goto	u1770
  2354  001970                     u1771:
  2355  001970  EF98  F00C         	goto	l2149
  2356  001974                     u1770:
  2357  001974                     
  2358                           ;i2c.c: 71:     PORTCbits.RC4 = 1;
  2359  001974  8882               	bsf	130,4,c	;volatile
  2360  001976                     
  2361                           ;i2c.c: 72:     delay();
  2362  001976  EC64  F00C         	call	_delay	;wreg free
  2363  00197A                     
  2364                           ;i2c.c: 73:     PORTCbits.RC3 = 1;
  2365  00197A  8682               	bsf	130,3,c	;volatile
  2366                           
  2367                           ;i2c.c: 74:     delay();
  2368  00197C  EC64  F00C         	call	_delay	;wreg free
  2369  001980                     
  2370                           ;i2c.c: 75:     PORTCbits.RC3 = 0;
  2371  001980  9682               	bcf	130,3,c	;volatile
  2372  001982  0012               	return		;funcret
  2373  001984                     __end_of_i2c_wb:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function _i2c_stop *****************
  2377 ;; Defined at:
  2378 ;;		line 54 in file "i2c.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2392 ;;      Params:         0       0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 1
  2399 ;; This function calls:
  2400 ;;		_delay
  2401 ;; This function is called by:
  2402 ;;		_rtc_r
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text6
  2407  001B12                     __ptext6:
  2408                           	callstack 0
  2409  001B12                     _i2c_stop:
  2410                           	callstack 28
  2411  001B12                     
  2412                           ;i2c.c: 55:     PORTCbits.RC3 = 1;
  2413  001B12  8682               	bsf	130,3,c	;volatile
  2414                           
  2415                           ;i2c.c: 56:     PORTCbits.RC4 = 0;
  2416  001B14  9882               	bcf	130,4,c	;volatile
  2417  001B16                     
  2418                           ;i2c.c: 57:     delay();
  2419  001B16  EC64  F00C         	call	_delay	;wreg free
  2420  001B1A                     
  2421                           ;i2c.c: 58:     PORTCbits.RC4 = 1;
  2422  001B1A  8882               	bsf	130,4,c	;volatile
  2423                           
  2424                           ;i2c.c: 59:     delay();
  2425  001B1C  EC64  F00C         	call	_delay	;wreg free
  2426  001B20  0012               	return		;funcret
  2427  001B22                     __end_of_i2c_stop:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _i2c_start *****************
  2431 ;; Defined at:
  2432 ;;		line 46 in file "i2c.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2446 ;;      Params:         0       0       0       0       0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0
  2449 ;;      Totals:         0       0       0       0       0       0       0
  2450 ;;Total ram usage:        0 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 1
  2453 ;; This function calls:
  2454 ;;		_delay
  2455 ;; This function is called by:
  2456 ;;		_rtc_r
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text7
  2461  001B22                     __ptext7:
  2462                           	callstack 0
  2463  001B22                     _i2c_start:
  2464                           	callstack 28
  2465  001B22                     
  2466                           ;i2c.c: 47:     PORTCbits.RC3 = 1;
  2467  001B22  8682               	bsf	130,3,c	;volatile
  2468                           
  2469                           ;i2c.c: 48:     PORTCbits.RC4 = 1;
  2470  001B24  8882               	bsf	130,4,c	;volatile
  2471  001B26                     
  2472                           ;i2c.c: 49:     delay();
  2473  001B26  EC64  F00C         	call	_delay	;wreg free
  2474  001B2A                     
  2475                           ;i2c.c: 50:     PORTCbits.RC4 = 0;
  2476  001B2A  9882               	bcf	130,4,c	;volatile
  2477                           
  2478                           ;i2c.c: 51:     delay();
  2479  001B2C  EC64  F00C         	call	_delay	;wreg free
  2480  001B30  0012               	return		;funcret
  2481  001B32                     __end_of_i2c_start:
  2482                           	callstack 0
  2483                           
  2484 ;; *************** function _i2c_rb *****************
  2485 ;; Defined at:
  2486 ;;		line 78 in file "i2c.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  ack             1    wreg     unsigned char 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  ack             1    6[COMRAM] unsigned char 
  2491 ;;  i               1    8[COMRAM] unsigned char 
  2492 ;;  ret             1    7[COMRAM] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      unsigned char 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2502 ;;      Params:         0       0       0       0       0       0       0
  2503 ;;      Locals:         3       0       0       0       0       0       0
  2504 ;;      Temps:          2       0       0       0       0       0       0
  2505 ;;      Totals:         5       0       0       0       0       0       0
  2506 ;;Total ram usage:        5 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		_delay
  2511 ;; This function is called by:
  2512 ;;		_rtc_r
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text8
  2517  00168C                     __ptext8:
  2518                           	callstack 0
  2519  00168C                     _i2c_rb:
  2520                           	callstack 28
  2521                           
  2522                           ;incstack = 0
  2523                           ;i2c_rb@ack stored from wreg
  2524  00168C  6E07               	movwf	i2c_rb@ack^0,c
  2525  00168E                     
  2526                           ;i2c.c: 79:     char i;;i2c.c: 80:     unsigned char ret = 0;
  2527  00168E  0E00               	movlw	0
  2528  001690  6E08               	movwf	i2c_rb@ret^0,c
  2529  001692                     
  2530                           ;i2c.c: 82:     PORTCbits.RC3 = 0;
  2531  001692  9682               	bcf	130,3,c	;volatile
  2532  001694                     
  2533                           ;i2c.c: 83:     TRISCbits.TRISC4 = 1;
  2534  001694  8894               	bsf	148,4,c	;volatile
  2535  001696                     
  2536                           ;i2c.c: 84:     PORTCbits.RC4 = 1;
  2537  001696  8882               	bsf	130,4,c	;volatile
  2538                           
  2539                           ;i2c.c: 85:     for (i = 0; i < 8; i++) {
  2540  001698  0E00               	movlw	0
  2541  00169A  6E09               	movwf	i2c_rb@i^0,c
  2542  00169C                     l213:
  2543                           
  2544                           ;i2c.c: 86:         PORTCbits.RC3 = 1;
  2545  00169C  8682               	bsf	130,3,c	;volatile
  2546  00169E                     
  2547                           ;i2c.c: 87:         delay();
  2548  00169E  EC64  F00C         	call	_delay	;wreg free
  2549  0016A2                     
  2550                           ;i2c.c: 88:         ret |= (PORTCbits.RC4 << (7 - i));
  2551  0016A2  5009               	movf	i2c_rb@i^0,w,c
  2552  0016A4  0807               	sublw	7
  2553  0016A6  6E05               	movwf	??_i2c_rb^0,c
  2554  0016A8  B882               	btfsc	130,4,c	;volatile
  2555  0016AA  EF59  F00B         	goto	u1781
  2556  0016AE  EF5D  F00B         	goto	u1780
  2557  0016B2                     u1781:
  2558  0016B2  6A06               	clrf	(??_i2c_rb+1)^0,c
  2559  0016B4  2A06               	incf	(??_i2c_rb+1)^0,f,c
  2560  0016B6  EF5E  F00B         	goto	u1788
  2561  0016BA                     u1780:
  2562  0016BA  6A06               	clrf	(??_i2c_rb+1)^0,c
  2563  0016BC                     u1788:
  2564  0016BC  2A05               	incf	??_i2c_rb^0,f,c
  2565  0016BE  EF63  F00B         	goto	u1794
  2566  0016C2                     u1795:
  2567  0016C2  90D8               	bcf	status,0,c
  2568  0016C4  3606               	rlcf	(??_i2c_rb+1)^0,f,c
  2569  0016C6                     u1794:
  2570  0016C6  2E05               	decfsz	??_i2c_rb^0,f,c
  2571  0016C8  EF61  F00B         	goto	u1795
  2572  0016CC  5006               	movf	(??_i2c_rb+1)^0,w,c
  2573  0016CE  1208               	iorwf	i2c_rb@ret^0,f,c
  2574  0016D0                     
  2575                           ;i2c.c: 89:         PORTCbits.RC3 = 0;
  2576  0016D0  9682               	bcf	130,3,c	;volatile
  2577  0016D2                     
  2578                           ;i2c.c: 90:     }
  2579  0016D2  2A09               	incf	i2c_rb@i^0,f,c
  2580  0016D4  0E07               	movlw	7
  2581  0016D6  6409               	cpfsgt	i2c_rb@i^0,c
  2582  0016D8  EF70  F00B         	goto	u1801
  2583  0016DC  EF72  F00B         	goto	u1800
  2584  0016E0                     u1801:
  2585  0016E0  EF4E  F00B         	goto	l213
  2586  0016E4                     u1800:
  2587  0016E4                     
  2588                           ;i2c.c: 91:     TRISCbits.TRISC4 = 0;
  2589  0016E4  9894               	bcf	148,4,c	;volatile
  2590  0016E6                     
  2591                           ;i2c.c: 92:     if (ack)
  2592  0016E6  5007               	movf	i2c_rb@ack^0,w,c
  2593  0016E8  B4D8               	btfsc	status,2,c
  2594  0016EA  EF79  F00B         	goto	u1811
  2595  0016EE  EF7B  F00B         	goto	u1810
  2596  0016F2                     u1811:
  2597  0016F2  EF7E  F00B         	goto	l215
  2598  0016F6                     u1810:
  2599  0016F6                     
  2600                           ;i2c.c: 93:         PORTCbits.RC4 = 0;
  2601  0016F6  9882               	bcf	130,4,c	;volatile
  2602  0016F8  EF7F  F00B         	goto	l2193
  2603  0016FC                     l215:
  2604                           
  2605                           ;i2c.c: 95:         PORTCbits.RC4 = 1;
  2606  0016FC  8882               	bsf	130,4,c	;volatile
  2607  0016FE                     l2193:
  2608                           
  2609                           ;i2c.c: 96:     delay();
  2610  0016FE  EC64  F00C         	call	_delay	;wreg free
  2611  001702                     
  2612                           ;i2c.c: 97:     PORTCbits.RC3 = 1;
  2613  001702  8682               	bsf	130,3,c	;volatile
  2614                           
  2615                           ;i2c.c: 98:     delay();
  2616  001704  EC64  F00C         	call	_delay	;wreg free
  2617  001708                     
  2618                           ;i2c.c: 99:     PORTCbits.RC3 = 0;
  2619  001708  9682               	bcf	130,3,c	;volatile
  2620  00170A                     
  2621                           ;i2c.c: 101:     return ret;
  2622  00170A  5008               	movf	i2c_rb@ret^0,w,c
  2623  00170C  0012               	return		;funcret
  2624  00170E                     __end_of_i2c_rb:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _delay *****************
  2628 ;; Defined at:
  2629 ;;		line 29 in file "i2c.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  i               2    0[COMRAM] unsigned int 
  2634 ;;  k               1    3[COMRAM] volatile unsigned char 
  2635 ;;  j               1    2[COMRAM] volatile unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2645 ;;      Params:         0       0       0       0       0       0       0
  2646 ;;      Locals:         4       0       0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0
  2648 ;;      Totals:         4       0       0       0       0       0       0
  2649 ;;Total ram usage:        4 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_i2c_start
  2655 ;;		_i2c_stop
  2656 ;;		_i2c_wb
  2657 ;;		_i2c_rb
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text9
  2662  0018C8                     __ptext9:
  2663                           	callstack 0
  2664  0018C8                     _delay:
  2665                           	callstack 28
  2666  0018C8                     
  2667                           ;i2c.c: 30:     unsigned int i;;i2c.c: 31:     volatile unsigned char j, k;;i2c.c: 33:  
      +                             for (i = 0; i < 5; i++) {
  2668  0018C8  0E00               	movlw	0
  2669  0018CA  6E02               	movwf	(delay@i+1)^0,c
  2670  0018CC  0E00               	movlw	0
  2671  0018CE  6E01               	movwf	delay@i^0,c
  2672  0018D0                     l2043:
  2673                           
  2674                           ;i2c.c: 34:         for (j = 0; j < 41; j++) {
  2675  0018D0  0E00               	movlw	0
  2676  0018D2  6E03               	movwf	delay@j^0,c	;volatile
  2677  0018D4                     l2045:
  2678  0018D4  0E28               	movlw	40
  2679  0018D6  6403               	cpfsgt	delay@j^0,c	;volatile
  2680  0018D8  EF70  F00C         	goto	u1511
  2681  0018DC  EF72  F00C         	goto	u1510
  2682  0018E0                     u1511:
  2683  0018E0  EF74  F00C         	goto	l2049
  2684  0018E4                     u1510:
  2685  0018E4  EF86  F00C         	goto	l2063
  2686  0018E8                     l2049:
  2687                           
  2688                           ;i2c.c: 35:             for (k = 0; k < 3; k++);
  2689  0018E8  0E00               	movlw	0
  2690  0018EA  6E04               	movwf	delay@k^0,c	;volatile
  2691  0018EC                     l2051:
  2692  0018EC  0E02               	movlw	2
  2693  0018EE  6404               	cpfsgt	delay@k^0,c	;volatile
  2694  0018F0  EF7C  F00C         	goto	u1521
  2695  0018F4  EF7E  F00C         	goto	u1520
  2696  0018F8                     u1521:
  2697  0018F8  EF80  F00C         	goto	l2055
  2698  0018FC                     u1520:
  2699  0018FC  EF83  F00C         	goto	l2059
  2700  001900                     l2055:
  2701  001900  2A04               	incf	delay@k^0,f,c	;volatile
  2702  001902  EF76  F00C         	goto	l2051
  2703  001906                     l2059:
  2704                           
  2705                           ;i2c.c: 36:         }
  2706  001906  2A03               	incf	delay@j^0,f,c	;volatile
  2707  001908  EF6A  F00C         	goto	l2045
  2708  00190C                     l2063:
  2709                           
  2710                           ;i2c.c: 37:     }
  2711  00190C  4A01               	infsnz	delay@i^0,f,c
  2712  00190E  2A02               	incf	(delay@i+1)^0,f,c
  2713  001910  5002               	movf	(delay@i+1)^0,w,c
  2714  001912  E109               	bnz	u1530
  2715  001914  0E05               	movlw	5
  2716  001916  5C01               	subwf	delay@i^0,w,c
  2717  001918  A0D8               	btfss	status,0,c
  2718  00191A  EF91  F00C         	goto	u1531
  2719  00191E  EF93  F00C         	goto	u1530
  2720  001922                     u1531:
  2721  001922  EF68  F00C         	goto	l2043
  2722  001926                     u1530:
  2723  001926  0012               	return		;funcret
  2724  001928                     __end_of_delay:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _getu *****************
  2728 ;; Defined at:
  2729 ;;		line 38 in file "rtc_r.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  nn              1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  nn              1    0[COMRAM] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      unsigned char 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         0       0       0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0
  2746 ;;      Totals:         1       0       0       0       0       0       0
  2747 ;;Total ram usage:        1 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_rtc_r
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text10
  2757  001B3E                     __ptext10:
  2758                           	callstack 0
  2759  001B3E                     _getu:
  2760                           	callstack 29
  2761                           
  2762                           ;incstack = 0
  2763                           ;getu@nn stored from wreg
  2764  001B3E  6E01               	movwf	getu@nn^0,c
  2765  001B40                     
  2766                           ;rtc_r.c: 38: unsigned char getu(unsigned char nn);rtc_r.c: 39: {;rtc_r.c: 40:   return 
      +                          (nn & 0x0F)+0x30;
  2767  001B40  5001               	movf	getu@nn^0,w,c
  2768  001B42  0B0F               	andlw	15
  2769  001B44  0F30               	addlw	48
  2770  001B46  0012               	return		;funcret
  2771  001B48                     __end_of_getu:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _getd *****************
  2775 ;; Defined at:
  2776 ;;		line 33 in file "rtc_r.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  nn              1    wreg     unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  nn              1    0[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      unsigned char 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2790 ;;      Params:         0       0       0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0
  2793 ;;      Totals:         1       0       0       0       0       0       0
  2794 ;;Total ram usage:        1 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_rtc_r
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text11
  2804  001B32                     __ptext11:
  2805                           	callstack 0
  2806  001B32                     _getd:
  2807                           	callstack 29
  2808                           
  2809                           ;incstack = 0
  2810                           ;getd@nn stored from wreg
  2811  001B32  6E01               	movwf	getd@nn^0,c
  2812  001B34                     
  2813                           ;rtc_r.c: 33: unsigned char getd(unsigned char nn);rtc_r.c: 34: {;rtc_r.c: 35:  return (
      +                          (nn & 0xF0)>>4)+0x30;
  2814  001B34  3801               	swapf	getd@nn^0,w,c
  2815  001B36  0B0F               	andlw	15
  2816  001B38  0B0F               	andlw	15
  2817  001B3A  0F30               	addlw	48
  2818  001B3C  0012               	return		;funcret
  2819  001B3E                     __end_of_getd:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _pwmInit *****************
  2823 ;; Defined at:
  2824 ;;		line 59 in file "pwm.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2838 ;;      Params:         0       0       0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0
  2841 ;;      Totals:         0       0       0       0       0       0       0
  2842 ;;Total ram usage:        0 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text12
  2852  001AFE                     __ptext12:
  2853                           	callstack 0
  2854  001AFE                     _pwmInit:
  2855                           	callstack 30
  2856  001AFE                     
  2857                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  2858  001AFE  9294               	bcf	148,1,c	;volatile
  2859                           
  2860                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  2861  001B00  9494               	bcf	148,2,c	;volatile
  2862  001B02                     
  2863                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  2864  001B02  0E03               	movlw	3
  2865  001B04  12CA               	iorwf	202,f,c	;volatile
  2866  001B06                     
  2867                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  2868  001B06  84CA               	bsf	202,2,c	;volatile
  2869                           
  2870                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  2871  001B08  0E0C               	movlw	12
  2872  001B0A  12BD               	iorwf	189,f,c	;volatile
  2873                           
  2874                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  2875  001B0C  0E0C               	movlw	12
  2876  001B0E  12BA               	iorwf	186,f,c	;volatile
  2877  001B10  0012               	return		;funcret
  2878  001B12                     __end_of_pwmInit:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _lcdInit *****************
  2882 ;; Defined at:
  2883 ;;		line 95 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2897 ;;      Params:         0       0       0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 3
  2904 ;; This function calls:
  2905 ;;		_Delay2ms
  2906 ;;		_lcdCommand
  2907 ;;		_pinMode
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text13
  2914  00178C                     __ptext13:
  2915                           	callstack 0
  2916  00178C                     _lcdInit:
  2917                           	callstack 27
  2918  00178C                     
  2919                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 97:     pinMode(PIN_E2,
      +                           0);
  2920  00178C  0E00               	movlw	0
  2921  00178E  6E02               	movwf	(pinMode@pin+1)^0,c
  2922  001790  0E22               	movlw	34
  2923  001792  6E01               	movwf	pinMode@pin^0,c
  2924  001794  0E00               	movlw	0
  2925  001796  6E04               	movwf	(pinMode@type+1)^0,c
  2926  001798  0E00               	movlw	0
  2927  00179A  6E03               	movwf	pinMode@type^0,c
  2928  00179C  EC5D  F006         	call	_pinMode	;wreg free
  2929                           
  2930                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 98:     pinMode(PIN_E1,
      +                           0);
  2931  0017A0  0E00               	movlw	0
  2932  0017A2  6E02               	movwf	(pinMode@pin+1)^0,c
  2933  0017A4  0E21               	movlw	33
  2934  0017A6  6E01               	movwf	pinMode@pin^0,c
  2935  0017A8  0E00               	movlw	0
  2936  0017AA  6E04               	movwf	(pinMode@type+1)^0,c
  2937  0017AC  0E00               	movlw	0
  2938  0017AE  6E03               	movwf	pinMode@type^0,c
  2939  0017B0  EC5D  F006         	call	_pinMode	;wreg free
  2940  0017B4                     
  2941                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 99:  TRISD = 0x00;
  2942  0017B4  0E00               	movlw	0
  2943  0017B6  6E95               	movwf	149,c	;volatile
  2944  0017B8                     
  2945                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 102:  Delay2ms(); Delay
      +                          2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2946  0017B8  EC65  F00D         	call	_Delay2ms	;wreg free
  2947  0017BC  EC65  F00D         	call	_Delay2ms	;wreg free
  2948  0017C0  EC65  F00D         	call	_Delay2ms	;wreg free
  2949  0017C4  EC65  F00D         	call	_Delay2ms	;wreg free
  2950  0017C8  EC65  F00D         	call	_Delay2ms	;wreg free
  2951  0017CC                     
  2952                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 104:     lcdCommand(0x3
      +                          8);
  2953  0017CC  0E38               	movlw	56
  2954  0017CE  EC87  F00B         	call	_lcdCommand
  2955  0017D2                     
  2956                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 105:     Delay2ms(); De
      +                          lay2ms();
  2957  0017D2  EC65  F00D         	call	_Delay2ms	;wreg free
  2958  0017D6  EC65  F00D         	call	_Delay2ms	;wreg free
  2959  0017DA                     
  2960                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 106:     lcdCommand(0x3
      +                          8);
  2961  0017DA  0E38               	movlw	56
  2962  0017DC  EC87  F00B         	call	_lcdCommand
  2963  0017E0                     
  2964                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 107:     Delay2ms();
  2965  0017E0  EC65  F00D         	call	_Delay2ms	;wreg free
  2966  0017E4                     
  2967                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 108:     lcdCommand(0x3
      +                          8);
  2968  0017E4  0E38               	movlw	56
  2969  0017E6  EC87  F00B         	call	_lcdCommand
  2970  0017EA                     
  2971                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 110:     lcdCommand(0x3
      +                          8);
  2972  0017EA  0E38               	movlw	56
  2973  0017EC  EC87  F00B         	call	_lcdCommand
  2974  0017F0                     
  2975                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 111:     lcdCommand(0x0
      +                          6);
  2976  0017F0  0E06               	movlw	6
  2977  0017F2  EC87  F00B         	call	_lcdCommand
  2978  0017F6                     
  2979                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 114:     lcdCommand(0x0
      +                          C);
  2980  0017F6  0E0C               	movlw	12
  2981  0017F8  EC87  F00B         	call	_lcdCommand
  2982  0017FC                     
  2983                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 115:     lcdCommand(0x0
      +                          1);
  2984  0017FC  0E01               	movlw	1
  2985  0017FE  EC87  F00B         	call	_lcdCommand
  2986  001802  0012               	return		;funcret
  2987  001804                     __end_of_lcdInit:
  2988                           	callstack 0
  2989                           
  2990 ;; *************** function _pinMode *****************
  2991 ;; Defined at:
  2992 ;;		line 54 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  pin             2    0[COMRAM] int 
  2995 ;;  type            2    2[COMRAM] int 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3007 ;;      Params:         4       0       0       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0
  3009 ;;      Temps:          2       0       0       0       0       0       0
  3010 ;;      Totals:         6       0       0       0       0       0       0
  3011 ;;Total ram usage:        6 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_ssdInit
  3017 ;;		_lcdInit
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text14
  3023  000CBA                     __ptext14:
  3024                           	callstack 0
  3025  000CBA                     _pinMode:
  3026                           	callstack 29
  3027  000CBA                     
  3028                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 56:     if(pin <8){
  3029  000CBA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3030  000CBC  EF6B  F006         	goto	u1540
  3031  000CC0  5002               	movf	(pinMode@pin+1)^0,w,c
  3032  000CC2  E107               	bnz	u1541
  3033  000CC4  0E08               	movlw	8
  3034  000CC6  5C01               	subwf	pinMode@pin^0,w,c
  3035  000CC8  B0D8               	btfsc	status,0,c
  3036  000CCA  EF69  F006         	goto	u1541
  3037  000CCE  EF6B  F006         	goto	u1540
  3038  000CD2                     u1541:
  3039  000CD2  EF95  F006         	goto	l2075
  3040  000CD6                     u1540:
  3041  000CD6                     
  3042                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 57:         if (type){ (
      +                          (TRISA) |= (1<<(pin)));}
  3043  000CD6  5003               	movf	pinMode@type^0,w,c
  3044  000CD8  1004               	iorwf	(pinMode@type+1)^0,w,c
  3045  000CDA  B4D8               	btfsc	status,2,c
  3046  000CDC  EF72  F006         	goto	u1551
  3047  000CE0  EF74  F006         	goto	u1550
  3048  000CE4                     u1551:
  3049  000CE4  EF84  F006         	goto	l2073
  3050  000CE8                     u1550:
  3051  000CE8  C001  F005         	movff	pinMode@pin,??_pinMode
  3052  000CEC  0E01               	movlw	1
  3053  000CEE  6E06               	movwf	(??_pinMode+1)^0,c
  3054  000CF0  2A05               	incf	??_pinMode^0,f,c
  3055  000CF2  EF7D  F006         	goto	u1564
  3056  000CF6                     u1565:
  3057  000CF6  90D8               	bcf	status,0,c
  3058  000CF8  3606               	rlcf	(??_pinMode+1)^0,f,c
  3059  000CFA                     u1564:
  3060  000CFA  2E05               	decfsz	??_pinMode^0,f,c
  3061  000CFC  EF7B  F006         	goto	u1565
  3062  000D00  5006               	movf	(??_pinMode+1)^0,w,c
  3063  000D02  1292               	iorwf	146,f,c	;volatile
  3064  000D04  EF83  F007         	goto	l116
  3065  000D08                     l2073:
  3066  000D08  C001  F005         	movff	pinMode@pin,??_pinMode
  3067  000D0C  0E01               	movlw	1
  3068  000D0E  6E06               	movwf	(??_pinMode+1)^0,c
  3069  000D10  2A05               	incf	??_pinMode^0,f,c
  3070  000D12  EF8D  F006         	goto	u1574
  3071  000D16                     u1575:
  3072  000D16  90D8               	bcf	status,0,c
  3073  000D18  3606               	rlcf	(??_pinMode+1)^0,f,c
  3074  000D1A                     u1574:
  3075  000D1A  2E05               	decfsz	??_pinMode^0,f,c
  3076  000D1C  EF8B  F006         	goto	u1575
  3077  000D20  5006               	movf	(??_pinMode+1)^0,w,c
  3078  000D22  0AFF               	xorlw	255
  3079  000D24  1692               	andwf	146,f,c	;volatile
  3080  000D26  EF83  F007         	goto	l116
  3081  000D2A                     l2075:
  3082  000D2A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3083  000D2C  EFA3  F006         	goto	u1580
  3084  000D30  5002               	movf	(pinMode@pin+1)^0,w,c
  3085  000D32  E107               	bnz	u1581
  3086  000D34  0E10               	movlw	16
  3087  000D36  5C01               	subwf	pinMode@pin^0,w,c
  3088  000D38  B0D8               	btfsc	status,0,c
  3089  000D3A  EFA1  F006         	goto	u1581
  3090  000D3E  EFA3  F006         	goto	u1580
  3091  000D42                     u1581:
  3092  000D42  EFD1  F006         	goto	l2083
  3093  000D46                     u1580:
  3094  000D46                     
  3095                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 60:         if (type){ (
      +                          (TRISB) |= (1<<(pin-8)));}
  3096  000D46  5003               	movf	pinMode@type^0,w,c
  3097  000D48  1004               	iorwf	(pinMode@type+1)^0,w,c
  3098  000D4A  B4D8               	btfsc	status,2,c
  3099  000D4C  EFAA  F006         	goto	u1591
  3100  000D50  EFAC  F006         	goto	u1590
  3101  000D54                     u1591:
  3102  000D54  EFBE  F006         	goto	l2081
  3103  000D58                     u1590:
  3104  000D58  C001  F005         	movff	pinMode@pin,??_pinMode
  3105  000D5C  0EF8               	movlw	-8
  3106  000D5E  2605               	addwf	??_pinMode^0,f,c
  3107  000D60  0E01               	movlw	1
  3108  000D62  6E06               	movwf	(??_pinMode+1)^0,c
  3109  000D64  2A05               	incf	??_pinMode^0,f,c
  3110  000D66  EFB7  F006         	goto	u1604
  3111  000D6A                     u1605:
  3112  000D6A  90D8               	bcf	status,0,c
  3113  000D6C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3114  000D6E                     u1604:
  3115  000D6E  2E05               	decfsz	??_pinMode^0,f,c
  3116  000D70  EFB5  F006         	goto	u1605
  3117  000D74  5006               	movf	(??_pinMode+1)^0,w,c
  3118  000D76  1293               	iorwf	147,f,c	;volatile
  3119  000D78  EF83  F007         	goto	l116
  3120  000D7C                     l2081:
  3121  000D7C  C001  F005         	movff	pinMode@pin,??_pinMode
  3122  000D80  0EF8               	movlw	-8
  3123  000D82  2605               	addwf	??_pinMode^0,f,c
  3124  000D84  0E01               	movlw	1
  3125  000D86  6E06               	movwf	(??_pinMode+1)^0,c
  3126  000D88  2A05               	incf	??_pinMode^0,f,c
  3127  000D8A  EFC9  F006         	goto	u1614
  3128  000D8E                     u1615:
  3129  000D8E  90D8               	bcf	status,0,c
  3130  000D90  3606               	rlcf	(??_pinMode+1)^0,f,c
  3131  000D92                     u1614:
  3132  000D92  2E05               	decfsz	??_pinMode^0,f,c
  3133  000D94  EFC7  F006         	goto	u1615
  3134  000D98  5006               	movf	(??_pinMode+1)^0,w,c
  3135  000D9A  0AFF               	xorlw	255
  3136  000D9C  1693               	andwf	147,f,c	;volatile
  3137  000D9E  EF83  F007         	goto	l116
  3138  000DA2                     l2083:
  3139  000DA2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3140  000DA4  EFDF  F006         	goto	u1620
  3141  000DA8  5002               	movf	(pinMode@pin+1)^0,w,c
  3142  000DAA  E107               	bnz	u1621
  3143  000DAC  0E18               	movlw	24
  3144  000DAE  5C01               	subwf	pinMode@pin^0,w,c
  3145  000DB0  B0D8               	btfsc	status,0,c
  3146  000DB2  EFDD  F006         	goto	u1621
  3147  000DB6  EFDF  F006         	goto	u1620
  3148  000DBA                     u1621:
  3149  000DBA  EF0D  F007         	goto	l2091
  3150  000DBE                     u1620:
  3151  000DBE                     
  3152                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 63:         if (type){ (
      +                          (TRISC) |= (1<<(pin-16)));}
  3153  000DBE  5003               	movf	pinMode@type^0,w,c
  3154  000DC0  1004               	iorwf	(pinMode@type+1)^0,w,c
  3155  000DC2  B4D8               	btfsc	status,2,c
  3156  000DC4  EFE6  F006         	goto	u1631
  3157  000DC8  EFE8  F006         	goto	u1630
  3158  000DCC                     u1631:
  3159  000DCC  EFFA  F006         	goto	l2089
  3160  000DD0                     u1630:
  3161  000DD0  C001  F005         	movff	pinMode@pin,??_pinMode
  3162  000DD4  0EF0               	movlw	-16
  3163  000DD6  2605               	addwf	??_pinMode^0,f,c
  3164  000DD8  0E01               	movlw	1
  3165  000DDA  6E06               	movwf	(??_pinMode+1)^0,c
  3166  000DDC  2A05               	incf	??_pinMode^0,f,c
  3167  000DDE  EFF3  F006         	goto	u1644
  3168  000DE2                     u1645:
  3169  000DE2  90D8               	bcf	status,0,c
  3170  000DE4  3606               	rlcf	(??_pinMode+1)^0,f,c
  3171  000DE6                     u1644:
  3172  000DE6  2E05               	decfsz	??_pinMode^0,f,c
  3173  000DE8  EFF1  F006         	goto	u1645
  3174  000DEC  5006               	movf	(??_pinMode+1)^0,w,c
  3175  000DEE  1294               	iorwf	148,f,c	;volatile
  3176  000DF0  EF83  F007         	goto	l116
  3177  000DF4                     l2089:
  3178  000DF4  C001  F005         	movff	pinMode@pin,??_pinMode
  3179  000DF8  0EF0               	movlw	-16
  3180  000DFA  2605               	addwf	??_pinMode^0,f,c
  3181  000DFC  0E01               	movlw	1
  3182  000DFE  6E06               	movwf	(??_pinMode+1)^0,c
  3183  000E00  2A05               	incf	??_pinMode^0,f,c
  3184  000E02  EF05  F007         	goto	u1654
  3185  000E06                     u1655:
  3186  000E06  90D8               	bcf	status,0,c
  3187  000E08  3606               	rlcf	(??_pinMode+1)^0,f,c
  3188  000E0A                     u1654:
  3189  000E0A  2E05               	decfsz	??_pinMode^0,f,c
  3190  000E0C  EF03  F007         	goto	u1655
  3191  000E10  5006               	movf	(??_pinMode+1)^0,w,c
  3192  000E12  0AFF               	xorlw	255
  3193  000E14  1694               	andwf	148,f,c	;volatile
  3194  000E16  EF83  F007         	goto	l116
  3195  000E1A                     l2091:
  3196  000E1A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3197  000E1C  EF1B  F007         	goto	u1660
  3198  000E20  5002               	movf	(pinMode@pin+1)^0,w,c
  3199  000E22  E107               	bnz	u1661
  3200  000E24  0E20               	movlw	32
  3201  000E26  5C01               	subwf	pinMode@pin^0,w,c
  3202  000E28  B0D8               	btfsc	status,0,c
  3203  000E2A  EF19  F007         	goto	u1661
  3204  000E2E  EF1B  F007         	goto	u1660
  3205  000E32                     u1661:
  3206  000E32  EF49  F007         	goto	l2099
  3207  000E36                     u1660:
  3208  000E36                     
  3209                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 66:         if (type){ (
      +                          (TRISD) |= (1<<(pin-24)));}
  3210  000E36  5003               	movf	pinMode@type^0,w,c
  3211  000E38  1004               	iorwf	(pinMode@type+1)^0,w,c
  3212  000E3A  B4D8               	btfsc	status,2,c
  3213  000E3C  EF22  F007         	goto	u1671
  3214  000E40  EF24  F007         	goto	u1670
  3215  000E44                     u1671:
  3216  000E44  EF36  F007         	goto	l2097
  3217  000E48                     u1670:
  3218  000E48  C001  F005         	movff	pinMode@pin,??_pinMode
  3219  000E4C  0EE8               	movlw	-24
  3220  000E4E  2605               	addwf	??_pinMode^0,f,c
  3221  000E50  0E01               	movlw	1
  3222  000E52  6E06               	movwf	(??_pinMode+1)^0,c
  3223  000E54  2A05               	incf	??_pinMode^0,f,c
  3224  000E56  EF2F  F007         	goto	u1684
  3225  000E5A                     u1685:
  3226  000E5A  90D8               	bcf	status,0,c
  3227  000E5C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3228  000E5E                     u1684:
  3229  000E5E  2E05               	decfsz	??_pinMode^0,f,c
  3230  000E60  EF2D  F007         	goto	u1685
  3231  000E64  5006               	movf	(??_pinMode+1)^0,w,c
  3232  000E66  1295               	iorwf	149,f,c	;volatile
  3233  000E68  EF83  F007         	goto	l116
  3234  000E6C                     l2097:
  3235  000E6C  C001  F005         	movff	pinMode@pin,??_pinMode
  3236  000E70  0EE8               	movlw	-24
  3237  000E72  2605               	addwf	??_pinMode^0,f,c
  3238  000E74  0E01               	movlw	1
  3239  000E76  6E06               	movwf	(??_pinMode+1)^0,c
  3240  000E78  2A05               	incf	??_pinMode^0,f,c
  3241  000E7A  EF41  F007         	goto	u1694
  3242  000E7E                     u1695:
  3243  000E7E  90D8               	bcf	status,0,c
  3244  000E80  3606               	rlcf	(??_pinMode+1)^0,f,c
  3245  000E82                     u1694:
  3246  000E82  2E05               	decfsz	??_pinMode^0,f,c
  3247  000E84  EF3F  F007         	goto	u1695
  3248  000E88  5006               	movf	(??_pinMode+1)^0,w,c
  3249  000E8A  0AFF               	xorlw	255
  3250  000E8C  1695               	andwf	149,f,c	;volatile
  3251  000E8E  EF83  F007         	goto	l116
  3252  000E92                     l2099:
  3253  000E92  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3254  000E94  EF57  F007         	goto	u1700
  3255  000E98  5002               	movf	(pinMode@pin+1)^0,w,c
  3256  000E9A  E107               	bnz	u1701
  3257  000E9C  0E28               	movlw	40
  3258  000E9E  5C01               	subwf	pinMode@pin^0,w,c
  3259  000EA0  B0D8               	btfsc	status,0,c
  3260  000EA2  EF55  F007         	goto	u1701
  3261  000EA6  EF57  F007         	goto	u1700
  3262  000EAA                     u1701:
  3263  000EAA  EF83  F007         	goto	l116
  3264  000EAE                     u1700:
  3265  000EAE                     
  3266                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 69:         if (type){ (
      +                          (TRISE) |= (1<<(pin-32)));}
  3267  000EAE  5003               	movf	pinMode@type^0,w,c
  3268  000EB0  1004               	iorwf	(pinMode@type+1)^0,w,c
  3269  000EB2  B4D8               	btfsc	status,2,c
  3270  000EB4  EF5E  F007         	goto	u1711
  3271  000EB8  EF60  F007         	goto	u1710
  3272  000EBC                     u1711:
  3273  000EBC  EF72  F007         	goto	l2105
  3274  000EC0                     u1710:
  3275  000EC0  C001  F005         	movff	pinMode@pin,??_pinMode
  3276  000EC4  0EE0               	movlw	-32
  3277  000EC6  2605               	addwf	??_pinMode^0,f,c
  3278  000EC8  0E01               	movlw	1
  3279  000ECA  6E06               	movwf	(??_pinMode+1)^0,c
  3280  000ECC  2A05               	incf	??_pinMode^0,f,c
  3281  000ECE  EF6B  F007         	goto	u1724
  3282  000ED2                     u1725:
  3283  000ED2  90D8               	bcf	status,0,c
  3284  000ED4  3606               	rlcf	(??_pinMode+1)^0,f,c
  3285  000ED6                     u1724:
  3286  000ED6  2E05               	decfsz	??_pinMode^0,f,c
  3287  000ED8  EF69  F007         	goto	u1725
  3288  000EDC  5006               	movf	(??_pinMode+1)^0,w,c
  3289  000EDE  1296               	iorwf	150,f,c	;volatile
  3290  000EE0  EF83  F007         	goto	l116
  3291  000EE4                     l2105:
  3292  000EE4  C001  F005         	movff	pinMode@pin,??_pinMode
  3293  000EE8  0EE0               	movlw	-32
  3294  000EEA  2605               	addwf	??_pinMode^0,f,c
  3295  000EEC  0E01               	movlw	1
  3296  000EEE  6E06               	movwf	(??_pinMode+1)^0,c
  3297  000EF0  2A05               	incf	??_pinMode^0,f,c
  3298  000EF2  EF7D  F007         	goto	u1734
  3299  000EF6                     u1735:
  3300  000EF6  90D8               	bcf	status,0,c
  3301  000EF8  3606               	rlcf	(??_pinMode+1)^0,f,c
  3302  000EFA                     u1734:
  3303  000EFA  2E05               	decfsz	??_pinMode^0,f,c
  3304  000EFC  EF7B  F007         	goto	u1735
  3305  000F00  5006               	movf	(??_pinMode+1)^0,w,c
  3306  000F02  0AFF               	xorlw	255
  3307  000F04  1696               	andwf	150,f,c	;volatile
  3308  000F06                     l116:
  3309  000F06  0012               	return		;funcret
  3310  000F08                     __end_of_pinMode:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _lcdCommand *****************
  3314 ;; Defined at:
  3315 ;;		line 48 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  cmd             1    wreg     unsigned char 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  cmd             1    7[COMRAM] unsigned char 
  3320 ;;  old_D           1    6[COMRAM] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3330 ;;      Params:         0       0       0       0       0       0       0
  3331 ;;      Locals:         2       0       0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0
  3333 ;;      Totals:         2       0       0       0       0       0       0
  3334 ;;Total ram usage:        2 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 2
  3337 ;; This function calls:
  3338 ;;		_Delay2ms
  3339 ;;		_Delay40us
  3340 ;;		_digitalWrite
  3341 ;; This function is called by:
  3342 ;;		_lcdInit
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text15
  3348  00170E                     __ptext15:
  3349                           	callstack 0
  3350  00170E                     _lcdCommand:
  3351                           	callstack 27
  3352                           
  3353                           ;incstack = 0
  3354                           ;lcdCommand@cmd stored from wreg
  3355  00170E  6E08               	movwf	lcdCommand@cmd^0,c
  3356  001710                     
  3357                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 48: void lcdCommand(uns
      +                          igned char cmd);C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 49: {;C:
      +                          /Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 50:     unsigned char old_
      +                          D;;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 51:     old_D = PORTD
      +                          ;
  3358  001710  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  3359  001714                     
  3360                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 54:     TRISD = 0x00;
  3361  001714  0E00               	movlw	0
  3362  001716  6E95               	movwf	149,c	;volatile
  3363  001718                     
  3364                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 56:  digitalWrite(PIN_E
      +                          2, 0);
  3365  001718  0E00               	movlw	0
  3366  00171A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3367  00171C  0E22               	movlw	34
  3368  00171E  6E01               	movwf	digitalWrite@pin^0,c
  3369  001720  0E00               	movlw	0
  3370  001722  6E04               	movwf	(digitalWrite@value+1)^0,c
  3371  001724  0E00               	movlw	0
  3372  001726  6E03               	movwf	digitalWrite@value^0,c
  3373  001728  EC84  F007         	call	_digitalWrite	;wreg free
  3374  00172C                     
  3375                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 57:  PORTD = cmd;
  3376  00172C  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3377  001730                     
  3378                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 59:     digitalWrite(PI
      +                          N_E1, 1);
  3379  001730  0E00               	movlw	0
  3380  001732  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3381  001734  0E21               	movlw	33
  3382  001736  6E01               	movwf	digitalWrite@pin^0,c
  3383  001738  0E00               	movlw	0
  3384  00173A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3385  00173C  0E01               	movlw	1
  3386  00173E  6E03               	movwf	digitalWrite@value^0,c
  3387  001740  EC84  F007         	call	_digitalWrite	;wreg free
  3388  001744                     
  3389                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 60:  digitalWrite(PIN_E
      +                          1, 0);
  3390  001744  0E00               	movlw	0
  3391  001746  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3392  001748  0E21               	movlw	33
  3393  00174A  6E01               	movwf	digitalWrite@pin^0,c
  3394  00174C  0E00               	movlw	0
  3395  00174E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3396  001750  0E00               	movlw	0
  3397  001752  6E03               	movwf	digitalWrite@value^0,c
  3398  001754  EC84  F007         	call	_digitalWrite	;wreg free
  3399  001758                     
  3400                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 63:     PORTD= old_D;
  3401  001758  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3402  00175C                     
  3403                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 65:     if((cmd == 0x02
      +                          )||(cmd == 0x01)){
  3404  00175C  0E02               	movlw	2
  3405  00175E  1808               	xorwf	lcdCommand@cmd^0,w,c
  3406  001760  B4D8               	btfsc	status,2,c
  3407  001762  EFB5  F00B         	goto	u1741
  3408  001766  EFB7  F00B         	goto	u1740
  3409  00176A                     u1741:
  3410  00176A  EFBF  F00B         	goto	l2125
  3411  00176E                     u1740:
  3412  00176E  0408               	decf	lcdCommand@cmd^0,w,c
  3413  001770  A4D8               	btfss	status,2,c
  3414  001772  EFBD  F00B         	goto	u1751
  3415  001776  EFBF  F00B         	goto	u1750
  3416  00177A                     u1751:
  3417  00177A  EFC3  F00B         	goto	l2127
  3418  00177E                     u1750:
  3419  00177E                     l2125:
  3420                           
  3421                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 66:        Delay2ms();
  3422  00177E  EC65  F00D         	call	_Delay2ms	;wreg free
  3423                           
  3424                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 67:     }else{
  3425  001782  EFC5  F00B         	goto	l177
  3426  001786                     l2127:
  3427                           
  3428                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 68:     Delay40us();
  3429  001786  EC73  F00D         	call	_Delay40us	;wreg free
  3430  00178A                     l177:
  3431  00178A  0012               	return		;funcret
  3432  00178C                     __end_of_lcdCommand:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _Delay2ms *****************
  3436 ;; Defined at:
  3437 ;;		line 37 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  i               1    1[COMRAM] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3451 ;;      Params:         0       0       0       0       0       0       0
  3452 ;;      Locals:         1       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0
  3454 ;;      Totals:         1       0       0       0       0       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 1
  3458 ;; This function calls:
  3459 ;;		_Delay40us
  3460 ;; This function is called by:
  3461 ;;		_lcdCommand
  3462 ;;		_lcdInit
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text16
  3467  001ACA                     __ptext16:
  3468                           	callstack 0
  3469  001ACA                     _Delay2ms:
  3470                           	callstack 27
  3471  001ACA                     
  3472                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 39:  unsigned char i;;C
      +                          :/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 40:  for(i=0; i < 50; i++
      +                          )
  3473  001ACA  0E00               	movlw	0
  3474  001ACC  6E02               	movwf	Delay2ms@i^0,c
  3475  001ACE                     l2031:
  3476                           
  3477                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 41:  {;C:/Users/Deus Vi
      +                          nicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 42:   Delay40us();
  3478  001ACE  EC73  F00D         	call	_Delay40us	;wreg free
  3479  001AD2                     
  3480                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 43:  }
  3481  001AD2  2A02               	incf	Delay2ms@i^0,f,c
  3482  001AD4  0E31               	movlw	49
  3483  001AD6  6402               	cpfsgt	Delay2ms@i^0,c
  3484  001AD8  EF70  F00D         	goto	u1501
  3485  001ADC  EF72  F00D         	goto	u1500
  3486  001AE0                     u1501:
  3487  001AE0  EF67  F00D         	goto	l2031
  3488  001AE4                     u1500:
  3489  001AE4  0012               	return		;funcret
  3490  001AE6                     __end_of_Delay2ms:
  3491                           	callstack 0
  3492                           
  3493 ;; *************** function _lcdData *****************
  3494 ;; Defined at:
  3495 ;;		line 74 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  valor           1    wreg     unsigned char 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  valor           1    6[COMRAM] unsigned char 
  3500 ;;  old_D           1    7[COMRAM] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3510 ;;      Params:         0       0       0       0       0       0       0
  3511 ;;      Locals:         2       0       0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0
  3513 ;;      Totals:         2       0       0       0       0       0       0
  3514 ;;Total ram usage:        2 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 1
  3517 ;; This function calls:
  3518 ;;		_Delay40us
  3519 ;;		_digitalWrite
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text17
  3526  001A32                     __ptext17:
  3527                           	callstack 0
  3528  001A32                     _lcdData:
  3529                           	callstack 29
  3530                           
  3531                           ;incstack = 0
  3532                           ;lcdData@valor stored from wreg
  3533  001A32  6E07               	movwf	lcdData@valor^0,c
  3534  001A34                     
  3535                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 74: void lcdData(unsign
      +                          ed char valor);C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 75: {;C:/
      +                          Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 77:     unsigned char old_D
      +                          ;;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 78:     old_D = PORTD;
  3536  001A34  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  3537  001A38                     
  3538                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 80:     TRISD = 0x00;
  3539  001A38  0E00               	movlw	0
  3540  001A3A  6E95               	movwf	149,c	;volatile
  3541  001A3C                     
  3542                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 81:  digitalWrite(PIN_E
      +                          2, 1);
  3543  001A3C  0E00               	movlw	0
  3544  001A3E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3545  001A40  0E22               	movlw	34
  3546  001A42  6E01               	movwf	digitalWrite@pin^0,c
  3547  001A44  0E00               	movlw	0
  3548  001A46  6E04               	movwf	(digitalWrite@value+1)^0,c
  3549  001A48  0E01               	movlw	1
  3550  001A4A  6E03               	movwf	digitalWrite@value^0,c
  3551  001A4C  EC84  F007         	call	_digitalWrite	;wreg free
  3552  001A50                     
  3553                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 83:  PORTD = valor;
  3554  001A50  C007  FF83         	movff	lcdData@valor,3971	;volatile
  3555  001A54                     
  3556                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 85:     digitalWrite(PI
      +                          N_E1, 1);
  3557  001A54  0E00               	movlw	0
  3558  001A56  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3559  001A58  0E21               	movlw	33
  3560  001A5A  6E01               	movwf	digitalWrite@pin^0,c
  3561  001A5C  0E00               	movlw	0
  3562  001A5E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3563  001A60  0E01               	movlw	1
  3564  001A62  6E03               	movwf	digitalWrite@value^0,c
  3565  001A64  EC84  F007         	call	_digitalWrite	;wreg free
  3566  001A68                     
  3567                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 86:  digitalWrite(PIN_E
      +                          1, 0);
  3568  001A68  0E00               	movlw	0
  3569  001A6A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3570  001A6C  0E21               	movlw	33
  3571  001A6E  6E01               	movwf	digitalWrite@pin^0,c
  3572  001A70  0E00               	movlw	0
  3573  001A72  6E04               	movwf	(digitalWrite@value+1)^0,c
  3574  001A74  0E00               	movlw	0
  3575  001A76  6E03               	movwf	digitalWrite@value^0,c
  3576  001A78  EC84  F007         	call	_digitalWrite	;wreg free
  3577  001A7C                     
  3578                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 88:     PORTD= old_D;
  3579  001A7C  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  3580  001A80                     
  3581                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 90:  Delay40us();
  3582  001A80  EC73  F00D         	call	_Delay40us	;wreg free
  3583  001A84  0012               	return		;funcret
  3584  001A86                     __end_of_lcdData:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _digitalWrite *****************
  3588 ;; Defined at:
  3589 ;;		line 14 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  pin             2    0[COMRAM] int 
  3592 ;;  value           2    2[COMRAM] int 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3604 ;;      Params:         4       0       0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0
  3606 ;;      Temps:          2       0       0       0       0       0       0
  3607 ;;      Totals:         6       0       0       0       0       0       0
  3608 ;;Total ram usage:        6 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_ssdUpdate
  3614 ;;		_lcdCommand
  3615 ;;		_lcdData
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text18
  3620  000F08                     __ptext18:
  3621                           	callstack 0
  3622  000F08                     _digitalWrite:
  3623                           	callstack 29
  3624  000F08                     
  3625                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 16:     if(pin <8){
  3626  000F08  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3627  000F0A  EF92  F007         	goto	u1300
  3628  000F0E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3629  000F10  E107               	bnz	u1301
  3630  000F12  0E08               	movlw	8
  3631  000F14  5C01               	subwf	digitalWrite@pin^0,w,c
  3632  000F16  B0D8               	btfsc	status,0,c
  3633  000F18  EF90  F007         	goto	u1301
  3634  000F1C  EF92  F007         	goto	u1300
  3635  000F20                     u1301:
  3636  000F20  EFBC  F007         	goto	l1993
  3637  000F24                     u1300:
  3638  000F24                     
  3639                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 17:         if (value){ 
      +                          ((PORTA) |= (1<<(pin)));}
  3640  000F24  5003               	movf	digitalWrite@value^0,w,c
  3641  000F26  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3642  000F28  B4D8               	btfsc	status,2,c
  3643  000F2A  EF99  F007         	goto	u1311
  3644  000F2E  EF9B  F007         	goto	u1310
  3645  000F32                     u1311:
  3646  000F32  EFAB  F007         	goto	l1991
  3647  000F36                     u1310:
  3648  000F36  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3649  000F3A  0E01               	movlw	1
  3650  000F3C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3651  000F3E  2A05               	incf	??_digitalWrite^0,f,c
  3652  000F40  EFA4  F007         	goto	u1324
  3653  000F44                     u1325:
  3654  000F44  90D8               	bcf	status,0,c
  3655  000F46  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3656  000F48                     u1324:
  3657  000F48  2E05               	decfsz	??_digitalWrite^0,f,c
  3658  000F4A  EFA2  F007         	goto	u1325
  3659  000F4E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3660  000F50  1280               	iorwf	128,f,c	;volatile
  3661  000F52  EFAA  F008         	goto	l82
  3662  000F56                     l1991:
  3663  000F56  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3664  000F5A  0E01               	movlw	1
  3665  000F5C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3666  000F5E  2A05               	incf	??_digitalWrite^0,f,c
  3667  000F60  EFB4  F007         	goto	u1334
  3668  000F64                     u1335:
  3669  000F64  90D8               	bcf	status,0,c
  3670  000F66  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3671  000F68                     u1334:
  3672  000F68  2E05               	decfsz	??_digitalWrite^0,f,c
  3673  000F6A  EFB2  F007         	goto	u1335
  3674  000F6E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3675  000F70  0AFF               	xorlw	255
  3676  000F72  1680               	andwf	128,f,c	;volatile
  3677  000F74  EFAA  F008         	goto	l82
  3678  000F78                     l1993:
  3679  000F78  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3680  000F7A  EFCA  F007         	goto	u1340
  3681  000F7E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3682  000F80  E107               	bnz	u1341
  3683  000F82  0E10               	movlw	16
  3684  000F84  5C01               	subwf	digitalWrite@pin^0,w,c
  3685  000F86  B0D8               	btfsc	status,0,c
  3686  000F88  EFC8  F007         	goto	u1341
  3687  000F8C  EFCA  F007         	goto	u1340
  3688  000F90                     u1341:
  3689  000F90  EFF8  F007         	goto	l2001
  3690  000F94                     u1340:
  3691  000F94                     
  3692                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 20:         pin -=8;
  3693  000F94  0EF8               	movlw	248
  3694  000F96  2601               	addwf	digitalWrite@pin^0,f,c
  3695  000F98  0EFF               	movlw	255
  3696  000F9A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3697                           
  3698                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 21:         if (value){ 
      +                          ((PORTB) |= (1<<(pin)));}
  3699  000F9C  5003               	movf	digitalWrite@value^0,w,c
  3700  000F9E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3701  000FA0  B4D8               	btfsc	status,2,c
  3702  000FA2  EFD5  F007         	goto	u1351
  3703  000FA6  EFD7  F007         	goto	u1350
  3704  000FAA                     u1351:
  3705  000FAA  EFE7  F007         	goto	l1999
  3706  000FAE                     u1350:
  3707  000FAE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3708  000FB2  0E01               	movlw	1
  3709  000FB4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3710  000FB6  2A05               	incf	??_digitalWrite^0,f,c
  3711  000FB8  EFE0  F007         	goto	u1364
  3712  000FBC                     u1365:
  3713  000FBC  90D8               	bcf	status,0,c
  3714  000FBE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3715  000FC0                     u1364:
  3716  000FC0  2E05               	decfsz	??_digitalWrite^0,f,c
  3717  000FC2  EFDE  F007         	goto	u1365
  3718  000FC6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3719  000FC8  1281               	iorwf	129,f,c	;volatile
  3720  000FCA  EFAA  F008         	goto	l82
  3721  000FCE                     l1999:
  3722  000FCE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3723  000FD2  0E01               	movlw	1
  3724  000FD4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3725  000FD6  2A05               	incf	??_digitalWrite^0,f,c
  3726  000FD8  EFF0  F007         	goto	u1374
  3727  000FDC                     u1375:
  3728  000FDC  90D8               	bcf	status,0,c
  3729  000FDE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3730  000FE0                     u1374:
  3731  000FE0  2E05               	decfsz	??_digitalWrite^0,f,c
  3732  000FE2  EFEE  F007         	goto	u1375
  3733  000FE6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3734  000FE8  0AFF               	xorlw	255
  3735  000FEA  1681               	andwf	129,f,c	;volatile
  3736  000FEC  EFAA  F008         	goto	l82
  3737  000FF0                     l2001:
  3738  000FF0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3739  000FF2  EF06  F008         	goto	u1380
  3740  000FF6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3741  000FF8  E107               	bnz	u1381
  3742  000FFA  0E18               	movlw	24
  3743  000FFC  5C01               	subwf	digitalWrite@pin^0,w,c
  3744  000FFE  B0D8               	btfsc	status,0,c
  3745  001000  EF04  F008         	goto	u1381
  3746  001004  EF06  F008         	goto	u1380
  3747  001008                     u1381:
  3748  001008  EF34  F008         	goto	l2009
  3749  00100C                     u1380:
  3750  00100C                     
  3751                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 24:         pin -=16;
  3752  00100C  0EF0               	movlw	240
  3753  00100E  2601               	addwf	digitalWrite@pin^0,f,c
  3754  001010  0EFF               	movlw	255
  3755  001012  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3756                           
  3757                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 25:         if (value){ 
      +                          ((PORTC) |= (1<<(pin)));}
  3758  001014  5003               	movf	digitalWrite@value^0,w,c
  3759  001016  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3760  001018  B4D8               	btfsc	status,2,c
  3761  00101A  EF11  F008         	goto	u1391
  3762  00101E  EF13  F008         	goto	u1390
  3763  001022                     u1391:
  3764  001022  EF23  F008         	goto	l2007
  3765  001026                     u1390:
  3766  001026  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3767  00102A  0E01               	movlw	1
  3768  00102C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3769  00102E  2A05               	incf	??_digitalWrite^0,f,c
  3770  001030  EF1C  F008         	goto	u1404
  3771  001034                     u1405:
  3772  001034  90D8               	bcf	status,0,c
  3773  001036  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3774  001038                     u1404:
  3775  001038  2E05               	decfsz	??_digitalWrite^0,f,c
  3776  00103A  EF1A  F008         	goto	u1405
  3777  00103E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3778  001040  1282               	iorwf	130,f,c	;volatile
  3779  001042  EFAA  F008         	goto	l82
  3780  001046                     l2007:
  3781  001046  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3782  00104A  0E01               	movlw	1
  3783  00104C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3784  00104E  2A05               	incf	??_digitalWrite^0,f,c
  3785  001050  EF2C  F008         	goto	u1414
  3786  001054                     u1415:
  3787  001054  90D8               	bcf	status,0,c
  3788  001056  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3789  001058                     u1414:
  3790  001058  2E05               	decfsz	??_digitalWrite^0,f,c
  3791  00105A  EF2A  F008         	goto	u1415
  3792  00105E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3793  001060  0AFF               	xorlw	255
  3794  001062  1682               	andwf	130,f,c	;volatile
  3795  001064  EFAA  F008         	goto	l82
  3796  001068                     l2009:
  3797  001068  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3798  00106A  EF42  F008         	goto	u1420
  3799  00106E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3800  001070  E107               	bnz	u1421
  3801  001072  0E20               	movlw	32
  3802  001074  5C01               	subwf	digitalWrite@pin^0,w,c
  3803  001076  B0D8               	btfsc	status,0,c
  3804  001078  EF40  F008         	goto	u1421
  3805  00107C  EF42  F008         	goto	u1420
  3806  001080                     u1421:
  3807  001080  EF70  F008         	goto	l2017
  3808  001084                     u1420:
  3809  001084                     
  3810                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 28:         pin -=24;
  3811  001084  0EE8               	movlw	232
  3812  001086  2601               	addwf	digitalWrite@pin^0,f,c
  3813  001088  0EFF               	movlw	255
  3814  00108A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3815                           
  3816                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 29:         if (value){ 
      +                          ((PORTD) |= (1<<(pin)));}
  3817  00108C  5003               	movf	digitalWrite@value^0,w,c
  3818  00108E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3819  001090  B4D8               	btfsc	status,2,c
  3820  001092  EF4D  F008         	goto	u1431
  3821  001096  EF4F  F008         	goto	u1430
  3822  00109A                     u1431:
  3823  00109A  EF5F  F008         	goto	l2015
  3824  00109E                     u1430:
  3825  00109E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3826  0010A2  0E01               	movlw	1
  3827  0010A4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3828  0010A6  2A05               	incf	??_digitalWrite^0,f,c
  3829  0010A8  EF58  F008         	goto	u1444
  3830  0010AC                     u1445:
  3831  0010AC  90D8               	bcf	status,0,c
  3832  0010AE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3833  0010B0                     u1444:
  3834  0010B0  2E05               	decfsz	??_digitalWrite^0,f,c
  3835  0010B2  EF56  F008         	goto	u1445
  3836  0010B6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3837  0010B8  1283               	iorwf	131,f,c	;volatile
  3838  0010BA  EFAA  F008         	goto	l82
  3839  0010BE                     l2015:
  3840  0010BE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3841  0010C2  0E01               	movlw	1
  3842  0010C4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3843  0010C6  2A05               	incf	??_digitalWrite^0,f,c
  3844  0010C8  EF68  F008         	goto	u1454
  3845  0010CC                     u1455:
  3846  0010CC  90D8               	bcf	status,0,c
  3847  0010CE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3848  0010D0                     u1454:
  3849  0010D0  2E05               	decfsz	??_digitalWrite^0,f,c
  3850  0010D2  EF66  F008         	goto	u1455
  3851  0010D6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3852  0010D8  0AFF               	xorlw	255
  3853  0010DA  1683               	andwf	131,f,c	;volatile
  3854  0010DC  EFAA  F008         	goto	l82
  3855  0010E0                     l2017:
  3856  0010E0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3857  0010E2  EF7E  F008         	goto	u1460
  3858  0010E6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3859  0010E8  E107               	bnz	u1461
  3860  0010EA  0E28               	movlw	40
  3861  0010EC  5C01               	subwf	digitalWrite@pin^0,w,c
  3862  0010EE  B0D8               	btfsc	status,0,c
  3863  0010F0  EF7C  F008         	goto	u1461
  3864  0010F4  EF7E  F008         	goto	u1460
  3865  0010F8                     u1461:
  3866  0010F8  EFAA  F008         	goto	l82
  3867  0010FC                     u1460:
  3868  0010FC                     
  3869                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 32:         pin -=32;
  3870  0010FC  0EE0               	movlw	224
  3871  0010FE  2601               	addwf	digitalWrite@pin^0,f,c
  3872  001100  0EFF               	movlw	255
  3873  001102  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3874                           
  3875                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/io.c: 33:         if (value){ 
      +                          ((PORTE) |= (1<<(pin)));}
  3876  001104  5003               	movf	digitalWrite@value^0,w,c
  3877  001106  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3878  001108  B4D8               	btfsc	status,2,c
  3879  00110A  EF89  F008         	goto	u1471
  3880  00110E  EF8B  F008         	goto	u1470
  3881  001112                     u1471:
  3882  001112  EF9B  F008         	goto	l2023
  3883  001116                     u1470:
  3884  001116  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3885  00111A  0E01               	movlw	1
  3886  00111C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3887  00111E  2A05               	incf	??_digitalWrite^0,f,c
  3888  001120  EF94  F008         	goto	u1484
  3889  001124                     u1485:
  3890  001124  90D8               	bcf	status,0,c
  3891  001126  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3892  001128                     u1484:
  3893  001128  2E05               	decfsz	??_digitalWrite^0,f,c
  3894  00112A  EF92  F008         	goto	u1485
  3895  00112E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3896  001130  1284               	iorwf	132,f,c	;volatile
  3897  001132  EFAA  F008         	goto	l82
  3898  001136                     l2023:
  3899  001136  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3900  00113A  0E01               	movlw	1
  3901  00113C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3902  00113E  2A05               	incf	??_digitalWrite^0,f,c
  3903  001140  EFA4  F008         	goto	u1494
  3904  001144                     u1495:
  3905  001144  90D8               	bcf	status,0,c
  3906  001146  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3907  001148                     u1494:
  3908  001148  2E05               	decfsz	??_digitalWrite^0,f,c
  3909  00114A  EFA2  F008         	goto	u1495
  3910  00114E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3911  001150  0AFF               	xorlw	255
  3912  001152  1684               	andwf	132,f,c	;volatile
  3913  001154                     l82:
  3914  001154  0012               	return		;funcret
  3915  001156                     __end_of_digitalWrite:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _Delay40us *****************
  3919 ;; Defined at:
  3920 ;;		line 31 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  i               1    0[COMRAM] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3934 ;;      Params:         0       0       0       0       0       0       0
  3935 ;;      Locals:         1       0       0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0
  3937 ;;      Totals:         1       0       0       0       0       0       0
  3938 ;;Total ram usage:        1 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_Delay2ms
  3944 ;;		_lcdCommand
  3945 ;;		_lcdData
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text19
  3950  001AE6                     __ptext19:
  3951                           	callstack 0
  3952  001AE6                     _Delay40us:
  3953                           	callstack 28
  3954  001AE6                     
  3955                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 33:  unsigned char i;;C
      +                          :/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/lcd.c: 34:  for(i=0; i < 25; i++
      +                          );
  3956  001AE6  0E00               	movlw	0
  3957  001AE8  6E01               	movwf	Delay40us@i^0,c
  3958  001AEA                     l1981:
  3959  001AEA  2A01               	incf	Delay40us@i^0,f,c
  3960  001AEC  0E18               	movlw	24
  3961  001AEE  6401               	cpfsgt	Delay40us@i^0,c
  3962  001AF0  EF7C  F00D         	goto	u1291
  3963  001AF4  EF7E  F00D         	goto	u1290
  3964  001AF8                     u1291:
  3965  001AF8  EF75  F00D         	goto	l1981
  3966  001AFC                     u1290:
  3967  001AFC  0012               	return		;funcret
  3968  001AFE                     __end_of_Delay40us:
  3969                           	callstack 0
  3970                           
  3971 ;; *************** function _kpRead *****************
  3972 ;; Defined at:
  3973 ;;		line 35 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  2    0[COMRAM] unsigned int 
  3980 ;; Registers used:
  3981 ;;		None
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3987 ;;      Params:         2       0       0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0
  3990 ;;      Totals:         2       0       0       0       0       0       0
  3991 ;;Total ram usage:        2 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text20
  4001  001B48                     __ptext20:
  4002                           	callstack 0
  4003  001B48                     _kpRead:
  4004                           	callstack 30
  4005  001B48                     
  4006                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 36:     return valor
      +                          ;
  4007  001B48  C073  F001         	movff	_valor@keypad$F112,?_kpRead
  4008  001B4C  C074  F002         	movff	_valor@keypad$F112+1,?_kpRead+1
  4009  001B50  0012               	return		;funcret
  4010  001B52                     __end_of_kpRead:
  4011                           	callstack 0
  4012                           
  4013 ;; *************** function _kpInit *****************
  4014 ;; Defined at:
  4015 ;;		line 87 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4029 ;;      Params:         0       0       0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text21
  4043  001B52                     __ptext21:
  4044                           	callstack 0
  4045  001B52                     _kpInit:
  4046                           	callstack 30
  4047  001B52                     
  4048                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 89:     TRISB &= 0x0
      +                          7;
  4049  001B52  0E07               	movlw	7
  4050  001B54  1693               	andwf	147,f,c	;volatile
  4051                           
  4052                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 91:     TRISD |= 0x0
      +                          f;
  4053  001B56  0E0F               	movlw	15
  4054  001B58  1295               	iorwf	149,f,c	;volatile
  4055  001B5A  0012               	return		;funcret
  4056  001B5C                     __end_of_kpInit:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _kpDebounce *****************
  4060 ;; Defined at:
  4061 ;;		line 39 in file "C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  k               2    6[COMRAM] int 
  4066 ;;  i               1    9[COMRAM] unsigned char 
  4067 ;;  j               1    8[COMRAM] unsigned char 
  4068 ;;  old_D           1    5[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, prodl, prodh
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4078 ;;      Params:         0       0       0       0       0       0       0
  4079 ;;      Locals:         5       0       0       0       0       0       0
  4080 ;;      Temps:          5       0       0       0       0       0       0
  4081 ;;      Totals:        10       0       0       0       0       0       0
  4082 ;;Total ram usage:       10 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_main
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text22
  4092  001156                     __ptext22:
  4093                           	callstack 0
  4094  001156                     _kpDebounce:
  4095                           	callstack 30
  4096  001156                     
  4097                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 40:     unsigned cha
      +                          r i, j;;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 41:     stati
      +                          c unsigned char tempo;;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c
      +                          : 42:     static unsigned int valorNovo = 0x0000;;C:/Users/Deus Vinicius/Desktop/libs_PI
      +                          CSimLab_PIC18F4520/keypad.c: 43:     static unsigned int valorAntigo = 0x0000;;C:/Users/
      +                          Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 46:     unsigned char old_D;
  4098  001156  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  4099  00115A                     
  4100                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 51:     TRISD |= 0x0
      +                          f;
  4101  00115A  0E0F               	movlw	15
  4102  00115C  1295               	iorwf	149,f,c	;volatile
  4103  00115E                     
  4104                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 53:     for (i = 0; 
      +                          i < 3; i++) {
  4105  00115E  0E00               	movlw	0
  4106  001160  6E0A               	movwf	kpDebounce@i^0,c
  4107  001162                     l2287:
  4108                           
  4109                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 55:         TRISB &=
      +                           0xF8;
  4110  001162  0EF8               	movlw	248
  4111  001164  1693               	andwf	147,f,c	;volatile
  4112                           
  4113                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 57:         ((TRISB)
      +                           |= (1<<(i)));
  4114  001166  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4115  00116A  0E01               	movlw	1
  4116  00116C  6E02               	movwf	(??_kpDebounce+1)^0,c
  4117  00116E  2A01               	incf	??_kpDebounce^0,f,c
  4118  001170  EFBC  F008         	goto	u1864
  4119  001174                     u1865:
  4120  001174  90D8               	bcf	status,0,c
  4121  001176  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4122  001178                     u1864:
  4123  001178  2E01               	decfsz	??_kpDebounce^0,f,c
  4124  00117A  EFBA  F008         	goto	u1865
  4125  00117E  5002               	movf	(??_kpDebounce+1)^0,w,c
  4126  001180  1293               	iorwf	147,f,c	;volatile
  4127                           
  4128                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 59:         PORTB |=
      +                           0x07;
  4129  001182  0E07               	movlw	7
  4130  001184  1281               	iorwf	129,f,c	;volatile
  4131                           
  4132                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 60:         ((PORTB)
      +                           &= ~(1<<(i)));
  4133  001186  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4134  00118A  0E01               	movlw	1
  4135  00118C  6E02               	movwf	(??_kpDebounce+1)^0,c
  4136  00118E  2A01               	incf	??_kpDebounce^0,f,c
  4137  001190  EFCC  F008         	goto	u1874
  4138  001194                     u1875:
  4139  001194  90D8               	bcf	status,0,c
  4140  001196  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4141  001198                     u1874:
  4142  001198  2E01               	decfsz	??_kpDebounce^0,f,c
  4143  00119A  EFCA  F008         	goto	u1875
  4144  00119E  5002               	movf	(??_kpDebounce+1)^0,w,c
  4145  0011A0  0AFF               	xorlw	255
  4146  0011A2  1681               	andwf	129,f,c	;volatile
  4147  0011A4                     
  4148                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 63:         for (int
      +                           k = 0; k < 10; k++);
  4149  0011A4  0E00               	movlw	0
  4150  0011A6  6E08               	movwf	(kpDebounce@k+1)^0,c
  4151  0011A8  0E00               	movlw	0
  4152  0011AA  6E07               	movwf	kpDebounce@k^0,c
  4153  0011AC                     l2295:
  4154  0011AC  4A07               	infsnz	kpDebounce@k^0,f,c
  4155  0011AE  2A08               	incf	(kpDebounce@k+1)^0,f,c
  4156  0011B0  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  4157  0011B2  EFE4  F008         	goto	u1881
  4158  0011B6  5008               	movf	(kpDebounce@k+1)^0,w,c
  4159  0011B8  E109               	bnz	u1880
  4160  0011BA  0E0A               	movlw	10
  4161  0011BC  5C07               	subwf	kpDebounce@k^0,w,c
  4162  0011BE  A0D8               	btfss	status,0,c
  4163  0011C0  EFE4  F008         	goto	u1881
  4164  0011C4  EFE6  F008         	goto	u1880
  4165  0011C8                     u1881:
  4166  0011C8  EFD6  F008         	goto	l2295
  4167  0011CC                     u1880:
  4168  0011CC                     
  4169                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 66:         for (j =
      +                           0; j < 4; j++) {
  4170  0011CC  0E00               	movlw	0
  4171  0011CE  6E09               	movwf	kpDebounce@j^0,c
  4172  0011D0                     l2305:
  4173                           
  4174                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 67:             if (
      +                          !((PORTD) & (1<<(j)))) {
  4175  0011D0  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  4176  0011D4  0E01               	movlw	1
  4177  0011D6  6E02               	movwf	(??_kpDebounce+1)^0,c
  4178  0011D8  2A01               	incf	??_kpDebounce^0,f,c
  4179  0011DA  EFF1  F008         	goto	u1894
  4180  0011DE                     u1895:
  4181  0011DE  90D8               	bcf	status,0,c
  4182  0011E0  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4183  0011E2                     u1894:
  4184  0011E2  2E01               	decfsz	??_kpDebounce^0,f,c
  4185  0011E4  EFEF  F008         	goto	u1895
  4186  0011E8  5002               	movf	(??_kpDebounce+1)^0,w,c
  4187  0011EA  1483               	andwf	131,w,c	;volatile
  4188  0011EC  0900               	iorlw	0
  4189  0011EE  A4D8               	btfss	status,2,c
  4190  0011F0  EFFC  F008         	goto	u1901
  4191  0011F4  EFFE  F008         	goto	u1900
  4192  0011F8                     u1901:
  4193  0011F8  EF16  F009         	goto	l2309
  4194  0011FC                     u1900:
  4195  0011FC                     
  4196                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 68:                 
      +                          ((valorNovo) |= (1<<((i * 4) + j)));
  4197  0011FC  500A               	movf	kpDebounce@i^0,w,c
  4198  0011FE  0D04               	mullw	4
  4199  001200  50F3               	movf	243,w,c
  4200  001202  2409               	addwf	kpDebounce@j^0,w,c
  4201  001204  6E01               	movwf	??_kpDebounce^0,c
  4202  001206  0E01               	movlw	1
  4203  001208  6E02               	movwf	(??_kpDebounce+1)^0,c
  4204  00120A  0E00               	movlw	0
  4205  00120C  6E03               	movwf	(??_kpDebounce+2)^0,c
  4206  00120E  2A01               	incf	??_kpDebounce^0,f,c
  4207  001210  EF0D  F009         	goto	u1914
  4208  001214                     u1915:
  4209  001214  90D8               	bcf	status,0,c
  4210  001216  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4211  001218  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4212  00121A                     u1914:
  4213  00121A  2E01               	decfsz	??_kpDebounce^0,f,c
  4214  00121C  EF0A  F009         	goto	u1915
  4215  001220  5002               	movf	(??_kpDebounce+1)^0,w,c
  4216  001222  1271               	iorwf	kpDebounce@valorNovo^0,f,c
  4217  001224  5003               	movf	(??_kpDebounce+2)^0,w,c
  4218  001226  1272               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  4219                           
  4220                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 69:             } el
      +                          se {
  4221  001228  EF30  F009         	goto	l2311
  4222  00122C                     l2309:
  4223                           
  4224                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 70:                 
      +                          ((valorNovo) &= ~(1<<((i * 4) + j)));
  4225  00122C  500A               	movf	kpDebounce@i^0,w,c
  4226  00122E  0D04               	mullw	4
  4227  001230  50F3               	movf	243,w,c
  4228  001232  2409               	addwf	kpDebounce@j^0,w,c
  4229  001234  6E01               	movwf	??_kpDebounce^0,c
  4230  001236  0E01               	movlw	1
  4231  001238  6E02               	movwf	(??_kpDebounce+1)^0,c
  4232  00123A  0E00               	movlw	0
  4233  00123C  6E03               	movwf	(??_kpDebounce+2)^0,c
  4234  00123E  2A01               	incf	??_kpDebounce^0,f,c
  4235  001240  EF25  F009         	goto	u1924
  4236  001244                     u1925:
  4237  001244  90D8               	bcf	status,0,c
  4238  001246  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4239  001248  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4240  00124A                     u1924:
  4241  00124A  2E01               	decfsz	??_kpDebounce^0,f,c
  4242  00124C  EF22  F009         	goto	u1925
  4243  001250  1C02               	comf	(??_kpDebounce+1)^0,w,c
  4244  001252  6E04               	movwf	(??_kpDebounce+3)^0,c
  4245  001254  1C03               	comf	(??_kpDebounce+2)^0,w,c
  4246  001256  6E05               	movwf	(??_kpDebounce+4)^0,c
  4247  001258  5004               	movf	(??_kpDebounce+3)^0,w,c
  4248  00125A  1671               	andwf	kpDebounce@valorNovo^0,f,c
  4249  00125C  5005               	movf	(??_kpDebounce+4)^0,w,c
  4250  00125E  1672               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  4251  001260                     l2311:
  4252                           
  4253                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 72:         }
  4254  001260  2A09               	incf	kpDebounce@j^0,f,c
  4255  001262  0E03               	movlw	3
  4256  001264  6409               	cpfsgt	kpDebounce@j^0,c
  4257  001266  EF37  F009         	goto	u1931
  4258  00126A  EF39  F009         	goto	u1930
  4259  00126E                     u1931:
  4260  00126E  EFE8  F008         	goto	l2305
  4261  001272                     u1930:
  4262  001272                     
  4263                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 73:     }
  4264  001272  2A0A               	incf	kpDebounce@i^0,f,c
  4265  001274  0E02               	movlw	2
  4266  001276  640A               	cpfsgt	kpDebounce@i^0,c
  4267  001278  EF40  F009         	goto	u1941
  4268  00127C  EF42  F009         	goto	u1940
  4269  001280                     u1941:
  4270  001280  EFB1  F008         	goto	l2287
  4271  001284                     u1940:
  4272  001284                     
  4273                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 74:     if (valorAnt
      +                          igo == valorNovo) {
  4274  001284  5071               	movf	kpDebounce@valorNovo^0,w,c
  4275  001286  186F               	xorwf	kpDebounce@valorAntigo^0,w,c
  4276  001288  E107               	bnz	u1951
  4277  00128A  5072               	movf	(kpDebounce@valorNovo+1)^0,w,c
  4278  00128C  1870               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  4279  00128E  A4D8               	btfss	status,2,c
  4280  001290  EF4C  F009         	goto	u1951
  4281  001294  EF4E  F009         	goto	u1950
  4282  001298                     u1951:
  4283  001298  EF51  F009         	goto	l2323
  4284  00129C                     u1950:
  4285  00129C                     
  4286                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 75:         tempo--;
  4287  00129C  0675               	decf	kpDebounce@tempo^0,f,c
  4288                           
  4289                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 76:     } else {
  4290  00129E  EF57  F009         	goto	l147
  4291  0012A2                     l2323:
  4292                           
  4293                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 77:         tempo = 
      +                          10;
  4294  0012A2  0E0A               	movlw	10
  4295  0012A4  6E75               	movwf	kpDebounce@tempo^0,c
  4296  0012A6                     
  4297                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 78:         valorAnt
      +                          igo = valorNovo;
  4298  0012A6  C071  F06F         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  4299  0012AA  C072  F070         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  4300  0012AE                     l147:
  4301                           
  4302                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 80:     if (tempo ==
      +                           0) {
  4303  0012AE  5075               	movf	kpDebounce@tempo^0,w,c
  4304  0012B0  A4D8               	btfss	status,2,c
  4305  0012B2  EF5D  F009         	goto	u1961
  4306  0012B6  EF5F  F009         	goto	u1960
  4307  0012BA                     u1961:
  4308  0012BA  EF63  F009         	goto	l148
  4309  0012BE                     u1960:
  4310  0012BE                     
  4311                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 81:         valor = 
      +                          valorAntigo;
  4312  0012BE  C06F  F073         	movff	kpDebounce@valorAntigo,_valor@keypad$F112
  4313  0012C2  C070  F074         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F112+1
  4314  0012C6                     l148:
  4315                           
  4316                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 83:     PORTD = old_
      +                          D;
  4317  0012C6  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  4318  0012CA                     
  4319                           ;C:/Users/Deus Vinicius/Desktop/libs_PICSimLab_PIC18F4520/keypad.c: 84:     TRISD = 0x00
      +                          ;
  4320  0012CA  0E00               	movlw	0
  4321  0012CC  6E95               	movwf	149,c	;volatile
  4322  0012CE  0012               	return		;funcret
  4323  0012D0                     __end_of_kpDebounce:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _i2c_init *****************
  4327 ;; Defined at:
  4328 ;;		line 40 in file "i2c.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		None
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4342 ;;      Params:         0       0       0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0
  4345 ;;      Totals:         0       0       0       0       0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text23
  4356  001B5C                     __ptext23:
  4357                           	callstack 0
  4358  001B5C                     _i2c_init:
  4359                           	callstack 30
  4360  001B5C                     
  4361                           ;i2c.c: 41:     TRISCbits.TRISC4 = 0;
  4362  001B5C  9894               	bcf	148,4,c	;volatile
  4363                           
  4364                           ;i2c.c: 42:     PORTCbits.RC3 = 1;
  4365  001B5E  8682               	bsf	130,3,c	;volatile
  4366                           
  4367                           ;i2c.c: 43:     PORTCbits.RC4 = 1;
  4368  001B60  8882               	bsf	130,4,c	;volatile
  4369  001B62  0012               	return		;funcret
  4370  001B64                     __end_of_i2c_init:
  4371                           	callstack 0
  4372                           
  4373 ;; *************** function _atraso_ms *****************
  4374 ;; Defined at:
  4375 ;;		line 26 in file "atraso.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  valor           2    0[COMRAM] unsigned int 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  i               2    2[COMRAM] unsigned int 
  4380 ;;  k               1    5[COMRAM] volatile unsigned char 
  4381 ;;  j               1    4[COMRAM] volatile unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4391 ;;      Params:         2       0       0       0       0       0       0
  4392 ;;      Locals:         4       0       0       0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0       0       0
  4394 ;;      Totals:         6       0       0       0       0       0       0
  4395 ;;Total ram usage:        6 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_main
  4401 ;;		_serial_rx
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text24
  4406  001804                     __ptext24:
  4407                           	callstack 0
  4408  001804                     _atraso_ms:
  4409                           	callstack 30
  4410  001804                     
  4411                           ;atraso.c: 27:     unsigned int i;;atraso.c: 28:     volatile unsigned char j, k;;atraso
      +                          .c: 30:     for (i = 0; i < valor; i++) {
  4412  001804  0E00               	movlw	0
  4413  001806  6E04               	movwf	(atraso_ms@i+1)^0,c
  4414  001808  0E00               	movlw	0
  4415  00180A  6E03               	movwf	atraso_ms@i^0,c
  4416  00180C  EF28  F00C         	goto	l2451
  4417  001810                     l2429:
  4418                           
  4419                           ;atraso.c: 31:         for (j = 0; j < 41; j++) {
  4420  001810  0E00               	movlw	0
  4421  001812  6E05               	movwf	atraso_ms@j^0,c	;volatile
  4422  001814                     l2431:
  4423  001814  0E28               	movlw	40
  4424  001816  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  4425  001818  EF10  F00C         	goto	u1971
  4426  00181C  EF12  F00C         	goto	u1970
  4427  001820                     u1971:
  4428  001820  EF14  F00C         	goto	l2435
  4429  001824                     u1970:
  4430  001824  EF26  F00C         	goto	l2449
  4431  001828                     l2435:
  4432                           
  4433                           ;atraso.c: 32:             for (k = 0; k < 3; k++);
  4434  001828  0E00               	movlw	0
  4435  00182A  6E06               	movwf	atraso_ms@k^0,c	;volatile
  4436  00182C                     l2437:
  4437  00182C  0E02               	movlw	2
  4438  00182E  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  4439  001830  EF1C  F00C         	goto	u1981
  4440  001834  EF1E  F00C         	goto	u1980
  4441  001838                     u1981:
  4442  001838  EF20  F00C         	goto	l2441
  4443  00183C                     u1980:
  4444  00183C  EF23  F00C         	goto	l2445
  4445  001840                     l2441:
  4446  001840  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  4447  001842  EF16  F00C         	goto	l2437
  4448  001846                     l2445:
  4449                           
  4450                           ;atraso.c: 33:         }
  4451  001846  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  4452  001848  EF0A  F00C         	goto	l2431
  4453  00184C                     l2449:
  4454                           
  4455                           ;atraso.c: 34:     }
  4456  00184C  4A03               	infsnz	atraso_ms@i^0,f,c
  4457  00184E  2A04               	incf	(atraso_ms@i+1)^0,f,c
  4458  001850                     l2451:
  4459  001850  5001               	movf	atraso_ms@valor^0,w,c
  4460  001852  5C03               	subwf	atraso_ms@i^0,w,c
  4461  001854  5002               	movf	(atraso_ms@valor+1)^0,w,c
  4462  001856  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  4463  001858  A0D8               	btfss	status,0,c
  4464  00185A  EF31  F00C         	goto	u1991
  4465  00185E  EF33  F00C         	goto	u1990
  4466  001862                     u1991:
  4467  001862  EF08  F00C         	goto	l2429
  4468  001866                     u1990:
  4469  001866  0012               	return		;funcret
  4470  001868                     __end_of_atraso_ms:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function ___awmod *****************
  4474 ;; Defined at:
  4475 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  dividend        2    8[COMRAM] int 
  4478 ;;  divisor         2   10[COMRAM] int 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  sign            1   13[COMRAM] unsigned char 
  4481 ;;  counter         1   12[COMRAM] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  2    8[COMRAM] int 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4491 ;;      Params:         4       0       0       0       0       0       0
  4492 ;;      Locals:         2       0       0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0
  4494 ;;      Totals:         6       0       0       0       0       0       0
  4495 ;;Total ram usage:        6 bytes
  4496 ;; Hardware stack levels used: 1
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_main
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text25
  4505  0015DC                     __ptext25:
  4506                           	callstack 0
  4507  0015DC                     ___awmod:
  4508                           	callstack 30
  4509  0015DC  0E00               	movlw	0
  4510  0015DE  6E0E               	movwf	___awmod@sign^0,c
  4511  0015E0  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4512  0015E2  EFF7  F00A         	goto	u2060
  4513  0015E6  EFF5  F00A         	goto	u2061
  4514  0015EA                     u2061:
  4515  0015EA  EFFD  F00A         	goto	l2511
  4516  0015EE                     u2060:
  4517  0015EE  6C09               	negf	___awmod@dividend^0,c
  4518  0015F0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4519  0015F2  B0D8               	btfsc	status,0,c
  4520  0015F4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4521  0015F6  0E01               	movlw	1
  4522  0015F8  6E0E               	movwf	___awmod@sign^0,c
  4523  0015FA                     l2511:
  4524  0015FA  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4525  0015FC  EF04  F00B         	goto	u2070
  4526  001600  EF02  F00B         	goto	u2071
  4527  001604                     u2071:
  4528  001604  EF08  F00B         	goto	l2515
  4529  001608                     u2070:
  4530  001608  6C0B               	negf	___awmod@divisor^0,c
  4531  00160A  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4532  00160C  B0D8               	btfsc	status,0,c
  4533  00160E  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4534  001610                     l2515:
  4535  001610  500B               	movf	___awmod@divisor^0,w,c
  4536  001612  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4537  001614  B4D8               	btfsc	status,2,c
  4538  001616  EF0F  F00B         	goto	u2081
  4539  00161A  EF11  F00B         	goto	u2080
  4540  00161E                     u2081:
  4541  00161E  EF35  F00B         	goto	l2531
  4542  001622                     u2080:
  4543  001622  0E01               	movlw	1
  4544  001624  6E0D               	movwf	___awmod@counter^0,c
  4545  001626  EF19  F00B         	goto	l2521
  4546  00162A                     l2519:
  4547  00162A  90D8               	bcf	status,0,c
  4548  00162C  360B               	rlcf	___awmod@divisor^0,f,c
  4549  00162E  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4550  001630  2A0D               	incf	___awmod@counter^0,f,c
  4551  001632                     l2521:
  4552  001632  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4553  001634  EF1E  F00B         	goto	u2091
  4554  001638  EF20  F00B         	goto	u2090
  4555  00163C                     u2091:
  4556  00163C  EF15  F00B         	goto	l2519
  4557  001640                     u2090:
  4558  001640                     l2523:
  4559  001640  500B               	movf	___awmod@divisor^0,w,c
  4560  001642  5C09               	subwf	___awmod@dividend^0,w,c
  4561  001644  500C               	movf	(___awmod@divisor+1)^0,w,c
  4562  001646  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4563  001648  A0D8               	btfss	status,0,c
  4564  00164A  EF29  F00B         	goto	u2101
  4565  00164E  EF2B  F00B         	goto	u2100
  4566  001652                     u2101:
  4567  001652  EF2F  F00B         	goto	l2527
  4568  001656                     u2100:
  4569  001656  500B               	movf	___awmod@divisor^0,w,c
  4570  001658  5E09               	subwf	___awmod@dividend^0,f,c
  4571  00165A  500C               	movf	(___awmod@divisor+1)^0,w,c
  4572  00165C  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4573  00165E                     l2527:
  4574  00165E  90D8               	bcf	status,0,c
  4575  001660  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4576  001662  320B               	rrcf	___awmod@divisor^0,f,c
  4577  001664  2E0D               	decfsz	___awmod@counter^0,f,c
  4578  001666  EF20  F00B         	goto	l2523
  4579  00166A                     l2531:
  4580  00166A  500E               	movf	___awmod@sign^0,w,c
  4581  00166C  B4D8               	btfsc	status,2,c
  4582  00166E  EF3B  F00B         	goto	u2111
  4583  001672  EF3D  F00B         	goto	u2110
  4584  001676                     u2111:
  4585  001676  EF41  F00B         	goto	l2535
  4586  00167A                     u2110:
  4587  00167A  6C09               	negf	___awmod@dividend^0,c
  4588  00167C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4589  00167E  B0D8               	btfsc	status,0,c
  4590  001680  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4591  001682                     l2535:
  4592  001682  C009  F009         	movff	___awmod@dividend,?___awmod
  4593  001686  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4594  00168A  0012               	return		;funcret
  4595  00168C                     __end_of___awmod:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function ___awdiv *****************
  4599 ;; Defined at:
  4600 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  dividend        2    0[COMRAM] int 
  4603 ;;  divisor         2    2[COMRAM] int 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  quotient        2    6[COMRAM] int 
  4606 ;;  sign            1    5[COMRAM] unsigned char 
  4607 ;;  counter         1    4[COMRAM] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  2    0[COMRAM] int 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4617 ;;      Params:         4       0       0       0       0       0       0
  4618 ;;      Locals:         4       0       0       0       0       0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0
  4620 ;;      Totals:         8       0       0       0       0       0       0
  4621 ;;Total ram usage:        8 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text26
  4631  001518                     __ptext26:
  4632                           	callstack 0
  4633  001518                     ___awdiv:
  4634                           	callstack 30
  4635  001518  0E00               	movlw	0
  4636  00151A  6E06               	movwf	___awdiv@sign^0,c
  4637  00151C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4638  00151E  EF95  F00A         	goto	u2000
  4639  001522  EF93  F00A         	goto	u2001
  4640  001526                     u2001:
  4641  001526  EF9B  F00A         	goto	l2467
  4642  00152A                     u2000:
  4643  00152A  6C03               	negf	___awdiv@divisor^0,c
  4644  00152C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4645  00152E  B0D8               	btfsc	status,0,c
  4646  001530  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4647  001532  0E01               	movlw	1
  4648  001534  6E06               	movwf	___awdiv@sign^0,c
  4649  001536                     l2467:
  4650  001536  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4651  001538  EFA2  F00A         	goto	u2010
  4652  00153C  EFA0  F00A         	goto	u2011
  4653  001540                     u2011:
  4654  001540  EFA8  F00A         	goto	l2473
  4655  001544                     u2010:
  4656  001544  6C01               	negf	___awdiv@dividend^0,c
  4657  001546  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4658  001548  B0D8               	btfsc	status,0,c
  4659  00154A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4660  00154C  0E01               	movlw	1
  4661  00154E  1A06               	xorwf	___awdiv@sign^0,f,c
  4662  001550                     l2473:
  4663  001550  0E00               	movlw	0
  4664  001552  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4665  001554  0E00               	movlw	0
  4666  001556  6E07               	movwf	___awdiv@quotient^0,c
  4667  001558  5003               	movf	___awdiv@divisor^0,w,c
  4668  00155A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4669  00155C  B4D8               	btfsc	status,2,c
  4670  00155E  EFB3  F00A         	goto	u2021
  4671  001562  EFB5  F00A         	goto	u2020
  4672  001566                     u2021:
  4673  001566  EFDD  F00A         	goto	l2495
  4674  00156A                     u2020:
  4675  00156A  0E01               	movlw	1
  4676  00156C  6E05               	movwf	___awdiv@counter^0,c
  4677  00156E  EFBD  F00A         	goto	l2481
  4678  001572                     l2479:
  4679  001572  90D8               	bcf	status,0,c
  4680  001574  3603               	rlcf	___awdiv@divisor^0,f,c
  4681  001576  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4682  001578  2A05               	incf	___awdiv@counter^0,f,c
  4683  00157A                     l2481:
  4684  00157A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4685  00157C  EFC2  F00A         	goto	u2031
  4686  001580  EFC4  F00A         	goto	u2030
  4687  001584                     u2031:
  4688  001584  EFB9  F00A         	goto	l2479
  4689  001588                     u2030:
  4690  001588                     l2483:
  4691  001588  90D8               	bcf	status,0,c
  4692  00158A  3607               	rlcf	___awdiv@quotient^0,f,c
  4693  00158C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4694  00158E  5003               	movf	___awdiv@divisor^0,w,c
  4695  001590  5C01               	subwf	___awdiv@dividend^0,w,c
  4696  001592  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4697  001594  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4698  001596  A0D8               	btfss	status,0,c
  4699  001598  EFD0  F00A         	goto	u2041
  4700  00159C  EFD2  F00A         	goto	u2040
  4701  0015A0                     u2041:
  4702  0015A0  EFD7  F00A         	goto	l2491
  4703  0015A4                     u2040:
  4704  0015A4  5003               	movf	___awdiv@divisor^0,w,c
  4705  0015A6  5E01               	subwf	___awdiv@dividend^0,f,c
  4706  0015A8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4707  0015AA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4708  0015AC  8007               	bsf	___awdiv@quotient^0,0,c
  4709  0015AE                     l2491:
  4710  0015AE  90D8               	bcf	status,0,c
  4711  0015B0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4712  0015B2  3203               	rrcf	___awdiv@divisor^0,f,c
  4713  0015B4  2E05               	decfsz	___awdiv@counter^0,f,c
  4714  0015B6  EFC4  F00A         	goto	l2483
  4715  0015BA                     l2495:
  4716  0015BA  5006               	movf	___awdiv@sign^0,w,c
  4717  0015BC  B4D8               	btfsc	status,2,c
  4718  0015BE  EFE3  F00A         	goto	u2051
  4719  0015C2  EFE5  F00A         	goto	u2050
  4720  0015C6                     u2051:
  4721  0015C6  EFE9  F00A         	goto	l2499
  4722  0015CA                     u2050:
  4723  0015CA  6C07               	negf	___awdiv@quotient^0,c
  4724  0015CC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4725  0015CE  B0D8               	btfsc	status,0,c
  4726  0015D0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4727  0015D2                     l2499:
  4728  0015D2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4729  0015D6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4730  0015DA  0012               	return		;funcret
  4731  0015DC                     __end_of___awdiv:
  4732                           	callstack 0
  4733                           
  4734                           	psect	rparam
  4735  0000                     
  4736                           	psect	idloc
  4737                           
  4738                           ;Config register IDLOC0 @ 0x200000
  4739                           ;	unspecified, using default values
  4740  200000                     	org	2097152
  4741  200000  FF                 	db	255
  4742                           
  4743                           ;Config register IDLOC1 @ 0x200001
  4744                           ;	unspecified, using default values
  4745  200001                     	org	2097153
  4746  200001  FF                 	db	255
  4747                           
  4748                           ;Config register IDLOC2 @ 0x200002
  4749                           ;	unspecified, using default values
  4750  200002                     	org	2097154
  4751  200002  FF                 	db	255
  4752                           
  4753                           ;Config register IDLOC3 @ 0x200003
  4754                           ;	unspecified, using default values
  4755  200003                     	org	2097155
  4756  200003  FF                 	db	255
  4757                           
  4758                           ;Config register IDLOC4 @ 0x200004
  4759                           ;	unspecified, using default values
  4760  200004                     	org	2097156
  4761  200004  FF                 	db	255
  4762                           
  4763                           ;Config register IDLOC5 @ 0x200005
  4764                           ;	unspecified, using default values
  4765  200005                     	org	2097157
  4766  200005  FF                 	db	255
  4767                           
  4768                           ;Config register IDLOC6 @ 0x200006
  4769                           ;	unspecified, using default values
  4770  200006                     	org	2097158
  4771  200006  FF                 	db	255
  4772                           
  4773                           ;Config register IDLOC7 @ 0x200007
  4774                           ;	unspecified, using default values
  4775  200007                     	org	2097159
  4776  200007  FF                 	db	255
  4777                           
  4778                           	psect	config
  4779                           
  4780                           ; Padding undefined space
  4781  300000                     	org	3145728
  4782  300000  FF                 	db	255
  4783                           
  4784                           ;Config register CONFIG1H @ 0x300001
  4785                           ;	Oscillator Selection bits
  4786                           ;	OSC = HS, HS oscillator
  4787                           ;	Fail-Safe Clock Monitor Enable bit
  4788                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4789                           ;	Internal/External Oscillator Switchover bit
  4790                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4791  300001                     	org	3145729
  4792  300001  02                 	db	2
  4793                           
  4794                           ;Config register CONFIG2L @ 0x300002
  4795                           ;	Power-up Timer Enable bit
  4796                           ;	PWRT = OFF, PWRT disabled
  4797                           ;	Brown-out Reset Enable bits
  4798                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4799                           ;	Brown Out Reset Voltage bits
  4800                           ;	BORV = 0x2E, user specified literal
  4801  300002                     	org	3145730
  4802  300002  71                 	db	369
  4803                           
  4804                           ;Config register CONFIG2H @ 0x300003
  4805                           ;	Watchdog Timer Enable bit
  4806                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4807                           ;	Watchdog Timer Postscale Select bits
  4808                           ;	WDTPS = 1, 1:1
  4809  300003                     	org	3145731
  4810  300003  00                 	db	0
  4811                           
  4812                           ; Padding undefined space
  4813  300004                     	org	3145732
  4814  300004  FF                 	db	255
  4815                           
  4816                           ;Config register CONFIG3H @ 0x300005
  4817                           ;	CCP2 MUX bit
  4818                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4819                           ;	PORTB A/D Enable bit
  4820                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4821                           ;	Low-Power Timer1 Oscillator Enable bit
  4822                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4823                           ;	MCLR Pin Enable bit
  4824                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4825  300005                     	org	3145733
  4826  300005  83                 	db	131
  4827                           
  4828                           ;Config register CONFIG4L @ 0x300006
  4829                           ;	Stack Full/Underflow Reset Enable bit
  4830                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4831                           ;	Single-Supply ICSP Enable bit
  4832                           ;	LVP = OFF, Single-Supply ICSP disabled
  4833                           ;	Extended Instruction Set Enable bit
  4834                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4835                           ;	Background Debugger Enable bit
  4836                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4837  300006                     	org	3145734
  4838  300006  80                 	db	128
  4839                           
  4840                           ; Padding undefined space
  4841  300007                     	org	3145735
  4842  300007  FF                 	db	255
  4843                           
  4844                           ;Config register CONFIG5L @ 0x300008
  4845                           ;	Code Protection bit
  4846                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4847                           ;	Code Protection bit
  4848                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4849                           ;	Code Protection bit
  4850                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4851                           ;	Code Protection bit
  4852                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4853  300008                     	org	3145736
  4854  300008  0F                 	db	15
  4855                           
  4856                           ;Config register CONFIG5H @ 0x300009
  4857                           ;	Boot Block Code Protection bit
  4858                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4859                           ;	Data EEPROM Code Protection bit
  4860                           ;	CPD = OFF, Data EEPROM not code-protected
  4861  300009                     	org	3145737
  4862  300009  C0                 	db	192
  4863                           
  4864                           ;Config register CONFIG6L @ 0x30000A
  4865                           ;	Write Protection bit
  4866                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4867                           ;	Write Protection bit
  4868                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4869                           ;	Write Protection bit
  4870                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4871                           ;	Write Protection bit
  4872                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4873  30000A                     	org	3145738
  4874  30000A  0F                 	db	15
  4875                           
  4876                           ;Config register CONFIG6H @ 0x30000B
  4877                           ;	Configuration Register Write Protection bit
  4878                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4879                           ;	Boot Block Write Protection bit
  4880                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4881                           ;	Data EEPROM Write Protection bit
  4882                           ;	WRTD = OFF, Data EEPROM not write-protected
  4883  30000B                     	org	3145739
  4884  30000B  E0                 	db	224
  4885                           
  4886                           ;Config register CONFIG7L @ 0x30000C
  4887                           ;	Table Read Protection bit
  4888                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4889                           ;	Table Read Protection bit
  4890                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4891                           ;	Table Read Protection bit
  4892                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4893                           ;	Table Read Protection bit
  4894                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4895  30000C                     	org	3145740
  4896  30000C  0F                 	db	15
  4897                           
  4898                           ;Config register CONFIG7H @ 0x30000D
  4899                           ;	Boot Block Table Read Protection bit
  4900                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4901  30000D                     	org	3145741
  4902  30000D  40                 	db	64
  4903                           tosu	equ	0xFFF
  4904                           tosh	equ	0xFFE
  4905                           tosl	equ	0xFFD
  4906                           stkptr	equ	0xFFC
  4907                           pclatu	equ	0xFFB
  4908                           pclath	equ	0xFFA
  4909                           pcl	equ	0xFF9
  4910                           tblptru	equ	0xFF8
  4911                           tblptrh	equ	0xFF7
  4912                           tblptrl	equ	0xFF6
  4913                           tablat	equ	0xFF5
  4914                           prodh	equ	0xFF4
  4915                           prodl	equ	0xFF3
  4916                           indf0	equ	0xFEF
  4917                           postinc0	equ	0xFEE
  4918                           postdec0	equ	0xFED
  4919                           preinc0	equ	0xFEC
  4920                           plusw0	equ	0xFEB
  4921                           fsr0h	equ	0xFEA
  4922                           fsr0l	equ	0xFE9
  4923                           wreg	equ	0xFE8
  4924                           indf1	equ	0xFE7
  4925                           postinc1	equ	0xFE6
  4926                           postdec1	equ	0xFE5
  4927                           preinc1	equ	0xFE4
  4928                           plusw1	equ	0xFE3
  4929                           fsr1h	equ	0xFE2
  4930                           fsr1l	equ	0xFE1
  4931                           bsr	equ	0xFE0
  4932                           indf2	equ	0xFDF
  4933                           postinc2	equ	0xFDE
  4934                           postdec2	equ	0xFDD
  4935                           preinc2	equ	0xFDC
  4936                           plusw2	equ	0xFDB
  4937                           fsr2h	equ	0xFDA
  4938                           fsr2l	equ	0xFD9
  4939                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        70
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    110     125
    BANK0           128      0      87
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _rtc_r->_i2c_rb
    _i2c_wb->_delay
    _i2c_stop->_delay
    _i2c_start->_delay
    _i2c_rb->_delay
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdData->_digitalWrite
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               102   102      0   23620
                                             14 COMRAM    96    96      0
                            ___awdiv
                            ___awmod
                          _atraso_ms
                           _i2c_init
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                            _pinMode
                            _pwmInit
                              _rtc_r
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1960
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _rtc_r                                                1     1      0    1070
                                              9 COMRAM     1     1      0
                               _getd
                               _getu
                             _i2c_rb
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (2) _i2c_wb                                               4     4      0     228
                                              4 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_rb                                               5     5      0     252
                                              4 COMRAM     5     5      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                4     4      0     138
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _getu                                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getd                                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4851
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1960
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     442
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1664
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _atraso_ms
   _i2c_init
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _pinMode
   _pwmInit
   _rtc_r
     _getd
     _getu
     _i2c_rb
       _delay
     _i2c_start
       _delay
     _i2c_stop
       _delay
     _i2c_wb
       _delay
   _ssdDigit
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      57       5       68.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6E      7D       1       98.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4      15        0.0%
DATA                 0      0      D4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 31 20:49:52 2021

                     l40 1A30                       l27 19DA                       l37 141E  
                     l82 1154             ___awdiv@sign 0006                       _v0 0079  
                     _v1 0078                       _v2 0077                       _v3 0076  
                    l202 1B30                      l210 1982                      l116 0F06  
                    l213 169C                      l205 1B20                      l214 16E4  
                    l215 16FC                      l152 1B5A                      l232 1B3C  
                    l129 1B50                      l217 170C                      l209 1974  
                    l170 1AE4                      l147 12AE                      l235 1B46  
                    l331 06D2                      l148 12C6                      l180 1A84  
                    l149 12CE                      l165 1AFC                      l238 1516  
                    l342 0996                      l183 1802                      l335 07FA  
                    l177 178A                      l196 1926                      l349 0A78  
                    l199 1B62                      l375 1B10                      l632 168A  
                    l385 1866                      l619 15DA             ___awmod@sign 000E  
                    wreg 000FE8                     l2001 0FF0                     l2011 1084  
                   l2003 100C                     l2021 1116                     l2013 109E  
                   l2005 1026                     l2101 0EAE                     l2023 1136  
                   l2015 10BE                     l2007 1046                     l2031 1ACE  
                   l2111 1718                     l2103 0EC0                     l2017 10E0  
                   l2009 1068                     l2033 1AD2                     l2025 1ACA  
                   l2121 175C                     l2113 172C                     l2105 0EE4  
                   l2019 10FC                     l2035 1AD4                     l2123 176E  
                   l2115 1730                     l2107 1710                     l2203 1B34  
                   l2051 18EC                     l2043 18D0                     l2131 1B26  
                   l2211 1986                     l2125 177E                     l2117 1744  
                   l2109 1714                     l2045 18D4                     l2037 18C8  
                   l2133 1B2A                     l2141 192A                     l2221 19C0  
                   l2213 1996                     l2311 1260                     l2127 1786  
                   l2119 1758                     l2071 0CE8                     l2207 1B40  
                   l2055 1900                     l2063 190C                     l2135 1B12  
                   l2151 195A                     l2143 192C                     l2223 19C4  
                   l2215 199A                     l2231 12E8                     l2321 129C  
                   l2313 1262                     l2305 11D0                     l2081 0D7C  
                   l2073 0D08                     l2065 1910                     l2049 18E8  
                   l2129 1B22                     l2137 1B16                     l2161 1976  
                   l2153 195C                     l2401 1486                     l2225 19D6  
                   l2217 19AA                     l2241 1352                     l2233 12FC  
                   l2323 12A2                     l2315 1272                     l2307 11FC  
                   l2331 1B52                     l2091 0E1A                     l2083 0DA2  
                   l2075 0D2A                     l2067 0CBA                     l2059 1906  
                   l2171 1694                     l2139 1B1A                     l2163 197A  
                   l2155 1960                     l2411 14B4                     l2403 1490  
                   l2219 19AE                     l2251 139A                     l2243 135A  
                   l2235 1310                     l2227 12D0                     l2325 12A6  
                   l2317 1274                     l2309 122C                     l2341 1A54  
                   l2333 1A34                     l2093 0E36                     l2085 0DBE  
                   l2077 0D46                     l2069 0CD6                     l2181 16A2  
                   l2173 1696                     l2165 1980                     l2157 1962  
                   l2149 1930                     l2421 14FA                     l2413 14BE  
                   l2405 149A                     l2253 13AE                     l2245 136C  
                   l2237 132C                     l2229 12D4                     l2511 15FA  
                   l2503 15DC                     l2431 1814                     l2327 12BE  
                   l2319 1284                     l2343 1A68                     l2335 1A38  
                   l2095 0E48                     l2087 0DD0                     l2079 0D58  
                   l2351 17B4                     l2191 16F6                     l2183 16D0  
                   l2167 168E                     l2159 1964                     l2423 1504  
                   l2415 14C8                     l2407 14A4                     l2271 19DC  
                   l2255 13B6                     l2247 1380                     l2239 133E  
                   l2521 1632                     l2513 1608                     l2505 15E0  
                   l2441 1840                     l2329 12CA                     l2281 115E  
                   l2345 1A7C                     l2337 1A3C                     l2097 0E6C  
                   l2089 0DF4                     l2361 17C8                     l2353 17B8  
                   l2193 16FE                     l2185 16D2                     l2169 1692  
                   l2425 150E                     l2417 14D2                     l2409 14AA  
                   l2273 1A2C                     l2257 13C8                     l2249 1388  
                   l2265 13E4                     l2601 071A                     l2523 1640  
                   l2531 166A                     l2515 1610                     l2507 15EE  
                   l2435 1828                     l2451 1850                     l2427 1804  
                   l2275 1B48                     l2347 1A80                     l2339 1A50  
                   l2099 0E92                     l2371 17E0                     l2363 17CC  
                   l2355 17BC                     l2195 1702                     l2187 16D4  
                   l2179 169E                     l2419 14F4                     l2259 13DC  
                   l2611 0750                     l2603 071C                     l2461 151C  
                   l2533 167A                     l2525 1656                     l2517 1622  
                   l2509 15F6                     l2445 1846                     l2437 182C  
                   l2429 1810                     l2277 1156                     l2381 17FC  
                   l2373 17E4                     l2365 17D2                     l2357 17C0  
                   l2349 178C                     l2453 1AFE                     l2197 1708  
                   l2189 16E6                     l2701 095C                     l2613 075C  
                   l2605 072C                     l2471 154C                     l2463 152A  
                   l2535 1682                     l2527 165E                     l2519 162A  
                   l2383 1B5C                     l2295 11AC                     l2287 1162  
                   l2279 115A                     l2375 17EA                     l2367 17D6  
                   l2359 17C4                     l2455 1B02                     l2199 170A  
                   l2391 1454                     l2711 09A4                     l2703 0968  
                   l2631 07B0                     l2615 0762                     l2607 0730  
                   l2481 157A                     l2473 1550                     l2465 1532  
                   l2529 1664                     l2449 184C                     l2297 11B0  
                   l2289 11A4                     l2377 17F0                     l2369 17DA  
                   l2457 1B06                     l2393 145E                     l2385 1420  
                   l2721 09C4                     l2713 09AA                     l2705 0972  
                   l2641 07C8                     l2633 07BC                     l2625 077E  
                   l2617 0770                     l2609 0734                     l2561 061A  
                   l2491 15AE                     l2483 1588                     l2475 1558  
                   l2467 1536                     l2459 1518                     l2299 11CC  
                   l2379 17F6                     l2395 146C                     l2387 1444  
                   l2723 09C8                     l2707 098C                     l2651 0822  
                   l2643 07DA                     l2627 0790                     l2619 0776  
                   l2571 066E                     l2563 062C                     l2493 15B4  
                   l2485 158E                     l2477 156A                     l2469 1544  
                   l2397 1472                     l2389 144A                     l2741 0A8C  
                   l2733 0A46                     l2725 09E4                     l2661 08B8  
                   l2653 089E                     l2645 07DE                     l2629 0794  
                   l2581 0690                     l2573 0680                     l2565 063E  
                   l2487 15A4                     l2479 1572                     l2495 15BA  
                   l2399 147C                     l2823 13F8                     l2751 0AAA  
                   l2735 0A58                     l2727 0A3E                     l2719 09B2  
                   l2671 08D8                     l2663 08BE                     l2655 08A2  
                   l2647 0808                     l2639 07C4                     l2591 06AE  
                   l2583 0694                     l2575 0684                     l2567 064A  
                   l2559 0612                     l2497 15CA                     l2489 15AC  
                   l2761 0BA4                     l2753 0AC6                     l2737 0A5C  
                   l2681 0902                     l2665 08C6                     l2657 08A6  
                   l2649 0814                     l2593 06B2                     l2577 0688  
                   l2569 065C                     l2499 15D2                     l2771 0BE0  
                   l2763 0BA8                     l2755 0B78                     l2747 0A94  
                   l2739 0A86                     l2691 094E                     l2683 091E  
                   l2667 08CE                     l2659 08AA                     l2595 06CE  
                   l2579 068C                     l1981 1AEA                     l2781 0C3C  
                   l2773 0BE4                     l2765 0BB4                     l2749 0AA6  
                   l2685 0926                     l2677 08EC                     l2669 08D6  
                   l2757 0B7C                     l2597 06D8                     l2589 069C  
                   l1983 1AEC                     l1975 1AE6                     l1991 0F56  
                   l2791 0C94                     l2783 0C6C                     l2775 0C00  
                   l2767 0BBC                     l2759 0B90                     l2687 092E  
                   l2679 08FE                     l2599 06DC                     l1993 0F78  
                   l1985 0F08                     l2793 0C98                     l2785 0C76  
                   l2769 0BD8                     l2777 0C08                     l2697 0956  
                   l1995 0F94                     l1987 0F24                     l2795 0C9C  
                   l2787 0C80                     l2779 0C0C                     l2699 0958  
                   l1997 0FAE                     l1989 0F36                     l2789 0C8A  
                   l1999 0FCE                     l2799 0CB0                     u2000 152A  
                   u2001 1526                     u2010 1544                     u2011 1540  
                   u2020 156A                     u2100 1656                     u1300 0F24  
                   u2021 1566                     u2101 1652                     u1301 0F20  
                   u2030 1588                     u2110 167A                     u1310 0F36  
                   u2031 1584                     u2111 1676                     u1311 0F32  
                   u2040 15A4                     u2041 15A0                     u2201 0654  
                   u2050 15CA                     u2051 15C6                     u2211 0666  
                   u2060 15EE                     u1420 1084                     u1404 1038  
                   u1340 0F94                     u1324 0F48                     u1500 1AE4  
                   u2300 0808                     u2061 15EA                     u1421 1080  
                   u1405 1034                     u1341 0F90                     u1325 0F44  
                   u1501 1AE0                     u2301 0804                     u2221 0678  
                   u2070 1608                     u1430 109E                     u1414 1058  
                   u1350 0FAE                     u1334 0F68                     u1510 18E4  
                   u2310 0822                     u2230 06CE                     u2071 1604  
                   u1431 109A                     u1415 1054                     u1351 0FAA  
                   u1335 0F64                     u1511 18E0                     u2311 081E  
                   u2231 06CA                     u2080 1622                     u1520 18FC  
                   u2400 0AC6                     u2320 08B8                     u2240 071A  
                   u2081 161E                     u1521 18F8                     u2401 0AC2  
                   u2321 08B4                     u2241 0716                     u2090 1640  
                   u1290 1AFC                     u1530 1926                     u2410 0B90  
                   u2330 091E                     u2250 072C                     u2091 163C  
                   u1291 1AF8                     u1531 1922                     u2411 0B8C  
                   u2331 091A                     u2251 0728                     u1460 10FC  
                   u1444 10B0                     u1380 100C                     u1364 0FC0  
                   u1700 0EAE                     u1620 0DBE                     u1604 0D6E  
                   u1540 0CD6                     u2420 0BA4                     u2340 094A  
                   u2260 0750                     u1461 10F8                     u1445 10AC  
                   u1381 1008                     u1365 0FBC                     u1701 0EAA  
                   u1621 0DBA                     u1605 0D6A                     u1541 0CD2  
                   u2421 0BA0                     u2341 0946                     u2261 074C  
                   u2181 0624                     u1470 1116                     u1454 10D0  
                   u1390 1026                     u1374 0FE0                     u1710 0EC0  
                   u1630 0DD0                     u1614 0D92                     u1550 0CE8  
                   u2430 0BD8                     u2350 098C                     u2270 0770  
                   u1471 1112                     u1455 10CC                     u1391 1022  
                   u1375 0FDC                     u1711 0EBC                     u1631 0DCC  
                   u1615 0D8E                     u1551 0CE4                     u2431 0BD4  
                   u2351 0988                     u2271 076C                     u2191 0636  
                   u1800 16E4                     u2440 0C00                     u2360 09A4  
                   u2280 07B0                     u1801 16E0                     u2441 0BFC  
                   u2361 09A0                     u2281 07AC                     u1810 16F6  
                   u2450 0CAC                     u2370 09E4                     u2290 07FA  
                   u1811 16F2                     u2451 0CA8                     u2371 09E0  
                   u2291 07F6                     u1900 11FC                     u1484 1128  
                   u1740 176E                     u1724 0ED6                     u1660 0E36  
                   u1644 0DE6                     u1580 0D46                     u1564 0CFA  
                   u1820 1996                     u2380 0A78                     u1901 11F8  
                   u1485 1124                     u1741 176A                     u1725 0ED2  
                   u1661 0E32                     u1645 0DE2                     u1581 0D42  
                   u1565 0CF6                     u1821 1992                     u2381 0A74  
                   u1494 1148                     u1750 177E                     u1734 0EFA  
                   u1670 0E48                     u1654 0E0A                     u1590 0D58  
                   u1574 0D1A                     u1830 19AA                     u2390 0A86  
                   u1495 1144                     u1751 177A                     u1735 0EF6  
                   u1671 0E44                     u1655 0E06                     u1591 0D54  
                   u1575 0D16                     u1831 19A6                     u2391 0A82  
                   u1840 19C0                     u1841 19BC                     u1930 1272  
                   u1914 121A                     u1770 1974                     u1850 19D6  
                   u1931 126E                     u1915 1214                     u1771 1970  
                   u1851 19D2                     u1940 1284                     u1924 124A  
                   u1684 0E5E                     u1780 16BA                     u1764 1944  
                   u1941 1280                     u1925 1244                     u1685 0E5A  
                   u1781 16B2                     u1765 1940                     u1950 129C  
                   u1694 0E82                     u1951 1298                     u1695 0E7E  
                   u1960 12BE                     u1880 11CC                     u1864 1178  
                   u1961 12BA                     u1881 11C8                     u1865 1174  
                   u1970 1824                     u1874 1198                     u1794 16C6  
                   u1971 1820                     u1875 1194                     u1795 16C2  
                   u1980 183C                     u1788 16BC                     u1981 1838  
                   u1990 1866                     u1894 11E2                     u1991 1862  
                   u1895 11DE                     _date 00CD                     _getd 1B32  
                   _getu 1B3E                     _main 0612                     _time 00C3  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
                  ?_getd 0001                    ?_getu 0001                    ?_main 0001  
        __end_of___awdiv 15DC          __end_of___awmod 168C          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD          __end_of_lcdData 1A86  
        __end_of_lcdInit 1804                    _delay 18C8          __end_of_pinMode 0F08  
                  _valor 0601                    _rtc_r 1420                    main@i 006B  
                  main@j 006D                    main@k 0059                    main@o 0052  
                  main@x 005E                    main@y 0060                    tablat 000FF5  
        __end_of_ssdInit 1A32          __end_of_pwmInit 1B12                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8         __end_of_Delay2ms 1AE6  
   __end_of_digitalWrite 1156          __initialization 1868             __end_of_getd 1B3E  
           __end_of_getu 1B48             __end_of_main 0CBA       __size_of_Delay40us 0018  
          main@batimento 0054         __end_of_i2c_init 1B64         __end_of_i2c_stop 1B22  
                 ??_getd 0001                   ??_getu 0001                   ??_main 000F  
          __activetblptr 000002                   ?_delay 0001         ___awdiv@dividend 0001  
                 ?_rtc_r 0001       __size_of_i2c_start 0010                   _i2c_rb 168C  
                 _i2c_wb 1928                ??___awdiv 0005                ??___awmod 000D  
                 _kpInit 1B52                   _kpRead 1B48                   delay@i 0001  
                 delay@j 0003                   delay@k 0004                   clear_0 18AC  
                 clear_1 18B8         ___awdiv@quotient 0007          ___awmod@divisor 000B  
              ??_lcdData 0007                   isa$std 000001                   getd@nn 0001  
              ??_lcdInit 0009          ___awmod@counter 000D                   getu@nn 0001  
       __end_of_ssdDigit 19DC             __pdataCOMRAM 007B                ??_pinMode 0005  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_ssdInit 0007                ??_pwmInit 0001  
      __end_of_Delay40us 1AFE               __accesstop 0080  __end_of__initialization 18BE  
          ___rparam_used 000001              pinMode@type 0003           __pcstackCOMRAM 0001  
           __pidataBANK0 1A86            __end_of_delay 1928            __end_of_valor 0611  
          __end_of_rtc_r 1518           main@batimentos 0066        __end_of_i2c_start 1B32  
              ?_Delay2ms 0001                  ??_delay 0001                  ??_rtc_r 000A  
     __size_of_atraso_ms 0064               __pbssBANK0 00C3                ?_i2c_init 0001  
              ?_i2c_stop 0001    __size_of_digitalWrite 024E                  ?_i2c_rb 0001  
                ?_i2c_wb 0001               _lcdCommand 170E                  ?_kpInit 0001  
                ?_kpRead 0001               _kpDebounce 1156       __size_of_ssdUpdate 0150  
             ??_Delay2ms 0002             _digitalWrite 0F08                  i2c_rb@i 0009  
                i2c_wb@i 0008               ??_i2c_init 0001               ??_i2c_stop 0005  
                __Hparam 0000          __size_of_i2c_rb 0082          __size_of_i2c_wb 005C  
                __Lparam 0000                ?_ssdDigit 0001          kpDebounce@old_D 0006  
        kpDebounce@tempo 0075                  ___awdiv 1518                  ___awmod 15DC  
      __end_of_atraso_ms 1868             __psmallconst 0600          __size_of_kpInit 000A  
        __size_of_kpRead 000A              ssdDigit@val 0002              ssdDigit@pos 0001  
                __pcinit 1868                  _lcdData 1A32                  __ramtop 0600  
                _lcdInit 178C                  __ptext0 0612                  __ptext1 12D0  
                __ptext2 19DC                  __ptext3 1984                  __ptext4 1420  
                __ptext5 1928                  __ptext6 1B12                  __ptext7 1B22  
                __ptext8 168C                  __ptext9 18C8                  _display 007A  
                _pinMode 0CBA         ___awmod@dividend 0009                  _ssdInit 19DC  
                _pwmInit 1AFE                Delay2ms@i 0002                  main@con 0064  
                main@msg 0027      kpDebounce@valorNovo 0071     end_of_initialization 18BE  
          __Lmediumconst 0000        __end_of_ssdUpdate 1420               ??_ssdDigit 0002  
              _RCSTAbits 000FAB                  postdec1 000FE5              ?_lcdCommand 0001  
                postinc0 000FEE              ?_kpDebounce 0001                _PORTCbits 000F82  
              _TRISCbits 000F94                i2c_rb@ack 0007                i2c_rb@ret 0008  
              _Delay40us 1AE6                i2c_wb@val 0007                _TXSTAbits 000FAC  
         __end_of_i2c_rb 170E           __end_of_i2c_wb 1984               atraso_ms@i 0003  
             atraso_ms@j 0005               atraso_ms@k 0006            __pidataCOMRAM 1B64  
         __end_of_kpInit 1B5C           __end_of_kpRead 1B52      start_initialization 1868  
              _i2c_start 1B22        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 0001        __size_of_i2c_init 0008  
      __size_of_i2c_stop 0010                 ??_i2c_rb 0005                 ??_i2c_wb 0005  
               ??_kpInit 0001                 ??_kpRead 0003              __pdataBANK0 0080  
            __pbssCOMRAM 006F               pinMode@pin 0001               ?_i2c_start 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
               ?_lcdData 0001                 ?_lcdInit 0001            lcdCommand@cmd 0008  
              _atraso_ms 1804              __smallconst 0600                 ?_pinMode 0001  
               ?_ssdInit 0001                 ?_pwmInit 0001           __size_of_delay 0060  
         __size_of_rtc_r 00F8           atraso_ms@valor 0001              ??_Delay40us 0001  
               _PIR1bits 000F9E             ??_lcdCommand 0007                main@F2670 00A7  
              main@F2672 007B                main@F2674 00BB                main@F2668 0098  
              main@F2676 0080                main@F2678 00B3                _ssdUpdate 12D0  
           ??_kpDebounce 0001               ?_atraso_ms 0001          lcdCommand@old_D 0007  
  kpDebounce@valorAntigo 006F                main@conte 005B                main@contp 0057  
               _Delay2ms 1ACA                main@passo 0067                main@tecla 0069  
              main@tempo 005D              ??_i2c_start 0005                copy_data0 187C  
     __end_of_lcdCommand 178C             lcdData@old_D 0008                 _i2c_init 1B5C  
           lcdData@valor 0007                 _i2c_stop 1B12       __end_of_kpDebounce 12D0  
               __Hrparam 0000                 __Lrparam 0000               ?_ssdUpdate 0001  
       __size_of___awdiv 00C4         __size_of___awmod 00B0         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E                 __ptext10 1B3E  
               __ptext11 1B32                 __ptext20 1B48                 __ptext12 1AFE  
               __ptext21 1B52                 __ptext13 178C                 __ptext22 1156  
               __ptext14 0CBA                 __ptext23 1B5C                 __ptext15 170E  
               __ptext24 1804                 __ptext16 1ACA                 __ptext25 15DC  
               __ptext17 1A32                 __ptext26 1518                 __ptext18 0F08  
               __ptext19 1AE6         __size_of_ssdInit 0056         __size_of_pwmInit 0014  
          __size_of_getd 000C            __size_of_getu 000A            __size_of_main 06A8  
             Delay40us@i 0001                 _ssdDigit 1984                 isa$xinst 000000  
               main@cont 0062                 main@msg1 0036                 main@msg2 0042  
               main@msg3 000F                 main@msg4 004A              ??_atraso_ms 0003  
          ?_digitalWrite 0001        digitalWrite@value 0003                 rtc_r@tmp 000A  
            ??_ssdUpdate 0007              kpDebounce@i 000A              kpDebounce@j 0009  
            kpDebounce@k 0007           ??_digitalWrite 0005          digitalWrite@pin 0001  
      _valor@keypad$F112 0073  
